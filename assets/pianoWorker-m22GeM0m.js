var Fx=Object.defineProperty;var Ox=(bs,Sr,un)=>Sr in bs?Fx(bs,Sr,{enumerable:!0,configurable:!0,writable:!0,value:un}):bs[Sr]=un;var re=(bs,Sr,un)=>(Ox(bs,typeof Sr!="symbol"?Sr+"":Sr,un),un);(function(){"use strict";const bs=new Map,Sr=[],un=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=bs.get(e);if(s===void 0)bs.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const i=Sr.indexOf(e);i!==-1&&Sr.splice(i,1);for(let n=0;n<Sr.length;n++)if(bs.get(Sr[n]).priority<=t){Sr.splice(n,0,e);return}Sr.push(e)}return}throw new TypeError("not a valid backend")},Sb=async e=>{const r=bs.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},$b=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Sr:t;let i;const n=[],o=new Set;for(const l of s){const c=await Sb(l);typeof c=="string"?n.push({name:l,err:c}):(i||(i=c),i===c&&o.add(l))}if(!i)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[i,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]},kb="1.22.0-dev.20250306-aafa8d170a";let Ou="warning";const es={wasm:{},webgl:{},webgpu:{},versions:{common:kb},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ou=e}},get logLevel(){return Ou}};Object.defineProperty(es,"logLevel",{enumerable:!0});const Ib=es,Ab=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let i,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[3]):(i=e.dims[3],n=e.dims[2]);const o=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm;let l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));const p=n*i;let u=0,h=p,g=p*2,f=-1;o==="RGBA"?(u=0,h=p,g=p*2,f=p*3):o==="RGB"?(u=0,h=p,g=p*2):o==="RBG"&&(u=0,g=p,h=p*2);for(let P=0;P<n;P++)for(let A=0;A<i;A++){const v=(e.data[u++]-c[0])*l[0],y=(e.data[h++]-c[1])*l[1],k=(e.data[g++]-c[2])*l[2],E=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+v+","+y+","+k+","+E+")",s.fillRect(A,P,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Fb=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let i,n,o;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[1],o=e.dims[3]):(i=e.dims[3],n=e.dims[2],o=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const u=n*i;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const h=4;let g=0,f=1,P=2,A=3,v=0,y=u,k=u*2,E=-1;a==="RGBA"?(v=0,y=u,k=u*2,E=u*3):a==="RGB"?(v=0,y=u,k=u*2):a==="RBG"&&(v=0,k=u,y=u*2),s=t.createImageData(i,n);for(let M=0;M<n*i;g+=h,f+=h,P+=h,A+=h,M++)s.data[g]=(e.data[v++]-p[0])*c[0],s.data[f]=(e.data[y++]-p[1])*c[1],s.data[P]=(e.data[k++]-p[2])*c[2],s.data[A]=E===-1?255:(e.data[E++]-p[3])*c[3]}else throw new Error("Can not access image data");return s},ld=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,i=r.norm??{mean:255,bias:0};let n,o;typeof i.mean=="number"?n=[i.mean,i.mean,i.mean,i.mean]:n=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let u=4,h=0,g=1,f=2,P=3,A=0,v=c,y=c*2,k=-1;a==="RGB"&&(u=3,h=0,g=1,f=2,P=-1),l==="RGBA"?k=c*3:l==="RBG"?(A=0,y=c,v=c*2):l==="BGR"&&(y=0,v=c,A=c*2);for(let M=0;M<c;M++,h+=u,f+=u,g+=u,P+=u)p[A++]=(e[h]+o[0])/n[0],p[v++]=(e[g]+o[1])/n[1],p[y++]=(e[f]+o[2])/n[2],k!==-1&&P!==-1&&(p[k++]=(e[P]+o[3])/n[3]);return l==="RGBA"?new Gr("float32",p,[1,4,t,s]):new Gr("float32",p,[1,3,t,s])},Ob=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string";let o,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const u=c(p);if(u!=null){let h=e.height,g=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(h=r.resizedHeight,g=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=h,a.width=g}else a.tensorFormat="RGBA",a.height=h,a.width=g;u.drawImage(e,0,0),o=u.getImageData(0,0,g,h).data}else throw new Error("Can not access image data")}else if(s){let p,u;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,u=r.resizedWidth):(p=e.height,u=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=u,r!==void 0){const h=l();h.width=u,h.height=p;const g=c(h);if(g!=null)g.putImageData(e,0,0),o=g.getImageData(0,0,u,p).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const u=c(p);if(u!=null){const h=e.height,g=e.width;return u.drawImage(e,0,0,g,h),o=u.getImageData(0,0,g,h).data,a.height=h,a.width=g,ld(o,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,u)=>{const h=l(),g=c(h);if(!e||!g)return u();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{h.width=f.width,h.height=f.height,g.drawImage(f,0,0,h.width,h.height);const P=g.getImageData(0,0,h.width,h.height);a.height=h.height,a.width=h.width,p(ld(P.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return ld(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Db=(e,r)=>{const{width:t,height:s,download:i,dispose:n}=r,o=[1,s,t,4];return new Gr({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:n})},Lb=(e,r)=>{const{dataType:t,dims:s,download:i,dispose:n}=r;return new Gr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:i,dispose:n})},zb=(e,r)=>{const{dataType:t,dims:s,download:i,dispose:n}=r;return new Gr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:i,dispose:n})},Bb=(e,r,t)=>new Gr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),zn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ha=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Du=!1;const Rb=()=>{if(!Du){Du=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(zn.set("int64",BigInt64Array),ha.set(BigInt64Array,"int64")),r&&(zn.set("uint64",BigUint64Array),ha.set(BigUint64Array,"uint64")),s?(zn.set("float16",t),ha.set(t,"float16")):zn.set("float16",Uint16Array)}},Nb=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},jb=(e,r)=>{switch(e.location){case"cpu":return new Gr(e.type,e.data,r);case"cpu-pinned":return new Gr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Gr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Gr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Gr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let Gr=class{constructor(r,t,s){Rb();let i,n;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,i=r.type,n=r.dims,r.location){case"cpu-pinned":{const a=zn.get(i);if(!a)throw new TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(i!=="float32")throw new TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="uint8"&&i!=="bool"&&i!=="uint4"&&i!=="int4")throw new TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="uint64"&&i!=="int8"&&i!=="uint8"&&i!=="bool"&&i!=="uint4"&&i!=="int4")throw new TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(i=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const c=zn.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?a=c.from(t,BigInt):a=c.from(t)}else if(t instanceof c)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&c!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${i} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")i="string",a=r;else if(c==="boolean")i="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)i="uint8",a=Uint8Array.from(r);else{const c=ha.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);i=c,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");n=l,this.cpuData=a,this.dataLocation="cpu"}const o=Nb(n);if(this.cpuData&&o!==this.cpuData.length&&!((i==="uint4"||i==="int4")&&Math.ceil(o/2)===this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=n,this.size=o}static async fromImage(r,t){return Ob(r,t)}static fromTexture(r,t){return Db(r,t)}static fromGpuBuffer(r,t){return Lb(r,t)}static fromMLTensor(r,t){return zb(r,t)}static fromPinnedBuffer(r,t,s){return Bb(r,t,s)}toDataURL(r){return Ab(this,r)}toImageData(r){return Fb(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return jb(this,r)}};const Bn=Gr,Lu=(e,r)=>{(typeof es.trace>"u"?!es.wasm.trace:!es.trace)||console.timeStamp(`${e}::ORT::${r}`)},zu=(e,r)=>{var i;const t=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),Lu("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},dd=e=>{(typeof es.trace>"u"?!es.wasm.trace:!es.trace)||zu("BEGIN",e)},cd=e=>{(typeof es.trace>"u"?!es.wasm.trace:!es.trace)||zu("END",e)};var Vb=Object.freeze({__proto__:null,InferenceSession:class Eb{constructor(r){this.handler=r}async run(r,t,s){dd();const i={};let n={};if(typeof r!="object"||r===null||r instanceof Bn||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Bn)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const u of this.outputNames)if(p.indexOf(u)!==-1){const h=t[u];(h===null||h instanceof Bn)&&(c=!0,o=!1,i[u]=h)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(o)for(const c of this.outputNames)i[c]=null;const a=await this.handler.run(r,i,n),l={};for(const c in a)if(Object.hasOwnProperty.call(a,c)){const p=a[c];p instanceof Bn?l[c]=p:l[c]=new Bn(p.type,p.data,p.dims)}return cd(),l}async release(){return this.handler.dispose()}static async create(r,t,s,i){dd();let n,o={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let u=0,h=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(h=r.byteLength-u,typeof s=="number"){if(h=s,!Number.isSafeInteger(h))throw new RangeError("'byteLength' must be an integer.");if(h<=0||u+h>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-u}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,u,h)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await $b(o),c=await a.createInferenceSessionHandler(n,l);return cd(),new Eb(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}},TRACE:Lu,TRACE_FUNC_BEGIN:dd,TRACE_FUNC_END:cd,Tensor:Bn,env:Ib,registerBackend:un});/*!
 * ONNX Runtime Web v1.22.0-dev.20250306-ccf8fdd9ea
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var ud=Object.defineProperty,Ub=Object.getOwnPropertyDescriptor,Wb=Object.getOwnPropertyNames,Gb=Object.prototype.hasOwnProperty,Kb=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Ve=(e,r)=>()=>(e&&(r=e(e=0)),r),Ci=(e,r)=>{for(var t in r)ud(e,t,{get:r[t],enumerable:!0})},Hb=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of Wb(r))!Gb.call(e,i)&&i!==t&&ud(e,i,{get:()=>r[i],enumerable:!(s=Ub(r,i))||s.enumerable});return e},ma=e=>Hb(ud({},"__esModule",{value:!0}),e),Si,Ws,pn,Bu,Ru,Nu=Ve(()=>{Si=new Map,Ws=[],pn=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=Si.get(e);if(s===void 0)Si.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let i=Ws.indexOf(e);i!==-1&&Ws.splice(i,1);for(let n=0;n<Ws.length;n++)if(Si.get(Ws[n]).priority<=t){Ws.splice(n,0,e);return}Ws.push(e)}return}throw new TypeError("not a valid backend")},Bu=async e=>{let r=Si.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},Ru=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Ws:t,i,n=[],o=new Set;for(let l of s){let c=await Bu(l);typeof c=="string"?n.push({name:l,err:c}):(i||(i=c),i===c&&o.add(l))}if(!i)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[i,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]}}),qb=Ve(()=>{Nu()}),ju,Qb=Ve(()=>{ju="1.22.0-dev.20250306-aafa8d170a"}),pd,Kr,Vu=Ve(()=>{Qb(),pd="warning",Kr={wasm:{},webgl:{},webgpu:{},versions:{common:ju},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);pd=e}},get logLevel(){return pd}},Object.defineProperty(Kr,"logLevel",{enumerable:!0})}),Ut,Xb=Ve(()=>{Vu(),Ut=Kr}),Uu,Wu,Jb=Ve(()=>{Uu=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let i,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[3]):(i=e.dims[3],n=e.dims[2]);let o=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm,l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));let p=n*i,u=0,h=p,g=p*2,f=-1;o==="RGBA"?(u=0,h=p,g=p*2,f=p*3):o==="RGB"?(u=0,h=p,g=p*2):o==="RBG"&&(u=0,g=p,h=p*2);for(let P=0;P<n;P++)for(let A=0;A<i;A++){let v=(e.data[u++]-c[0])*l[0],y=(e.data[h++]-c[1])*l[1],k=(e.data[g++]-c[2])*l[2],E=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+v+","+y+","+k+","+E+")",s.fillRect(A,P,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Wu=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let i,n,o;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[1],o=e.dims[3]):(i=e.dims[3],n=e.dims[2],o=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let u=n*i;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,g=0,f=1,P=2,A=3,v=0,y=u,k=u*2,E=-1;a==="RGBA"?(v=0,y=u,k=u*2,E=u*3):a==="RGB"?(v=0,y=u,k=u*2):a==="RBG"&&(v=0,k=u,y=u*2),s=t.createImageData(i,n);for(let M=0;M<n*i;g+=h,f+=h,P+=h,A+=h,M++)s.data[g]=(e.data[v++]-p[0])*c[0],s.data[f]=(e.data[y++]-p[1])*c[1],s.data[P]=(e.data[k++]-p[2])*c[2],s.data[A]=E===-1?255:(e.data[E++]-p[3])*c[3]}else throw new Error("Can not access image data");return s}}),_a,Gu,Ku,Hu,qu,Qu,Yb=Ve(()=>{md(),_a=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,i=r.norm??{mean:255,bias:0},n,o;typeof i.mean=="number"?n=[i.mean,i.mean,i.mean,i.mean]:n=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),u=4,h=0,g=1,f=2,P=3,A=0,v=c,y=c*2,k=-1;a==="RGB"&&(u=3,h=0,g=1,f=2,P=-1),l==="RGBA"?k=c*3:l==="RBG"?(A=0,y=c,v=c*2):l==="BGR"&&(y=0,v=c,A=c*2);for(let E=0;E<c;E++,h+=u,f+=u,g+=u,P+=u)p[A++]=(e[h]+o[0])/n[0],p[v++]=(e[g]+o[1])/n[1],p[y++]=(e[f]+o[2])/n[2],k!==-1&&P!==-1&&(p[k++]=(e[P]+o[3])/n[3]);return l==="RGBA"?new Br("float32",p,[1,4,t,s]):new Br("float32",p,[1,3,t,s])},Gu=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string",o,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let u=c(p);if(u!=null){let h=e.height,g=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(h=r.resizedHeight,g=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=h,a.width=g}else a.tensorFormat="RGBA",a.height=h,a.width=g;u.drawImage(e,0,0),o=u.getImageData(0,0,g,h).data}else throw new Error("Can not access image data")}else if(s){let p,u;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,u=r.resizedWidth):(p=e.height,u=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=u,r!==void 0){let h=l();h.width=u,h.height=p;let g=c(h);if(g!=null)g.putImageData(e,0,0),o=g.getImageData(0,0,u,p).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let u=c(p);if(u!=null){let h=e.height,g=e.width;return u.drawImage(e,0,0,g,h),o=u.getImageData(0,0,g,h).data,a.height=h,a.width=g,_a(o,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,u)=>{let h=l(),g=c(h);if(!e||!g)return u();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{h.width=f.width,h.height=f.height,g.drawImage(f,0,0,h.width,h.height);let P=g.getImageData(0,0,h.width,h.height);a.height=h.height,a.width=h.width,p(_a(P.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return _a(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Ku=(e,r)=>{let{width:t,height:s,download:i,dispose:n}=r,o=[1,s,t,4];return new Br({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:n})},Hu=(e,r)=>{let{dataType:t,dims:s,download:i,dispose:n}=r;return new Br({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:i,dispose:n})},qu=(e,r)=>{let{dataType:t,dims:s,download:i,dispose:n}=r;return new Br({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:i,dispose:n})},Qu=(e,r,t)=>new Br({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),hn,$i,hd,Xu,Zb=Ve(()=>{hn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),$i=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),hd=!1,Xu=()=>{if(!hd){hd=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(hn.set("int64",BigInt64Array),$i.set(BigInt64Array,"int64")),r&&(hn.set("uint64",BigUint64Array),$i.set(BigUint64Array,"uint64")),s?(hn.set("float16",t),$i.set(t,"float16")):hn.set("float16",Uint16Array)}}}),Ju,Yu,ev=Ve(()=>{md(),Ju=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Yu=(e,r)=>{switch(e.location){case"cpu":return new Br(e.type,e.data,r);case"cpu-pinned":return new Br({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Br({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Br({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Br({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Br,md=Ve(()=>{Jb(),Yb(),Zb(),ev(),Br=class{constructor(e,r,t){Xu();let s,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=hn.get(s);if(!o)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");o=r}else{let l=hn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?o=l.from(r,BigInt):o=l.from(r)}else if(r instanceof l)o=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)o=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",o=e;else if(l==="boolean")s="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",o=Uint8Array.from(e);else{let l=$i.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,o=e}if(a===void 0)a=[o.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");i=a,this.cpuData=o,this.dataLocation="cpu"}let n=Ju(i);if(this.cpuData&&n!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(n/2)===this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=i,this.size=n}static async fromImage(e,r){return Gu(e,r)}static fromTexture(e,r){return Ku(e,r)}static fromGpuBuffer(e,r){return Hu(e,r)}static fromMLTensor(e,r){return qu(e,r)}static fromPinnedBuffer(e,r,t){return Qu(e,r,t)}toDataURL(e){return Uu(this,e)}toImageData(e){return Wu(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Yu(this,e)}}}),ts,Zu=Ve(()=>{md(),ts=Br}),ki,_d,rs,Hr,ep=Ve(()=>{Vu(),ki=(e,r)=>{(typeof Kr.trace>"u"?!Kr.wasm.trace:!Kr.trace)||console.timeStamp(`${e}::ORT::${r}`)},_d=(e,r)=>{var i;let t=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),ki("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},rs=e=>{(typeof Kr.trace>"u"?!Kr.wasm.trace:!Kr.trace)||_d("BEGIN",e)},Hr=e=>{(typeof Kr.trace>"u"?!Kr.wasm.trace:!Kr.trace)||_d("END",e)}}),tp,tv=Ve(()=>{Nu(),Zu(),ep(),tp=class Pb{constructor(r){this.handler=r}async run(r,t,s){rs();let i={},n={};if(typeof r!="object"||r===null||r instanceof ts||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof ts)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let u of this.outputNames)if(p.indexOf(u)!==-1){let h=t[u];(h===null||h instanceof ts)&&(c=!0,o=!1,i[u]=h)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(o)for(let c of this.outputNames)i[c]=null;let a=await this.handler.run(r,i,n),l={};for(let c in a)if(Object.hasOwnProperty.call(a,c)){let p=a[c];p instanceof ts?l[c]=p:l[c]=new ts(p.type,p.data,p.dims)}return Hr(),l}async release(){return this.handler.dispose()}static async create(r,t,s,i){rs();let n,o={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,u=0,h=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(h=r.byteLength-u,typeof s=="number"){if(h=s,!Number.isSafeInteger(h))throw new RangeError("'byteLength' must be an integer.");if(h<=0||u+h>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-u}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,u,h)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await Ru(o),c=await a.createInferenceSessionHandler(n,l);return Hr(),new Pb(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),fd,rv=Ve(()=>{tv(),fd=tp}),sv=Ve(()=>{}),nv=Ve(()=>{}),iv=Ve(()=>{}),ov=Ve(()=>{}),rp={};Ci(rp,{InferenceSession:()=>fd,TRACE:()=>ki,TRACE_FUNC_BEGIN:()=>rs,TRACE_FUNC_END:()=>Hr,Tensor:()=>ts,env:()=>Ut,registerBackend:()=>pn});var ss=Ve(()=>{qb(),Xb(),rv(),Zu(),sv(),nv(),ep(),iv(),ov()}),gd=Ve(()=>{}),sp={};Ci(sp,{default:()=>np});var wd,yd,np,av=Ve(()=>{var e;Dw(),mn(),Cd(),wd="ort-wasm-proxy-worker",yd=((e=globalThis.self)==null?void 0:e.name)===wd,yd&&(self.onmessage=r=>{let{type:t,in:s}=r.data;try{switch(t){case"init-wasm":kd(s.wasm).then(()=>{Rc(s).then(()=>{postMessage({type:t})},i=>{postMessage({type:t,err:i})})},i=>{postMessage({type:t,err:i})});break;case"init-ep":{let{epName:i,env:n}=s;Nc(n,i).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})});break}case"copy-from":{let{buffer:i}=s,n=Fa(i);postMessage({type:t,out:n});break}case"create":{let{model:i,options:n}=s;jc(i,n).then(o=>{postMessage({type:t,out:o})},o=>{postMessage({type:t,err:o})});break}case"release":Vc(s),postMessage({type:t});break;case"run":{let{sessionId:i,inputIndices:n,inputs:o,outputIndices:a,options:l}=s;Wc(i,n,o,a,new Array(a.length).fill(null),l).then(c=>{c.some(p=>p[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},Kc([...o,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":Gc(s),postMessage({type:t});break;default:}}catch(i){postMessage({type:t,err:i})}}),np=yd?null:r=>new Worker(r??Rr,{type:"module",name:wd})}),ip={};Ci(ip,{default:()=>op});var Md,bd,op,ap,lv=Ve(()=>{var e,r;bd=(Md=self.location.href,async function(t={}){var ca;var s,i,n=t,o=new Promise((d,m)=>{s=d,i=m}),a=typeof window=="object",l=typeof WorkerGlobalScope<"u",c=l&&((ca=self.name)==null?void 0:ca.startsWith("em-pthread"));n.mountExternalData=(d,m)=>{d.startsWith("./")&&(d=d.substring(2)),(n.Bd||(n.Bd=new Map)).set(d,m)},n.unmountExternalData=()=>{delete n.Bd};var p=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let u=()=>{let d=(x,C,I)=>(...W)=>{let ne=Rt,ye=C==null?void 0:C();W=x(...W);let Ee=C==null?void 0:C();return ye!==Ee&&(x=Ee,I(ye),C=I=null),Rt!=ne?new Promise((ze,Ye)=>{sn={resolve:ze,reject:Ye}}):W},m=x=>async(...C)=>{var I;try{if(n.Cd)throw Error("Session already started");let W=n.Cd={be:C[0],errors:[]},ne=await x(...C);if(n.Cd!==W)throw Error("Session mismatch");(I=n.Dd)==null||I.flush();let ye=W.errors;if(0<ye.length){let Ee=await Promise.all(ye);if(Ee=Ee.filter(ze=>ze),0<Ee.length)throw Error(Ee.join(`
`))}return ne}finally{n.Cd=null}};n._OrtCreateSession=d(n._OrtCreateSession,()=>n._OrtCreateSession,x=>n._OrtCreateSession=x),n._OrtRun=m(d(n._OrtRun,()=>n._OrtRun,x=>n._OrtRun=x)),n._OrtRunWithBinding=m(d(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,x=>n._OrtRunWithBinding=x)),n._OrtBindInput=d(n._OrtBindInput,()=>n._OrtBindInput,x=>n._OrtBindInput=x),u=void 0};n.jsepInit=(d,m)=>{if(u==null||u(),d==="webgpu"){[n.Dd,n.Rd,n.Vd,n.Hd,n.Ud,n.hc,n.Wd,n.Zd,n.Sd,n.Td,n.Xd]=m;let x=n.Dd;n.jsepRegisterBuffer=(C,I,W,ne)=>x.registerBuffer(C,I,W,ne),n.jsepGetBuffer=C=>x.getBuffer(C),n.jsepCreateDownloader=(C,I,W)=>x.createDownloader(C,I,W),n.jsepOnCreateSession=C=>{x.onCreateSession(C)},n.jsepOnReleaseSession=C=>{x.onReleaseSession(C)},n.jsepOnRunStart=C=>x.onRunStart(C),n.$d=(C,I)=>{x.upload(C,I)}}else if(d==="webnn"){[n.Dd,n.Yd,n.Id,n.jsepEnsureTensor,n.Jd,n.jsepDownloadTensor]=m,n.jsepReleaseTensorId=n.Id,n.jsepUploadTensor=n.Jd;let x=n.Dd;n.jsepOnRunStart=C=>x.onRunStart(C),n.jsepOnRunEnd=x.onRunEnd.bind(x),n.jsepRegisterMLContext=(C,I)=>{x.registerMLContext(C,I)},n.jsepOnReleaseSession=C=>{x.onReleaseSession(C)},n.jsepCreateMLTensorDownloader=(C,I)=>x.createMLTensorDownloader(C,I),n.jsepRegisterMLTensor=(C,I,W,ne)=>x.registerMLTensor(C,I,W,ne),n.jsepCreateMLContext=C=>x.createMLContext(C),n.jsepRegisterMLConstant=(C,I,W,ne,ye)=>x.registerMLConstant(C,I,W,ne,ye,n.Bd),n.jsepRegisterGraphInput=x.registerGraphInput.bind(x),n.jsepIsGraphInput=x.isGraphInput.bind(x),n.jsepCreateTemporaryTensor=x.createTemporaryTensor.bind(x)}};var h,g,f=Object.assign({},n),P=(d,m)=>{throw m},A="";(a||l)&&(l?A=self.location.href:typeof document<"u"&&document.currentScript&&(A=document.currentScript.src),Md&&(A=Md),A=A.startsWith("blob:")?"":A.slice(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(g=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),h=async d=>{if(he(d))return new Promise((x,C)=>{var I=new XMLHttpRequest;I.open("GET",d,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?x(I.response):C(I.status)},I.onerror=C,I.send(null)});var m=await fetch(d,{credentials:"same-origin"});if(m.ok)return m.arrayBuffer();throw Error(m.status+" : "+m.url)});var v=console.log.bind(console),y=console.error.bind(console),k=v,E=y;Object.assign(n,f),f=null;var M,w,T,$,z,R,Q,q,U,Z,H,J,ie,ae=n.wasmBinary,ce=!1,he=d=>d.startsWith("file://");function N(){return M.buffer!=$.buffer&&K(),$}function O(){return M.buffer!=$.buffer&&K(),z}function G(){return M.buffer!=$.buffer&&K(),R}function se(){return M.buffer!=$.buffer&&K(),Q}function X(){return M.buffer!=$.buffer&&K(),q}function we(){return M.buffer!=$.buffer&&K(),U}function fe(){return M.buffer!=$.buffer&&K(),Z}function ke(){return M.buffer!=$.buffer&&K(),ie}if(c){let d=function(m){try{var x=m.data,C=x.yd;if(C==="load"){let I=[];self.onmessage=W=>I.push(W),self.startWorker=()=>{postMessage({yd:"loaded"});for(let W of I)d(W);self.onmessage=d};for(let W of x.Od)n[W]&&!n[W].proxy||(n[W]=(...ne)=>{postMessage({yd:"callHandler",Nd:W,args:ne})},W=="print"&&(k=n[W]),W=="printErr"&&(E=n[W]));M=x.he,K(),He(x.ie)}else if(C==="run"){Os(x.xd),ti(x.xd,0,0,1,0,0),jt(),Ot(x.xd),Me||(ei(),Me=!0);try{Dr(x.de,x.Fd)}catch(I){if(I!="unwind")throw I}}else x.target!=="setimmediate"&&(C==="checkMailbox"?Me&&Vt():C&&(E(`worker: received unknown command ${C}`),E(x)))}catch(I){throw uo(),I}};var He,Me=!1;E=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({yd:"alert",text:m.join(" "),fe:An()})},self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=d}function K(){var d=M.buffer;n.HEAP8=$=new Int8Array(d),n.HEAP16=R=new Int16Array(d),n.HEAPU8=z=new Uint8Array(d),n.HEAPU16=Q=new Uint16Array(d),n.HEAP32=q=new Int32Array(d),n.HEAPU32=U=new Uint32Array(d),n.HEAPF32=Z=new Float32Array(d),n.HEAPF64=ie=new Float64Array(d),n.HEAP64=H=new BigInt64Array(d),n.HEAPU64=J=new BigUint64Array(d)}function j(){c?startWorker(n):Oe.Bb()}c||(M=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),K());var me,Pe=0,Te=null;function Ae(){if(--Pe==0&&Te){var d=Te;Te=null,d()}}function Ie(d){throw E(d="Aborted("+d+")"),ce=!0,d=new WebAssembly.RuntimeError(d+". Build with -sASSERTIONS for more info."),i(d),d}function Le(){return{a:{Ta:D,Va:We,W:Ds,la:dt,b:xs,u:Ts,R:Es,Za:Ls,d:mr,pb:et,g:Vr,T:kr,Ga:ps,lb:ms,nb:_s,Ha:Qr,Ea:Ps,wb:Qs,Da:Xs,pa:Js,mb:Ys,jb:fs,Fa:Zs,kb:en,Ma:Cs,za:En,eb:Pn,cb:Ss,ya:pe,V:F,N:V,db:Y,ma:ht,fb:Ct,zb:kt,hb:vr,qb:Yr,ab:xr,Aa:gs,yb:Ot,Ja:Gt,S:Zr,Wa:ws,$:Ra,H:Na,E:Va,l:Jr,F:Gi,B:Ga,X:Ki,J:Ka,v:Hi,O:Jc,D:Ha,t:qi,A:qa,z:Gn,w:Qa,r:Xa,tb:Ja,ub:Ya,vb:Kn,rb:Hn,sb:Yi,bb:Zi,Oa:Yc,La:Zc,y:el,ja:tl,Ba:rl,Ka:Za,qa:sl,Ia:nl,ib:Xn,U:Vs,fa:il,Sa:ol,gb:al,Qa:to,Pa:ll,Ab:so,Ca:Yn,ob:je,aa:no,oa:io,xb:Zn,na:oo,$a:Sl,ia:aa,sa:Bl,ga:ra,da:Al,ua:xi,p:El,e:hl,c:ul,ea:na,f:ml,n:_l,k:ea,Y:gl,ka:xl,j:Pl,wa:kl,Ra:da,ca:oa,Ua:Nl,P:Il,K:Zo,_:ia,Q:Cl,Z:Ll,x:wl,m:pl,va:Ol,i:Jo,h:fl,ra:Rl,ta:la,o:Yo,q:yl,s:bl,I:vl,C:ta,L:Tl,xa:$l,_a:sa,G:Dl,Ya:vi,ba:zl,M:Ml,Xa:Fl,ha:ao,a:M,Na:Re}}}var Ne={1320978:()=>typeof wasmOffsetConverter<"u",1321035:(d,m,x,C,I)=>{if(n===void 0||!n.Bd)return 1;if((d=zt(Number(d>>>0))).startsWith("./")&&(d=d.substring(2)),!(d=n.Bd.get(d)))return 2;if(m=Number(m>>>0),x=Number(x>>>0),C=Number(C>>>0),m+x>d.byteLength)return 3;try{let W=d.subarray(m,m+x);switch(I){case 0:O().set(W,C>>>0);break;case 1:n.$d(C,W);break;default:return 4}return 0}catch{return 4}},1321750:(d,m,x)=>{n.Jd(d,O().subarray(m>>>0,m+x>>>0))},1321813:()=>n.Yd(),1321854:d=>{n.Id(d)},1321890:()=>{n.Sd()},1321921:()=>{n.Td()},1321950:()=>{n.Xd()},1321975:d=>n.Rd(d),1322008:d=>n.Vd(d),1322040:(d,m,x)=>{n.Hd(Number(d),Number(m),Number(x),!0)},1322103:(d,m,x)=>{n.Hd(Number(d),Number(m),Number(x))},1322160:d=>{n.hc("Abs",d,void 0)},1322211:d=>{n.hc("Neg",d,void 0)},1322262:d=>{n.hc("Floor",d,void 0)},1322315:d=>{n.hc("Ceil",d,void 0)},1322367:d=>{n.hc("Reciprocal",d,void 0)},1322425:d=>{n.hc("Sqrt",d,void 0)},1322477:d=>{n.hc("Exp",d,void 0)},1322528:d=>{n.hc("Erf",d,void 0)},1322579:d=>{n.hc("Sigmoid",d,void 0)},1322634:(d,m,x)=>{n.hc("HardSigmoid",d,{alpha:m,beta:x})},1322713:d=>{n.hc("Log",d,void 0)},1322764:d=>{n.hc("Sin",d,void 0)},1322815:d=>{n.hc("Cos",d,void 0)},1322866:d=>{n.hc("Tan",d,void 0)},1322917:d=>{n.hc("Asin",d,void 0)},1322969:d=>{n.hc("Acos",d,void 0)},1323021:d=>{n.hc("Atan",d,void 0)},1323073:d=>{n.hc("Sinh",d,void 0)},1323125:d=>{n.hc("Cosh",d,void 0)},1323177:d=>{n.hc("Asinh",d,void 0)},1323230:d=>{n.hc("Acosh",d,void 0)},1323283:d=>{n.hc("Atanh",d,void 0)},1323336:d=>{n.hc("Tanh",d,void 0)},1323388:d=>{n.hc("Not",d,void 0)},1323439:(d,m,x)=>{n.hc("Clip",d,{min:m,max:x})},1323508:d=>{n.hc("Clip",d,void 0)},1323560:(d,m)=>{n.hc("Elu",d,{alpha:m})},1323618:d=>{n.hc("Gelu",d,void 0)},1323670:d=>{n.hc("Relu",d,void 0)},1323722:(d,m)=>{n.hc("LeakyRelu",d,{alpha:m})},1323786:(d,m)=>{n.hc("ThresholdedRelu",d,{alpha:m})},1323856:(d,m)=>{n.hc("Cast",d,{to:m})},1323914:d=>{n.hc("Add",d,void 0)},1323965:d=>{n.hc("Sub",d,void 0)},1324016:d=>{n.hc("Mul",d,void 0)},1324067:d=>{n.hc("Div",d,void 0)},1324118:d=>{n.hc("Pow",d,void 0)},1324169:d=>{n.hc("Equal",d,void 0)},1324222:d=>{n.hc("Greater",d,void 0)},1324277:d=>{n.hc("GreaterOrEqual",d,void 0)},1324339:d=>{n.hc("Less",d,void 0)},1324391:d=>{n.hc("LessOrEqual",d,void 0)},1324450:(d,m,x,C,I)=>{n.hc("ReduceMean",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1324625:(d,m,x,C,I)=>{n.hc("ReduceMax",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1324799:(d,m,x,C,I)=>{n.hc("ReduceMin",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1324973:(d,m,x,C,I)=>{n.hc("ReduceProd",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325148:(d,m,x,C,I)=>{n.hc("ReduceSum",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325322:(d,m,x,C,I)=>{n.hc("ReduceL1",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325495:(d,m,x,C,I)=>{n.hc("ReduceL2",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325668:(d,m,x,C,I)=>{n.hc("ReduceLogSum",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325845:(d,m,x,C,I)=>{n.hc("ReduceSumSquare",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1326025:(d,m,x,C,I)=>{n.hc("ReduceLogSumExp",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1326205:d=>{n.hc("Where",d,void 0)},1326258:(d,m,x)=>{n.hc("Transpose",d,{perm:m?Array.from(X().subarray(Number(m)>>>0,Number(x)>>>0)):[]})},1326382:(d,m,x,C)=>{n.hc("DepthToSpace",d,{blocksize:m,mode:zt(x),format:C?"NHWC":"NCHW"})},1326515:(d,m,x,C)=>{n.hc("DepthToSpace",d,{blocksize:m,mode:zt(x),format:C?"NHWC":"NCHW"})},1326648:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt,Fr)=>{n.hc("ConvTranspose",d,{format:Ee?"NHWC":"NCHW",autoPad:m,dilations:[x],group:C,kernelShape:[I],pads:[W,ne],strides:[ye],wIsConst:()=>!!N()[ze>>>0],outputPadding:Ye?Array.from(X().subarray(Number(Ye)>>>0,Number(ot)>>>0)):[],outputShape:ft?Array.from(X().subarray(Number(ft)>>>0,Number(Bt)>>>0)):[],activation:zt(Fr)})},1327081:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)=>{n.hc("ConvTranspose",d,{format:ye?"NHWC":"NCHW",autoPad:m,dilations:Array.from(X().subarray(Number(x)>>>0,2+(Number(x)>>>0)>>>0)),group:C,kernelShape:Array.from(X().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),pads:Array.from(X().subarray(Number(W)>>>0,4+(Number(W)>>>0)>>>0)),strides:Array.from(X().subarray(Number(ne)>>>0,2+(Number(ne)>>>0)>>>0)),wIsConst:()=>!!N()[Ee>>>0],outputPadding:ze?Array.from(X().subarray(Number(ze)>>>0,Number(Ye)>>>0)):[],outputShape:ot?Array.from(X().subarray(Number(ot)>>>0,Number(ft)>>>0)):[],activation:zt(Bt)})},1327742:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt,Fr)=>{n.hc("ConvTranspose",d,{format:Ee?"NHWC":"NCHW",autoPad:m,dilations:[x],group:C,kernelShape:[I],pads:[W,ne],strides:[ye],wIsConst:()=>!!N()[ze>>>0],outputPadding:Ye?Array.from(X().subarray(Number(Ye)>>>0,Number(ot)>>>0)):[],outputShape:ft?Array.from(X().subarray(Number(ft)>>>0,Number(Bt)>>>0)):[],activation:zt(Fr)})},1328175:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)=>{n.hc("ConvTranspose",d,{format:ye?"NHWC":"NCHW",autoPad:m,dilations:Array.from(X().subarray(Number(x)>>>0,2+(Number(x)>>>0)>>>0)),group:C,kernelShape:Array.from(X().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),pads:Array.from(X().subarray(Number(W)>>>0,4+(Number(W)>>>0)>>>0)),strides:Array.from(X().subarray(Number(ne)>>>0,2+(Number(ne)>>>0)>>>0)),wIsConst:()=>!!N()[Ee>>>0],outputPadding:ze?Array.from(X().subarray(Number(ze)>>>0,Number(Ye)>>>0)):[],outputShape:ot?Array.from(X().subarray(Number(ot)>>>0,Number(ft)>>>0)):[],activation:zt(Bt)})},1328836:(d,m)=>{n.hc("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1328927:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)=>{n.hc("AveragePool",d,{format:Bt?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:W?Array.from(X().subarray(Number(W)>>>0,Number(ne)>>>0)):[],kernel_shape:ye?Array.from(X().subarray(Number(ye)>>>0,Number(Ee)>>>0)):[],pads:ze?Array.from(X().subarray(Number(ze)>>>0,Number(Ye)>>>0)):[],strides:ot?Array.from(X().subarray(Number(ot)>>>0,Number(ft)>>>0)):[]})},1329406:(d,m)=>{n.hc("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1329497:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)=>{n.hc("AveragePool",d,{format:Bt?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:W?Array.from(X().subarray(Number(W)>>>0,Number(ne)>>>0)):[],kernel_shape:ye?Array.from(X().subarray(Number(ye)>>>0,Number(Ee)>>>0)):[],pads:ze?Array.from(X().subarray(Number(ze)>>>0,Number(Ye)>>>0)):[],strides:ot?Array.from(X().subarray(Number(ot)>>>0,Number(ft)>>>0)):[]})},1329976:(d,m)=>{n.hc("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1330063:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)=>{n.hc("MaxPool",d,{format:Bt?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:W?Array.from(X().subarray(Number(W)>>>0,Number(ne)>>>0)):[],kernel_shape:ye?Array.from(X().subarray(Number(ye)>>>0,Number(Ee)>>>0)):[],pads:ze?Array.from(X().subarray(Number(ze)>>>0,Number(Ye)>>>0)):[],strides:ot?Array.from(X().subarray(Number(ot)>>>0,Number(ft)>>>0)):[]})},1330538:(d,m)=>{n.hc("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1330625:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)=>{n.hc("MaxPool",d,{format:Bt?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:W?Array.from(X().subarray(Number(W)>>>0,Number(ne)>>>0)):[],kernel_shape:ye?Array.from(X().subarray(Number(ye)>>>0,Number(Ee)>>>0)):[],pads:ze?Array.from(X().subarray(Number(ze)>>>0,Number(Ye)>>>0)):[],strides:ot?Array.from(X().subarray(Number(ot)>>>0,Number(ft)>>>0)):[]})},1331100:(d,m,x,C,I)=>{n.hc("Gemm",d,{alpha:m,beta:x,transA:C,transB:I})},1331204:d=>{n.hc("MatMul",d,void 0)},1331258:(d,m,x,C)=>{n.hc("ArgMax",d,{keepDims:!!m,selectLastIndex:!!x,axis:C})},1331366:(d,m,x,C)=>{n.hc("ArgMin",d,{keepDims:!!m,selectLastIndex:!!x,axis:C})},1331474:(d,m)=>{n.hc("Softmax",d,{axis:m})},1331537:(d,m)=>{n.hc("Concat",d,{axis:m})},1331597:(d,m,x,C,I)=>{n.hc("Split",d,{axis:m,numOutputs:x,splitSizes:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1331753:d=>{n.hc("Expand",d,void 0)},1331807:(d,m)=>{n.hc("Gather",d,{axis:Number(m)})},1331878:(d,m)=>{n.hc("GatherElements",d,{axis:Number(m)})},1331957:(d,m)=>{n.hc("GatherND",d,{batch_dims:Number(m)})},1332036:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye)=>{n.hc("Resize",d,{antialias:m,axes:x?Array.from(X().subarray(Number(x)>>>0,Number(C)>>>0)):[],coordinateTransformMode:zt(I),cubicCoeffA:W,excludeOutside:ne,extrapolationValue:ye,keepAspectRatioPolicy:zt(Ee),mode:zt(ze),nearestMode:zt(Ye)})},1332398:(d,m,x,C,I,W,ne)=>{n.hc("Slice",d,{starts:m?Array.from(X().subarray(Number(m)>>>0,Number(x)>>>0)):[],ends:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[],axes:W?Array.from(X().subarray(Number(W)>>>0,Number(ne)>>>0)):[]})},1332662:d=>{n.hc("Tile",d,void 0)},1332714:(d,m,x)=>{n.hc("InstanceNormalization",d,{epsilon:m,format:x?"NHWC":"NCHW"})},1332828:(d,m,x)=>{n.hc("InstanceNormalization",d,{epsilon:m,format:x?"NHWC":"NCHW"})},1332942:d=>{n.hc("Range",d,void 0)},1332995:(d,m)=>{n.hc("Einsum",d,{equation:zt(m)})},1333076:(d,m,x,C,I)=>{n.hc("Pad",d,{mode:m,value:x,pads:C?Array.from(X().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1333219:(d,m,x,C,I,W)=>{n.hc("BatchNormalization",d,{epsilon:m,momentum:x,spatial:!!I,trainingMode:!!C,format:W?"NHWC":"NCHW"})},1333388:(d,m,x,C,I,W)=>{n.hc("BatchNormalization",d,{epsilon:m,momentum:x,spatial:!!I,trainingMode:!!C,format:W?"NHWC":"NCHW"})},1333557:(d,m,x)=>{n.hc("CumSum",d,{exclusive:Number(m),reverse:Number(x)})},1333654:(d,m,x)=>{n.hc("DequantizeLinear",d,{axis:m,blockSize:x})},1333744:(d,m,x,C,I)=>{n.hc("GridSample",d,{align_corners:m,mode:zt(x),padding_mode:zt(C),format:I?"NHWC":"NCHW"})},1333914:(d,m,x,C,I)=>{n.hc("GridSample",d,{align_corners:m,mode:zt(x),padding_mode:zt(C),format:I?"NHWC":"NCHW"})},1334084:(d,m)=>{n.hc("ScatterND",d,{reduction:zt(m)})},1334169:(d,m,x,C,I,W,ne,ye,Ee)=>{n.hc("Attention",d,{numHeads:m,isUnidirectional:x,maskFilterValue:C,scale:I,doRotary:W,qkvHiddenSizes:ne?Array.from(X().subarray(Number(ye)>>>0,Number(ye)+ne>>>0)):[],pastPresentShareBuffer:!!Ee})},1334441:d=>{n.hc("BiasAdd",d,void 0)},1334496:d=>{n.hc("BiasSplitGelu",d,void 0)},1334557:d=>{n.hc("FastGelu",d,void 0)},1334613:(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt,Fr,$s)=>{n.hc("Conv",d,{format:ot?"NHWC":"NCHW",auto_pad:m,dilations:x?Array.from(X().subarray(Number(x)>>>0,Number(C)>>>0)):[],group:I,kernel_shape:W?Array.from(X().subarray(Number(W)>>>0,Number(ne)>>>0)):[],pads:ye?Array.from(X().subarray(Number(ye)>>>0,Number(Ee)>>>0)):[],strides:ze?Array.from(X().subarray(Number(ze)>>>0,Number(Ye)>>>0)):[],w_is_const:()=>!!N()[Number(ft)>>>0],activation:zt(Bt),activation_params:Fr?Array.from(fe().subarray(Number(Fr)>>>0,Number($s)>>>0)):[]})},1335197:d=>{n.hc("Gelu",d,void 0)},1335249:(d,m,x,C,I,W,ne,ye,Ee)=>{n.hc("GroupQueryAttention",d,{numHeads:m,kvNumHeads:x,scale:C,softcap:I,doRotary:W,rotaryInterleaved:ne,smoothSoftmax:ye,localWindowSize:Ee})},1335466:(d,m,x,C)=>{n.hc("LayerNormalization",d,{axis:m,epsilon:x,simplified:!!C})},1335577:(d,m,x,C)=>{n.hc("LayerNormalization",d,{axis:m,epsilon:x,simplified:!!C})},1335688:(d,m,x,C,I,W)=>{n.hc("MatMulNBits",d,{k:m,n:x,accuracyLevel:C,bits:I,blockSize:W})},1335815:(d,m,x,C,I,W)=>{n.hc("MultiHeadAttention",d,{numHeads:m,isUnidirectional:x,maskFilterValue:C,scale:I,doRotary:W})},1335974:(d,m)=>{n.hc("QuickGelu",d,{alpha:m})},1336038:(d,m,x,C,I)=>{n.hc("RotaryEmbedding",d,{interleaved:!!m,numHeads:x,rotaryEmbeddingDim:C,scale:I})},1336177:(d,m,x)=>{n.hc("SkipLayerNormalization",d,{epsilon:m,simplified:!!x})},1336279:(d,m,x)=>{n.hc("SkipLayerNormalization",d,{epsilon:m,simplified:!!x})},1336381:(d,m,x,C)=>{n.hc("GatherBlockQuantized",d,{gatherAxis:m,quantizeAxis:x,blockSize:C})},1336502:d=>{n.Wd(d)},1336536:(d,m)=>n.Zd(Number(d),Number(m),n.Cd.be,n.Cd.errors)};function We(d,m,x){return Ui(async()=>{await n.Ud(Number(d),Number(m),Number(x))})}function D(){return typeof wasmOffsetConverter<"u"}class ee{constructor(m){re(this,"name","ExitStatus");this.message=`Program terminated with exit(${m})`,this.status=m}}var B=d=>{d.terminate(),d.onmessage=()=>{}},te=[],de=d=>{qe.length==0&&(ds(),dr(qe[0]));var m=qe.pop();if(!m)return 6;Xe.push(m),wt[d.xd]=m,m.xd=d.xd;var x={yd:"run",de:d.ce,Fd:d.Fd,xd:d.xd};return m.postMessage(x,d.Ld),0},be=0,ve=(d,m,...x)=>{for(var C=2*x.length,I=_t(),W=Fn(8*C),ne=W>>>3,ye=0;ye<x.length;ye++){var Ee=x[ye];typeof Ee=="bigint"?(H[ne+2*ye]=1n,H[ne+2*ye+1]=Ee):(H[ne+2*ye]=0n,ke()[ne+2*ye+1>>>0]=Ee)}return d=ri(d,0,C,W,m),mt(I),d};function Re(d){if(c)return ve(0,1,d);if(T=d,!(0<be)){for(var m of Xe)B(m);for(m of qe)B(m);qe=[],Xe=[],wt={},ce=!0}P(0,new ee(d))}function Fe(d){if(c)return ve(1,0,d);je(d)}var je=d=>{if(T=d,c)throw Fe(d),"unwind";Re(d)},qe=[],Xe=[],ut=[],wt={},nr=d=>{var m=d.xd;delete wt[m],qe.push(d),Xe.splice(Xe.indexOf(d),1),d.xd=0,po(m)};function jt(){ut.forEach(d=>d())}var dr=d=>new Promise(m=>{d.onmessage=I=>{var W=(I=I.data).yd;if(I.Ed&&I.Ed!=An()){var ne=wt[I.Ed];ne?ne.postMessage(I,I.Ld):E(`Internal error! Worker sent a message "${W}" to target pthread ${I.Ed}, but that thread no longer exists!`)}else W==="checkMailbox"?Vt():W==="spawnThread"?de(I):W==="cleanupThread"?nr(wt[I.ee]):W==="loaded"?(d.loaded=!0,m(d)):W==="alert"?alert(`Thread ${I.fe}: ${I.text}`):I.target==="setimmediate"?d.postMessage(I):W==="callHandler"?n[I.Nd](...I.args):W&&E(`worker sent an unknown command ${W}`)},d.onerror=I=>{throw E(`worker sent an error! ${I.filename}:${I.lineno}: ${I.message}`),I};var x,C=[];for(x of[])n.propertyIsEnumerable(x)&&C.push(x);d.postMessage({yd:"load",Od:C,he:M,ie:w})});function ds(){var d=new Worker((()=>{let m=URL;return self.location.href>"file:"&&self.location.href<"file;"?new m("ort.bundle.min.mjs",self.location.href):new URL(self.location.href)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});qe.push(d)}var Os=d=>{K();var m=we()[d+52>>>2>>>0];d=we()[d+56>>>2>>>0],mo(m,m-d),mt(m)},Dr=(d,m)=>{be=0,d=ai(d,m),0<be?T=d:si(d)},cs=[];function Ds(d){var m=new qr(d>>>=0);if(N()[m.wd+12>>>0]==0){var x=1;N()[m.wd+12>>>0]=x}return x=0,N()[m.wd+13>>>0]=x,cs.push(m),ii(d),go(d)}var jr=0,dt=()=>{gt(0,0);var d=cs.pop();_o(d.Gd),jr=0};class qr{constructor(m){this.Gd=m,this.wd=m-24}}function Vr(d){throw jr||(jr=d>>>0),jr}var us=d=>{var m=jr;if(!m)return Us(0),0;var x=new qr(m);we()[x.wd+16>>>2>>>0]=m;var C=we()[x.wd+4>>>2>>>0];if(!C)return Us(0),m;for(var I of d){if(I===0||I===C)break;if(fo(I,C,x.wd+16))return Us(I),m}return Us(C),m};function xs(){return us([])}function Ts(d){return us([d>>>0])}function Es(d,m){return us([d>>>0,m>>>0])}var Ls=()=>{var d=cs.pop();d||Ie("no exception to throw");var m=d.Gd;if(N()[d.wd+13>>>0]==0){cs.push(d);var x=1;N()[d.wd+13>>>0]=x,x=0,N()[d.wd+12>>>0]=x}throw jr=m};function mr(d,m,x){var C=new qr(d>>>=0);throw m>>>=0,x>>>=0,we()[C.wd+16>>>2>>>0]=0,we()[C.wd+4>>>2>>>0]=m,we()[C.wd+8>>>2>>>0]=x,jr=d}function Be(d,m,x,C){return c?ve(2,1,d,m,x,C):et(d,m,x,C)}function et(d,m,x,C){if(d>>>=0,x>>>=0,C>>>=0,p===void 0)return 6;var I=[];return c&&I.length===0?Be(d,m>>>=0,x,C):(d={ce:x,xd:d,Fd:C,Ld:I},c?(d.yd="spawnThread",postMessage(d,I),0):de(d))}var it=typeof TextDecoder<"u"?new TextDecoder:void 0,rr=(d,m=0,x=NaN)=>{var C=(m>>>=0)+x;for(x=m;d[x]&&!(x>=C);)++x;if(16<x-m&&d.buffer&&it)return it.decode(d.buffer instanceof ArrayBuffer?d.subarray(m,x):d.slice(m,x));for(C="";m<x;){var I=d[m++];if(128&I){var W=63&d[m++];if((224&I)==192)C+=String.fromCharCode((31&I)<<6|W);else{var ne=63&d[m++];65536>(I=(240&I)==224?(15&I)<<12|W<<6|ne:(7&I)<<18|W<<12|ne<<6|63&d[m++])?C+=String.fromCharCode(I):(I-=65536,C+=String.fromCharCode(55296|I>>10,56320|1023&I))}}else C+=String.fromCharCode(I)}return C},zt=(d,m)=>(d>>>=0)?rr(O(),d,m):"";function kr(d,m,x){return c?ve(3,1,d,m,x):0}function ps(d,m){if(c)return ve(4,1,d,m)}var hs=d=>{for(var m=0,x=0;x<d.length;++x){var C=d.charCodeAt(x);127>=C?m++:2047>=C?m+=2:55296<=C&&57343>=C?(m+=4,++x):m+=3}return m},Er=(d,m,x)=>{var C=O();if(m>>>=0,0<x){var I=m;x=m+x-1;for(var W=0;W<d.length;++W){var ne=d.charCodeAt(W);if(55296<=ne&&57343>=ne&&(ne=65536+((1023&ne)<<10)|1023&d.charCodeAt(++W)),127>=ne){if(m>=x)break;C[m++>>>0]=ne}else{if(2047>=ne){if(m+1>=x)break;C[m++>>>0]=192|ne>>6}else{if(65535>=ne){if(m+2>=x)break;C[m++>>>0]=224|ne>>12}else{if(m+3>=x)break;C[m++>>>0]=240|ne>>18,C[m++>>>0]=128|ne>>12&63}C[m++>>>0]=128|ne>>6&63}C[m++>>>0]=128|63&ne}}C[m>>>0]=0,d=m-I}else d=0;return d};function ms(d,m){if(c)return ve(5,1,d,m)}function _s(d,m,x){if(c)return ve(6,1,d,m,x)}function Qr(d,m,x){return c?ve(7,1,d,m,x):0}function Ps(d,m){if(c)return ve(8,1,d,m)}function Qs(d,m,x){if(c)return ve(9,1,d,m,x)}function Xs(d,m,x,C){if(c)return ve(10,1,d,m,x,C)}function Js(d,m,x,C){if(c)return ve(11,1,d,m,x,C)}function Ys(d,m,x,C){if(c)return ve(12,1,d,m,x,C)}function fs(d){if(c)return ve(13,1,d)}function Zs(d,m){if(c)return ve(14,1,d,m)}function en(d,m,x){if(c)return ve(15,1,d,m,x)}var tn,Lr,Cs=()=>Ie(""),br=d=>{for(var m="";O()[d>>>0];)m+=tn[O()[d++>>>0]];return m},zs={},Bs={};function Ir(d,m,x={}){return function(C,I,W={}){var ne=I.name;if(!C)throw new Lr(`type "${ne}" must have a positive integer typeid pointer`);if(Bs.hasOwnProperty(C)){if(W.Pd)return;throw new Lr(`Cannot register type '${ne}' twice`)}Bs[C]=I,zs.hasOwnProperty(C)&&(I=zs[C],delete zs[C],I.forEach(ye=>ye()))}(d,m,x)}var Xr=(d,m,x)=>{switch(m){case 1:return x?C=>N()[C>>>0]:C=>O()[C>>>0];case 2:return x?C=>G()[C>>>1>>>0]:C=>se()[C>>>1>>>0];case 4:return x?C=>X()[C>>>2>>>0]:C=>we()[C>>>2>>>0];case 8:return x?C=>H[C>>>3]:C=>J[C>>>3];default:throw new TypeError(`invalid integer width (${m}): ${d}`)}};function En(d,m,x){x>>>=0,Ir(d>>>=0,{name:m=br(m>>>0),fromWireType:C=>C,toWireType:function(C,I){if(typeof I!="bigint"&&typeof I!="number")throw I=I===null?"null":(C=typeof I)=="object"||C==="array"||C==="function"?I.toString():""+I,new TypeError(`Cannot convert "${I}" to ${this.name}`);return typeof I=="number"&&(I=BigInt(I)),I},zd:zr,readValueFromPointer:Xr(m,x,m.indexOf("u")==-1),Ad:null})}var zr=8;function Pn(d,m,x,C){Ir(d>>>=0,{name:m=br(m>>>0),fromWireType:function(I){return!!I},toWireType:function(I,W){return W?x:C},zd:zr,readValueFromPointer:function(I){return this.fromWireType(O()[I>>>0])},Ad:null})}var Rs=[],Ar=[];function Jr(d){9<(d>>>=0)&&--Ar[d+1]==0&&(Ar[d]=void 0,Rs.push(d))}var cr=d=>{if(!d)throw new Lr("Cannot use deleted val. handle = "+d);return Ar[d]},_r=d=>{switch(d){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Rs.pop()||Ar.length;return Ar[m]=d,Ar[m+1]=1,m}};function Ns(d){return this.fromWireType(we()[d>>>2>>>0])}var Cn={name:"emscripten::val",fromWireType:d=>{var m=cr(d);return Jr(d),m},toWireType:(d,m)=>_r(m),zd:zr,readValueFromPointer:Ns,Ad:null};function Ss(d){return Ir(d>>>0,Cn)}var Sn=(d,m)=>{switch(m){case 4:return function(x){return this.fromWireType(fe()[x>>>2>>>0])};case 8:return function(x){return this.fromWireType(ke()[x>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${d}`)}};function pe(d,m,x){x>>>=0,Ir(d>>>=0,{name:m=br(m>>>0),fromWireType:C=>C,toWireType:(C,I)=>I,zd:zr,readValueFromPointer:Sn(m,x),Ad:null})}function F(d,m,x,C,I){if(d>>>=0,x>>>=0,m=br(m>>>0),I===-1&&(I=4294967295),I=ye=>ye,C===0){var W=32-8*x;I=ye=>ye<<W>>>W}var ne=m.includes("unsigned")?function(ye,Ee){return Ee>>>0}:function(ye,Ee){return Ee};Ir(d,{name:m,fromWireType:I,toWireType:ne,zd:zr,readValueFromPointer:Xr(m,x,C!==0),Ad:null})}function V(d,m,x){function C(W){var ne=we()[W>>>2>>>0];return W=we()[W+4>>>2>>>0],new I(N().buffer,W,ne)}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];Ir(d>>>=0,{name:x=br(x>>>0),fromWireType:C,zd:zr,readValueFromPointer:C},{Pd:!0})}function Y(d,m){Ir(d>>>=0,{name:m=br(m>>>0),fromWireType:function(x){for(var C,I=we()[x>>>2>>>0],W=x+4,ne=W,ye=0;ye<=I;++ye){var Ee=W+ye;ye!=I&&O()[Ee>>>0]!=0||(ne=zt(ne,Ee-ne),C===void 0?C=ne:(C+="\0",C+=ne),ne=Ee+1)}return Ur(x),C},toWireType:function(x,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var I=typeof C=="string";if(!(I||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new Lr("Cannot pass non-string to std::string");var W=I?hs(C):C.length,ne=an(4+W+1),ye=ne+4;if(we()[ne>>>2>>>0]=W,I)Er(C,ye,W+1);else if(I)for(I=0;I<W;++I){var Ee=C.charCodeAt(I);if(255<Ee)throw Ur(ne),new Lr("String has UTF-16 code units that do not fit in 8 bits");O()[ye+I>>>0]=Ee}else for(I=0;I<W;++I)O()[ye+I>>>0]=C[I];return x!==null&&x.push(Ur,ne),ne},zd:zr,readValueFromPointer:Ns,Ad(x){Ur(x)}})}var le=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ue=(d,m)=>{for(var x=d>>1,C=x+m/2;!(x>=C)&&se()[x>>>0];)++x;if(32<(x<<=1)-d&&le)return le.decode(O().slice(d,x));for(x="",C=0;!(C>=m/2);++C){var I=G()[d+2*C>>>1>>>0];if(I==0)break;x+=String.fromCharCode(I)}return x},Ce=(d,m,x)=>{if(x??(x=2147483647),2>x)return 0;var C=m;x=(x-=2)<2*d.length?x/2:d.length;for(var I=0;I<x;++I){var W=d.charCodeAt(I);G()[m>>>1>>>0]=W,m+=2}return G()[m>>>1>>>0]=0,m-C},Ue=d=>2*d.length,Qe=(d,m)=>{for(var x=0,C="";!(x>=m/4);){var I=X()[d+4*x>>>2>>>0];if(I==0)break;++x,65536<=I?(I-=65536,C+=String.fromCharCode(55296|I>>10,56320|1023&I)):C+=String.fromCharCode(I)}return C},Ke=(d,m,x)=>{if(m>>>=0,x??(x=2147483647),4>x)return 0;var C=m;x=C+x-4;for(var I=0;I<d.length;++I){var W=d.charCodeAt(I);if(55296<=W&&57343>=W&&(W=65536+((1023&W)<<10)|1023&d.charCodeAt(++I)),X()[m>>>2>>>0]=W,(m+=4)+4>x)break}return X()[m>>>2>>>0]=0,m-C},Ze=d=>{for(var m=0,x=0;x<d.length;++x){var C=d.charCodeAt(x);55296<=C&&57343>=C&&++x,m+=4}return m};function ht(d,m,x){if(d>>>=0,m>>>=0,x=br(x>>>=0),m===2)var C=ue,I=Ce,W=Ue,ne=ye=>se()[ye>>>1>>>0];else m===4&&(C=Qe,I=Ke,W=Ze,ne=ye=>we()[ye>>>2>>>0]);Ir(d,{name:x,fromWireType:ye=>{for(var Ee,ze=we()[ye>>>2>>>0],Ye=ye+4,ot=0;ot<=ze;++ot){var ft=ye+4+ot*m;ot!=ze&&ne(ft)!=0||(Ye=C(Ye,ft-Ye),Ee===void 0?Ee=Ye:(Ee+="\0",Ee+=Ye),Ye=ft+m)}return Ur(ye),Ee},toWireType:(ye,Ee)=>{if(typeof Ee!="string")throw new Lr(`Cannot pass non-string to C++ string type ${x}`);var ze=W(Ee),Ye=an(4+ze+m);return we()[Ye>>>2>>>0]=ze/m,I(Ee,Ye+4,ze+m),ye!==null&&ye.push(Ur,Ye),Ye},zd:zr,readValueFromPointer:Ns,Ad(ye){Ur(ye)}})}function Ct(d,m){Ir(d>>>=0,{Qd:!0,name:m=br(m>>>0),zd:0,fromWireType:()=>{},toWireType:()=>{}})}function kt(d){ti(d>>>0,!l,1,!a,131072,!1),jt()}var Wt=d=>{if(!ce)try{if(d(),!(0<be))try{c?si(T):je(T)}catch(m){m instanceof ee||m=="unwind"||P(0,m)}}catch(m){m instanceof ee||m=="unwind"||P(0,m)}};function Ot(d){d>>>=0,typeof Atomics.ge=="function"&&(Atomics.ge(X(),d>>>2,d).value.then(Vt),d+=128,Atomics.store(X(),d>>>2,1))}var Vt=()=>{var d=An();d&&(Ot(d),Wt(ho))};function vr(d,m){(d>>>=0)==m>>>0?setTimeout(Vt):c?postMessage({Ed:d,yd:"checkMailbox"}):(d=wt[d])&&d.postMessage({yd:"checkMailbox"})}var fr=[];function Yr(d,m,x,C,I){for(m>>>=0,C/=2,fr.length=C,x=I>>>0>>>3,I=0;I<C;I++)fr[I]=H[x+2*I]?H[x+2*I+1]:ke()[x+2*I+1>>>0];return(m?Ne[m]:cl[d])(...fr)}var xr=()=>{be=0};function gs(d){d>>>=0,c?postMessage({yd:"cleanupThread",ee:d}):nr(wt[d])}function Gt(d){}var Zt=(d,m)=>{var x=Bs[d];if(x===void 0)throw d=co(d),x=br(d),Ur(d),new Lr(`${m} has unknown type ${x}`);return x},gr=(d,m,x)=>{var C=[];return d=d.toWireType(C,x),C.length&&(we()[m>>>2>>>0]=_r(C)),d};function Zr(d,m,x){return m>>>=0,x>>>=0,d=cr(d>>>0),m=Zt(m,"emval::as"),gr(m,x,d)}function ws(d,m){return m>>>=0,d=cr(d>>>0),(m=Zt(m,"emval::as")).toWireType(null,d)}var Ht=d=>{try{d()}catch(m){Ie(m)}},ur=0,Rt=null,Jt=0,qt=[],er={},ir={},rn=0,sn=null,Ba=[];function Ui(d){return function(m){if(!ce){if(ur===0){var x=!1,C=!1;m((I=0)=>{if(!ce&&(Jt=I,x=!0,C)){ur=2,Ht(()=>Qo(Rt)),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.resume(),I=!1;try{var W=function(){var Ee=X()[Rt+8>>>2>>>0];return Ee=Oe[ir[Ee]],--be,Ee()}()}catch(Ee){W=Ee,I=!0}var ne=!1;if(!Rt){var ye=sn;ye&&(sn=null,(I?ye.reject:ye.resolve)(W),ne=!0)}if(I&&!ne)throw W}}),C=!0,x||(ur=1,Rt=function(){var I=an(65548),W=I+12;we()[I>>>2>>>0]=W,we()[I+4>>>2>>>0]=W+65536,W=qt[0];var ne=er[W];return ne===void 0&&(ne=rn++,er[W]=ne,ir[ne]=W),W=ne,X()[I+8>>>2>>>0]=W,I}(),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.pause(),Ht(()=>Ho(Rt)))}else ur===2?(ur=0,Ht(Xo),Ur(Rt),Rt=null,Ba.forEach(Wt)):Ie(`invalid state: ${ur}`);return Jt}}(m=>{d().then(m)})}function Ra(d){return d>>>=0,Ui(async()=>{var m=await cr(d);return _r(m)})}var ys=[];function Na(d,m,x,C){return x>>>=0,C>>>=0,(d=ys[d>>>0])(null,m=cr(m>>>0),x,C)}var ja={},$n=d=>{var m=ja[d];return m===void 0?br(d):m};function Va(d,m,x,C,I){return x>>>=0,C>>>=0,I>>>=0,(d=ys[d>>>0])(m=cr(m>>>0),m[x=$n(x)],C,I)}var Wi=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Gi(d){return(d>>>=0)==0?_r(Wi()):(d=$n(d),_r(Wi()[d]))}var Ua=d=>{var m=ys.length;return ys.push(d),m},Wa=(d,m)=>{for(var x=Array(d),C=0;C<d;++C)x[C]=Zt(we()[m+4*C>>>2>>>0],"parameter "+C);return x},Wn=(d,m)=>Object.defineProperty(m,"name",{value:d});function Ga(d,m,x){var C=(m=Wa(d,m>>>0)).shift();d--;var I=`return function (obj, func, destructorsRef, args) {
`,W=0,ne=[];x===0&&ne.push("obj");for(var ye=["retType"],Ee=[C],ze=0;ze<d;++ze)ne.push("arg"+ze),ye.push("argType"+ze),Ee.push(m[ze]),I+=`  var arg${ze} = argType${ze}.readValueFromPointer(args${W?"+"+W:""});
`,W+=m[ze].zd;return I+=`  var rv = ${x===1?"new func":"func.call"}(${ne.join(", ")});
`,C.Qd||(ye.push("emval_returnValue"),Ee.push(gr),I+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ye.push(I+`};
`),d=function(Ye){var ot=Function;if(!(ot instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof ot} which is not a function`);var ft=Wn(ot.name||"unknownFunctionName",function(){});return ft.prototype=ot.prototype,ft=new ft,(Ye=ot.apply(ft,Ye))instanceof Object?Ye:ft}(ye)(...Ee),x=`methodCaller<(${m.map(Ye=>Ye.name).join(", ")}) => ${C.name}>`,Ua(Wn(x,d))}function Ki(d){return d=$n(d>>>0),_r(n[d])}function Ka(d,m){return m>>>=0,d=cr(d>>>0),m=cr(m),_r(d[m])}function Hi(d){9<(d>>>=0)&&(Ar[d+1]+=1)}function Jc(){return _r([])}function Ha(d){d=cr(d>>>0);for(var m=Array(d.length),x=0;x<d.length;x++)m[x]=d[x];return _r(m)}function qi(d){return _r($n(d>>>0))}function qa(){return _r({})}function Gn(d){for(var m=cr(d>>>=0);m.length;){var x=m.pop();m.pop()(x)}Jr(d)}function Qa(d,m,x){m>>>=0,x>>>=0,d=cr(d>>>0),m=cr(m),x=cr(x),d[m]=x}function Xa(d,m){return m>>>=0,d=(d=Zt(d>>>0,"_emval_take_value")).readValueFromPointer(m),_r(d)}function Ja(d,m){d=-9007199254740992>d||9007199254740992<d?NaN:Number(d),m>>>=0,d=new Date(1e3*d),X()[m>>>2>>>0]=d.getUTCSeconds(),X()[m+4>>>2>>>0]=d.getUTCMinutes(),X()[m+8>>>2>>>0]=d.getUTCHours(),X()[m+12>>>2>>>0]=d.getUTCDate(),X()[m+16>>>2>>>0]=d.getUTCMonth(),X()[m+20>>>2>>>0]=d.getUTCFullYear()-1900,X()[m+24>>>2>>>0]=d.getUTCDay(),d=(d.getTime()-Date.UTC(d.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,X()[m+28>>>2>>>0]=d}var Qi=d=>d%4==0&&(d%100!=0||d%400==0),Xi=[0,31,60,91,121,152,182,213,244,274,305,335],Ji=[0,31,59,90,120,151,181,212,243,273,304,334];function Ya(d,m){d=-9007199254740992>d||9007199254740992<d?NaN:Number(d),m>>>=0,d=new Date(1e3*d),X()[m>>>2>>>0]=d.getSeconds(),X()[m+4>>>2>>>0]=d.getMinutes(),X()[m+8>>>2>>>0]=d.getHours(),X()[m+12>>>2>>>0]=d.getDate(),X()[m+16>>>2>>>0]=d.getMonth(),X()[m+20>>>2>>>0]=d.getFullYear()-1900,X()[m+24>>>2>>>0]=d.getDay();var x=(Qi(d.getFullYear())?Xi:Ji)[d.getMonth()]+d.getDate()-1|0;X()[m+28>>>2>>>0]=x,X()[m+36>>>2>>>0]=-60*d.getTimezoneOffset(),x=new Date(d.getFullYear(),6,1).getTimezoneOffset();var C=new Date(d.getFullYear(),0,1).getTimezoneOffset();d=0|(x!=C&&d.getTimezoneOffset()==Math.min(C,x)),X()[m+32>>>2>>>0]=d}function Kn(d){d>>>=0;var m=new Date(X()[d+20>>>2>>>0]+1900,X()[d+16>>>2>>>0],X()[d+12>>>2>>>0],X()[d+8>>>2>>>0],X()[d+4>>>2>>>0],X()[d>>>2>>>0],0),x=X()[d+32>>>2>>>0],C=m.getTimezoneOffset(),I=new Date(m.getFullYear(),6,1).getTimezoneOffset(),W=new Date(m.getFullYear(),0,1).getTimezoneOffset(),ne=Math.min(W,I);return 0>x?X()[d+32>>>2>>>0]=+(I!=W&&ne==C):0<x!=(ne==C)&&(I=Math.max(W,I),m.setTime(m.getTime()+6e4*((0<x?ne:I)-C))),X()[d+24>>>2>>>0]=m.getDay(),x=(Qi(m.getFullYear())?Xi:Ji)[m.getMonth()]+m.getDate()-1|0,X()[d+28>>>2>>>0]=x,X()[d>>>2>>>0]=m.getSeconds(),X()[d+4>>>2>>>0]=m.getMinutes(),X()[d+8>>>2>>>0]=m.getHours(),X()[d+12>>>2>>>0]=m.getDate(),X()[d+16>>>2>>>0]=m.getMonth(),X()[d+20>>>2>>>0]=m.getYear(),d=m.getTime(),BigInt(isNaN(d)?-1:d/1e3)}function Hn(d,m,x,C,I,W,ne){return c?ve(16,1,d,m,x,C,I,W,ne):-52}function Yi(d,m,x,C,I,W){if(c)return ve(17,1,d,m,x,C,I,W)}var js={},Vs=()=>performance.timeOrigin+performance.now();function Zi(d,m){if(c)return ve(18,1,d,m);if(js[d]&&(clearTimeout(js[d].id),delete js[d]),!m)return 0;var x=setTimeout(()=>{delete js[d],Wt(()=>ni(d,performance.timeOrigin+performance.now()))},m);return js[d]={id:x,ke:m},0}function Yc(d,m,x,C){d>>>=0,m>>>=0,x>>>=0,C>>>=0;var I=new Date().getFullYear(),W=new Date(I,0,1).getTimezoneOffset();I=new Date(I,6,1).getTimezoneOffset();var ne=Math.max(W,I);we()[d>>>2>>>0]=60*ne,X()[m>>>2>>>0]=+(W!=I),d=(m=ye=>{var Ee=Math.abs(ye);return`UTC${0<=ye?"-":"+"}${String(Math.floor(Ee/60)).padStart(2,"0")}${String(Ee%60).padStart(2,"0")}`})(W),m=m(I),I<W?(Er(d,x,17),Er(m,C,17)):(Er(d,C,17),Er(m,x,17))}var Za=()=>Date.now();function Zc(d,m,x){return 0<=d&&3>=d?(d===0?d=Date.now():d=performance.timeOrigin+performance.now(),H[x>>>0>>>3]=BigInt(Math.round(1e6*d)),0):28}var qn=[],Qn=(d,m)=>{qn.length=0;for(var x;x=O()[d++>>>0];){var C=x!=105;m+=(C&=x!=112)&&m%8?4:0,qn.push(x==112?we()[m>>>2>>>0]:x==106?H[m>>>3]:x==105?X()[m>>>2>>>0]:ke()[m>>>3>>>0]),m+=C?8:4}return qn};function el(d,m,x){return d>>>=0,m=Qn(m>>>0,x>>>0),Ne[d](...m)}function tl(d,m,x){return d>>>=0,m=Qn(m>>>0,x>>>0),Ne[d](...m)}var rl=()=>{};function sl(d,m){return E(zt(d>>>0,m>>>0))}var nl=()=>{throw be+=1,"unwind"};function Xn(){return 4294901760}var il=()=>navigator.hardwareConcurrency;function ol(){return Ie("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function al(d){d>>>=0;var m=O().length;if(d<=m||4294901760<d)return!1;for(var x=1;4>=x;x*=2){var C=m*(1+.2/x);C=Math.min(C,d+100663296);e:{C=(Math.min(4294901760,65536*Math.ceil(Math.max(d,C)/65536))-M.buffer.byteLength+65535)/65536|0;try{M.grow(C),K();var I=1;break e}catch{}I=void 0}if(I)return!0}return!1}var nn=()=>(Ie("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),on={},eo=d=>{d.forEach(m=>{nn()})};function to(){var d=Error().stack.toString().split(`
`);return d[0]=="Error"&&d.shift(),eo(d),on.Kd=nn(),on.ae=d,on.Kd}function ll(d,m,x){if(d>>>=0,m>>>=0,on.Kd==d)var C=on.ae;else(C=Error().stack.toString().split(`
`))[0]=="Error"&&C.shift(),eo(C);for(var I=3;C[I]&&nn()!=d;)++I;for(d=0;d<x&&C[d+I];++d)X()[m+4*d>>>2>>>0]=nn();return d}var Jn,kn={},ro=()=>{if(!Jn){var d,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(d in kn)kn[d]===void 0?delete m[d]:m[d]=kn[d];var x=[];for(d in m)x.push(`${d}=${m[d]}`);Jn=x}return Jn};function so(d,m){if(c)return ve(19,1,d,m);d>>>=0,m>>>=0;var x=0;return ro().forEach((C,I)=>{var W=m+x;for(I=we()[d+4*I>>>2>>>0]=W,W=0;W<C.length;++W)N()[I++>>>0]=C.charCodeAt(W);N()[I>>>0]=0,x+=C.length+1}),0}function Yn(d,m){if(c)return ve(20,1,d,m);d>>>=0,m>>>=0;var x=ro();we()[d>>>2>>>0]=x.length;var C=0;return x.forEach(I=>C+=I.length+1),we()[m>>>2>>>0]=C,0}function no(d){return c?ve(21,1,d):52}function io(d,m,x,C){return c?ve(22,1,d,m,x,C):52}function Zn(d,m,x,C){return c?ve(23,1,d,m,x,C):70}var dl=[null,[],[]];function oo(d,m,x,C){if(c)return ve(24,1,d,m,x,C);m>>>=0,x>>>=0,C>>>=0;for(var I=0,W=0;W<x;W++){var ne=we()[m>>>2>>>0],ye=we()[m+4>>>2>>>0];m+=8;for(var Ee=0;Ee<ye;Ee++){var ze=O()[ne+Ee>>>0],Ye=dl[d];ze===0||ze===10?((d===1?k:E)(rr(Ye)),Ye.length=0):Ye.push(ze)}I+=ye}return we()[C>>>2>>>0]=I,0}function ao(d){return d>>>0}c||function(){for(var d=n.numThreads-1;d--;)ds();te.unshift(()=>{Pe++,function(m){c?m():Promise.all(qe.map(dr)).then(m)}(()=>Ae())})}();for(var lo=Array(256),In=0;256>In;++In)lo[In]=String.fromCharCode(In);tn=lo,Lr=n.BindingError=class extends Error{constructor(d){super(d),this.name="BindingError"}},n.InternalError=class extends Error{constructor(d){super(d),this.name="InternalError"}},Ar.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>Ar.length/2-5-Rs.length;var Oe,cl=[Re,Fe,Be,kr,ps,ms,_s,Qr,Ps,Qs,Xs,Js,Ys,fs,Zs,en,Hn,Yi,Zi,so,Yn,no,io,Zn,oo];(async function(){function d(C,I){return Oe=C.exports,Oe=function(){var W=Oe,ne={};for(let[ye,Ee]of Object.entries(W))ne[ye]=typeof Ee=="function"?(...ze)=>{qt.push(ye);try{return Ee(...ze)}finally{ce||(qt.pop(),Rt&&ur===1&&qt.length===0&&(ur=0,be+=1,Ht(qo),typeof Fibers<"u"&&Fibers.le()))}}:Ee;return ne}(),Oe=function(){var W=Oe,ne=Ee=>ze=>Ee(ze)>>>0,ye=Ee=>()=>Ee()>>>0;return(W=Object.assign({},W)).Cb=ne(W.Cb),W.fc=ye(W.fc),W.ic=ne(W.ic),W.vc=ne(W.vc),W.wc=ye(W.wc),W.Ac=ne(W.Ac),W}(),ut.push(Oe.jc),w=I,Ae(),Oe}Pe++;var m=Le();if(n.instantiateWasm)return new Promise(C=>{n.instantiateWasm(m,(I,W)=>{d(I,W),C(I.exports)})});if(c)return new Promise(C=>{He=I=>{var W=new WebAssembly.Instance(I,Le());C(d(W,I))}});me??(me=n.locateFile?n.locateFile?n.locateFile("ort-wasm-simd-threaded.jsep.wasm",A):A+"ort-wasm-simd-threaded.jsep.wasm":new URL("/SMART-demo/assets/ort-wasm-simd-threaded.jsep-QEfO5mwy.wasm",self.location.href).href);try{var x=await async function(C){var I=me;if(!ae&&typeof WebAssembly.instantiateStreaming=="function"&&!he(I))try{var W=fetch(I,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(W,C)}catch(ne){E(`wasm streaming compile failed: ${ne}`),E("falling back to ArrayBuffer instantiation")}return async function(ne,ye){try{var Ee=await async function(ze){if(!ae)try{var Ye=await h(ze);return new Uint8Array(Ye)}catch{}if(ze==me&&ae)ze=new Uint8Array(ae);else{if(!g)throw"both async and sync fetching of the wasm failed";ze=g(ze)}return ze}(ne);return await WebAssembly.instantiate(Ee,ye)}catch(ze){E(`failed to asynchronously prepare wasm: ${ze}`),Ie(ze)}}(I,C)}(m);return d(x.instance,x.module)}catch(C){return i(C),Promise.reject(C)}})();var co=d=>(co=Oe.Cb)(d),ei=()=>(ei=Oe.Db)();n._OrtInit=(d,m)=>(n._OrtInit=Oe.Eb)(d,m),n._OrtGetLastError=(d,m)=>(n._OrtGetLastError=Oe.Fb)(d,m),n._OrtCreateSessionOptions=(d,m,x,C,I,W,ne,ye,Ee,ze)=>(n._OrtCreateSessionOptions=Oe.Gb)(d,m,x,C,I,W,ne,ye,Ee,ze),n._OrtAppendExecutionProvider=(d,m)=>(n._OrtAppendExecutionProvider=Oe.Hb)(d,m),n._OrtAddFreeDimensionOverride=(d,m,x)=>(n._OrtAddFreeDimensionOverride=Oe.Ib)(d,m,x),n._OrtAddSessionConfigEntry=(d,m,x)=>(n._OrtAddSessionConfigEntry=Oe.Jb)(d,m,x),n._OrtReleaseSessionOptions=d=>(n._OrtReleaseSessionOptions=Oe.Kb)(d),n._OrtCreateSession=(d,m,x)=>(n._OrtCreateSession=Oe.Lb)(d,m,x),n._OrtReleaseSession=d=>(n._OrtReleaseSession=Oe.Mb)(d),n._OrtGetInputOutputCount=(d,m,x)=>(n._OrtGetInputOutputCount=Oe.Nb)(d,m,x),n._OrtGetInputName=(d,m)=>(n._OrtGetInputName=Oe.Ob)(d,m),n._OrtGetOutputName=(d,m)=>(n._OrtGetOutputName=Oe.Pb)(d,m),n._OrtFree=d=>(n._OrtFree=Oe.Qb)(d),n._OrtCreateTensor=(d,m,x,C,I,W)=>(n._OrtCreateTensor=Oe.Rb)(d,m,x,C,I,W),n._OrtGetTensorData=(d,m,x,C,I)=>(n._OrtGetTensorData=Oe.Sb)(d,m,x,C,I),n._OrtReleaseTensor=d=>(n._OrtReleaseTensor=Oe.Tb)(d),n._OrtCreateRunOptions=(d,m,x,C)=>(n._OrtCreateRunOptions=Oe.Ub)(d,m,x,C),n._OrtAddRunConfigEntry=(d,m,x)=>(n._OrtAddRunConfigEntry=Oe.Vb)(d,m,x),n._OrtReleaseRunOptions=d=>(n._OrtReleaseRunOptions=Oe.Wb)(d),n._OrtCreateBinding=d=>(n._OrtCreateBinding=Oe.Xb)(d),n._OrtBindInput=(d,m,x)=>(n._OrtBindInput=Oe.Yb)(d,m,x),n._OrtBindOutput=(d,m,x,C)=>(n._OrtBindOutput=Oe.Zb)(d,m,x,C),n._OrtClearBoundOutputs=d=>(n._OrtClearBoundOutputs=Oe._b)(d),n._OrtReleaseBinding=d=>(n._OrtReleaseBinding=Oe.$b)(d),n._OrtRunWithBinding=(d,m,x,C,I)=>(n._OrtRunWithBinding=Oe.ac)(d,m,x,C,I),n._OrtRun=(d,m,x,C,I,W,ne,ye)=>(n._OrtRun=Oe.bc)(d,m,x,C,I,W,ne,ye),n._OrtEndProfiling=d=>(n._OrtEndProfiling=Oe.cc)(d),n._JsepOutput=(d,m,x)=>(n._JsepOutput=Oe.dc)(d,m,x),n._JsepGetNodeName=d=>(n._JsepGetNodeName=Oe.ec)(d);var An=()=>(An=Oe.fc)(),Ur=n._free=d=>(Ur=n._free=Oe.gc)(d),an=n._malloc=d=>(an=n._malloc=Oe.ic)(d),ti=(d,m,x,C,I,W)=>(ti=Oe.kc)(d,m,x,C,I,W),uo=()=>(uo=Oe.lc)(),ri=(d,m,x,C,I)=>(ri=Oe.mc)(d,m,x,C,I),po=d=>(po=Oe.nc)(d),si=d=>(si=Oe.oc)(d),ni=(d,m)=>(ni=Oe.pc)(d,m),ho=()=>(ho=Oe.qc)(),gt=(d,m)=>(gt=Oe.rc)(d,m),Us=d=>(Us=Oe.sc)(d),mo=(d,m)=>(mo=Oe.tc)(d,m),mt=d=>(mt=Oe.uc)(d),Fn=d=>(Fn=Oe.vc)(d),_t=()=>(_t=Oe.wc)(),_o=d=>(_o=Oe.xc)(d),ii=d=>(ii=Oe.yc)(d),fo=(d,m,x)=>(fo=Oe.zc)(d,m,x),go=d=>(go=Oe.Ac)(d),oi=n.dynCall_iii=(d,m,x)=>(oi=n.dynCall_iii=Oe.Bc)(d,m,x),wo=n.dynCall_vi=(d,m)=>(wo=n.dynCall_vi=Oe.Cc)(d,m),ai=n.dynCall_ii=(d,m)=>(ai=n.dynCall_ii=Oe.Dc)(d,m),li=n.dynCall_vii=(d,m,x)=>(li=n.dynCall_vii=Oe.Ec)(d,m,x),yo=n.dynCall_iiii=(d,m,x,C)=>(yo=n.dynCall_iiii=Oe.Fc)(d,m,x,C),Mo=n.dynCall_viii=(d,m,x,C)=>(Mo=n.dynCall_viii=Oe.Gc)(d,m,x,C),di=n.dynCall_iiiii=(d,m,x,C,I)=>(di=n.dynCall_iiiii=Oe.Hc)(d,m,x,C,I),bo=n.dynCall_viiii=(d,m,x,C,I)=>(bo=n.dynCall_viiii=Oe.Ic)(d,m,x,C,I),vo=n.dynCall_viiiiii=(d,m,x,C,I,W,ne)=>(vo=n.dynCall_viiiiii=Oe.Jc)(d,m,x,C,I,W,ne),ci=n.dynCall_viiiiiii=(d,m,x,C,I,W,ne,ye)=>(ci=n.dynCall_viiiiiii=Oe.Kc)(d,m,x,C,I,W,ne,ye),xo=n.dynCall_ji=(d,m)=>(xo=n.dynCall_ji=Oe.Lc)(d,m),To=n.dynCall_v=d=>(To=n.dynCall_v=Oe.Mc)(d),ui=n.dynCall_viiiii=(d,m,x,C,I,W)=>(ui=n.dynCall_viiiii=Oe.Nc)(d,m,x,C,I,W),Eo=n.dynCall_i=d=>(Eo=n.dynCall_i=Oe.Oc)(d),Po=n.dynCall_fii=(d,m,x)=>(Po=n.dynCall_fii=Oe.Pc)(d,m,x),pi=n.dynCall_viiiiiiii=(d,m,x,C,I,W,ne,ye,Ee)=>(pi=n.dynCall_viiiiiiii=Oe.Qc)(d,m,x,C,I,W,ne,ye,Ee),Co=n.dynCall_viiiiiiiiii=(d,m,x,C,I,W,ne,ye,Ee,ze,Ye)=>(Co=n.dynCall_viiiiiiiiii=Oe.Rc)(d,m,x,C,I,W,ne,ye,Ee,ze,Ye),So=n.dynCall_jiii=(d,m,x,C)=>(So=n.dynCall_jiii=Oe.Sc)(d,m,x,C),hi=n.dynCall_dii=(d,m,x)=>(hi=n.dynCall_dii=Oe.Tc)(d,m,x),$o=n.dynCall_viiiiiiiii=(d,m,x,C,I,W,ne,ye,Ee,ze)=>($o=n.dynCall_viiiiiiiii=Oe.Uc)(d,m,x,C,I,W,ne,ye,Ee,ze),ko=n.dynCall_viiiiiiiiiii=(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot)=>(ko=n.dynCall_viiiiiiiiiii=Oe.Vc)(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot),mi=n.dynCall_iiiiii=(d,m,x,C,I,W)=>(mi=n.dynCall_iiiiii=Oe.Wc)(d,m,x,C,I,W),Io=n.dynCall_iij=(d,m,x)=>(Io=n.dynCall_iij=Oe.Xc)(d,m,x),Ao=n.dynCall_iiiiiiiiii=(d,m,x,C,I,W,ne,ye,Ee,ze)=>(Ao=n.dynCall_iiiiiiiiii=Oe.Yc)(d,m,x,C,I,W,ne,ye,Ee,ze),Fo=n.dynCall_iiiiiiiiiii=(d,m,x,C,I,W,ne,ye,Ee,ze,Ye)=>(Fo=n.dynCall_iiiiiiiiiii=Oe.Zc)(d,m,x,C,I,W,ne,ye,Ee,ze,Ye),Oo=n.dynCall_vij=(d,m,x)=>(Oo=n.dynCall_vij=Oe._c)(d,m,x),_i=n.dynCall_iiif=(d,m,x,C)=>(_i=n.dynCall_iiif=Oe.$c)(d,m,x,C),Do=n.dynCall_iiij=(d,m,x,C)=>(Do=n.dynCall_iiij=Oe.ad)(d,m,x,C),Lo=n.dynCall_fiii=(d,m,x,C)=>(Lo=n.dynCall_fiii=Oe.bd)(d,m,x,C),fi=n.dynCall_viiiiiiiiiiiii=(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)=>(fi=n.dynCall_viiiiiiiiiiiii=Oe.cd)(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt),zo=n.dynCall_vjiii=(d,m,x,C,I)=>(zo=n.dynCall_vjiii=Oe.dd)(d,m,x,C,I),Bo=n.dynCall_vif=(d,m,x)=>(Bo=n.dynCall_vif=Oe.ed)(d,m,x),gi=n.dynCall_iiiiiii=(d,m,x,C,I,W,ne)=>(gi=n.dynCall_iiiiiii=Oe.fd)(d,m,x,C,I,W,ne),Ro=n.dynCall_iiiij=(d,m,x,C,I)=>(Ro=n.dynCall_iiiij=Oe.gd)(d,m,x,C,I),No=n.dynCall_iiiiiiii=(d,m,x,C,I,W,ne,ye)=>(No=n.dynCall_iiiiiiii=Oe.hd)(d,m,x,C,I,W,ne,ye),wi=n.dynCall_viiiiiiiiiiii=(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft)=>(wi=n.dynCall_viiiiiiiiiiii=Oe.id)(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft),jo=n.dynCall_diii=(d,m,x,C)=>(jo=n.dynCall_diii=Oe.jd)(d,m,x,C),Vo=n.dynCall_jiiii=(d,m,x,C,I)=>(Vo=n.dynCall_jiiii=Oe.kd)(d,m,x,C,I),yi=n.dynCall_viiij=(d,m,x,C,I)=>(yi=n.dynCall_viiij=Oe.ld)(d,m,x,C,I),Uo=n.dynCall_fiiii=(d,m,x,C,I)=>(Uo=n.dynCall_fiiii=Oe.md)(d,m,x,C,I),Wo=n.dynCall_viiif=(d,m,x,C,I)=>(Wo=n.dynCall_viiif=Oe.nd)(d,m,x,C,I),Mi=n.dynCall_diiii=(d,m,x,C,I)=>(Mi=n.dynCall_diiii=Oe.od)(d,m,x,C,I),Go=n.dynCall_viiid=(d,m,x,C,I)=>(Go=n.dynCall_viiid=Oe.pd)(d,m,x,C,I),Ko=n.dynCall_iiiijii=(d,m,x,C,I,W,ne)=>(Ko=n.dynCall_iiiijii=Oe.qd)(d,m,x,C,I,W,ne),bi=n.dynCall_iiiiiij=(d,m,x,C,I,W,ne)=>(bi=n.dynCall_iiiiiij=Oe.rd)(d,m,x,C,I,W,ne),Ho=d=>(Ho=Oe.sd)(d),qo=()=>(qo=Oe.td)(),Qo=d=>(Qo=Oe.ud)(d),Xo=()=>(Xo=Oe.vd)();function Jo(d,m,x){var C=_t();try{li(d,m,x)}catch(I){if(mt(C),I!==I+0)throw I;gt(1,0)}}function ul(d,m,x){var C=_t();try{return oi(d,m,x)}catch(I){if(mt(C),I!==I+0)throw I;gt(1,0)}}function pl(d,m){var x=_t();try{wo(d,m)}catch(C){if(mt(x),C!==C+0)throw C;gt(1,0)}}function hl(d,m){var x=_t();try{return ai(d,m)}catch(C){if(mt(x),C!==C+0)throw C;gt(1,0)}}function ml(d,m,x,C){var I=_t();try{return yo(d,m,x,C)}catch(W){if(mt(I),W!==W+0)throw W;gt(1,0)}}function Yo(d,m,x,C,I){var W=_t();try{bo(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function _l(d,m,x,C,I){var W=_t();try{return di(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function fl(d,m,x,C){var I=_t();try{Mo(d,m,x,C)}catch(W){if(mt(I),W!==W+0)throw W;gt(1,0)}}function gl(d,m,x,C,I,W,ne){var ye=_t();try{return gi(d,m,x,C,I,W,ne)}catch(Ee){if(mt(ye),Ee!==Ee+0)throw Ee;gt(1,0)}}function wl(d){var m=_t();try{To(d)}catch(x){if(mt(m),x!==x+0)throw x;gt(1,0)}}function Zo(d,m,x){var C=_t();try{return Io(d,m,x)}catch(I){if(mt(C),I!==I+0)throw I;gt(1,0)}}function yl(d,m,x,C,I,W){var ne=_t();try{ui(d,m,x,C,I,W)}catch(ye){if(mt(ne),ye!==ye+0)throw ye;gt(1,0)}}function Ml(d,m,x){var C=_t();try{Oo(d,m,x)}catch(I){if(mt(C),I!==I+0)throw I;gt(1,0)}}function bl(d,m,x,C,I,W,ne){var ye=_t();try{vo(d,m,x,C,I,W,ne)}catch(Ee){if(mt(ye),Ee!==Ee+0)throw Ee;gt(1,0)}}function vl(d,m,x,C,I,W,ne,ye){var Ee=_t();try{ci(d,m,x,C,I,W,ne,ye)}catch(ze){if(mt(Ee),ze!==ze+0)throw ze;gt(1,0)}}function ea(d,m,x,C,I,W){var ne=_t();try{return mi(d,m,x,C,I,W)}catch(ye){if(mt(ne),ye!==ye+0)throw ye;gt(1,0)}}function xl(d,m,x,C,I,W,ne,ye){var Ee=_t();try{return No(d,m,x,C,I,W,ne,ye)}catch(ze){if(mt(Ee),ze!==ze+0)throw ze;gt(1,0)}}function Tl(d,m,x,C,I,W,ne,ye,Ee,ze){var Ye=_t();try{$o(d,m,x,C,I,W,ne,ye,Ee,ze)}catch(ot){if(mt(Ye),ot!==ot+0)throw ot;gt(1,0)}}function ta(d,m,x,C,I,W,ne,ye,Ee){var ze=_t();try{pi(d,m,x,C,I,W,ne,ye,Ee)}catch(Ye){if(mt(ze),Ye!==Ye+0)throw Ye;gt(1,0)}}function El(d){var m=_t();try{return Eo(d)}catch(x){if(mt(m),x!==x+0)throw x;gt(1,0)}}function Pl(d,m,x,C,I,W,ne,ye,Ee,ze){var Ye=_t();try{return Ao(d,m,x,C,I,W,ne,ye,Ee,ze)}catch(ot){if(mt(Ye),ot!==ot+0)throw ot;gt(1,0)}}function ra(d,m,x){var C=_t();try{return Po(d,m,x)}catch(I){if(mt(C),I!==I+0)throw I;gt(1,0)}}function Cl(d,m,x,C){var I=_t();try{return So(d,m,x,C)}catch(W){if(mt(I),W!==W+0)throw W;return gt(1,0),0n}}function Sl(d,m,x){var C=_t();try{return hi(d,m,x)}catch(I){if(mt(C),I!==I+0)throw I;gt(1,0)}}function sa(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot){var ft=_t();try{ko(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot)}catch(Bt){if(mt(ft),Bt!==Bt+0)throw Bt;gt(1,0)}}function $l(d,m,x,C,I,W,ne,ye,Ee,ze,Ye){var ot=_t();try{Co(d,m,x,C,I,W,ne,ye,Ee,ze,Ye)}catch(ft){if(mt(ot),ft!==ft+0)throw ft;gt(1,0)}}function kl(d,m,x,C,I,W,ne,ye,Ee,ze,Ye){var ot=_t();try{return Fo(d,m,x,C,I,W,ne,ye,Ee,ze,Ye)}catch(ft){if(mt(ot),ft!==ft+0)throw ft;gt(1,0)}}function na(d,m,x,C){var I=_t();try{return _i(d,m,x,C)}catch(W){if(mt(I),W!==W+0)throw W;gt(1,0)}}function Il(d,m,x,C){var I=_t();try{return Do(d,m,x,C)}catch(W){if(mt(I),W!==W+0)throw W;gt(1,0)}}function Al(d,m,x,C){var I=_t();try{return Lo(d,m,x,C)}catch(W){if(mt(I),W!==W+0)throw W;gt(1,0)}}function vi(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt){var Fr=_t();try{fi(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft,Bt)}catch($s){if(mt(Fr),$s!==$s+0)throw $s;gt(1,0)}}function Fl(d,m,x,C,I){var W=_t();try{zo(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function Ol(d,m,x){var C=_t();try{Bo(d,m,x)}catch(I){if(mt(C),I!==I+0)throw I;gt(1,0)}}function ia(d,m){var x=_t();try{return xo(d,m)}catch(C){if(mt(x),C!==C+0)throw C;return gt(1,0),0n}}function oa(d,m,x,C,I){var W=_t();try{return Ro(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function Dl(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft){var Bt=_t();try{wi(d,m,x,C,I,W,ne,ye,Ee,ze,Ye,ot,ft)}catch(Fr){if(mt(Bt),Fr!==Fr+0)throw Fr;gt(1,0)}}function aa(d,m,x,C){var I=_t();try{return jo(d,m,x,C)}catch(W){if(mt(I),W!==W+0)throw W;gt(1,0)}}function Ll(d,m,x,C,I){var W=_t();try{return Vo(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;return gt(1,0),0n}}function zl(d,m,x,C,I){var W=_t();try{yi(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function xi(d,m,x,C,I){var W=_t();try{return Uo(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function la(d,m,x,C,I){var W=_t();try{Wo(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function Bl(d,m,x,C,I){var W=_t();try{return Mi(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function Rl(d,m,x,C,I){var W=_t();try{Go(d,m,x,C,I)}catch(ne){if(mt(W),ne!==ne+0)throw ne;gt(1,0)}}function Nl(d,m,x,C,I,W,ne){var ye=_t();try{return Ko(d,m,x,C,I,W,ne)}catch(Ee){if(mt(ye),Ee!==Ee+0)throw Ee;gt(1,0)}}function da(d,m,x,C,I,W,ne){var ye=_t();try{return bi(d,m,x,C,I,W,ne)}catch(Ee){if(mt(ye),Ee!==Ee+0)throw Ee;gt(1,0)}}return n.stackSave=()=>_t(),n.stackRestore=d=>mt(d),n.stackAlloc=d=>Fn(d),n.setValue=function(d,m,x="i8"){switch(x.endsWith("*")&&(x="*"),x){case"i1":case"i8":N()[d>>>0]=m;break;case"i16":G()[d>>>1>>>0]=m;break;case"i32":X()[d>>>2>>>0]=m;break;case"i64":H[d>>>3]=BigInt(m);break;case"float":fe()[d>>>2>>>0]=m;break;case"double":ke()[d>>>3>>>0]=m;break;case"*":we()[d>>>2>>>0]=m;break;default:Ie(`invalid type for setValue: ${x}`)}},n.getValue=function(d,m="i8"){switch(m.endsWith("*")&&(m="*"),m){case"i1":case"i8":return N()[d>>>0];case"i16":return G()[d>>>1>>>0];case"i32":return X()[d>>>2>>>0];case"i64":return H[d>>>3];case"float":return fe()[d>>>2>>>0];case"double":return ke()[d>>>3>>>0];case"*":return we()[d>>>2>>>0];default:Ie(`invalid type for getValue: ${m}`)}},n.UTF8ToString=zt,n.stringToUTF8=Er,n.lengthBytesUTF8=hs,function d(){if(0<Pe)Te=d;else if(c)s(n),j();else{for(;0<te.length;)te.shift()(n);0<Pe?Te=d:(n.calledRun=!0,ce||(j(),s(n)))}}(),n.PTR_SIZE=4,o}),op=bd,ap=(r=(e=globalThis.self)==null?void 0:e.name)==null?void 0:r.startsWith("em-pthread"),ap&&bd()}),vd,xd,lp,Rr,dp,fa,cp,up,Td,pp,Ed,hp,Pd,mp,Cd=Ve(()=>{gd(),vd=typeof location>"u"?void 0:location.origin,xd=self.location.href>"file:"&&self.location.href<"file;",lp=()=>{{if(xd){let e=URL;return new URL(new e("ort.bundle.min.mjs",self.location.href).href,vd).href}return self.location.href}},Rr=lp(),dp=()=>{if(Rr&&!Rr.startsWith("blob:"))return Rr.substring(0,Rr.lastIndexOf("/")+1)},fa=(e,r)=>{try{let t=r??Rr;return(t?new URL(e,t):new URL(e)).origin===vd}catch{return!1}},cp=(e,r)=>{let t=r??Rr;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},up=(e,r)=>`${r??"./"}${e}`,Td=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},pp=async e=>(await import(e)).default,Ed=(av(),ma(sp)).default,hp=async()=>{if(!Rr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(fa(Rr))return[void 0,Ed()];let e=await Td(Rr);return[e,Ed(e)]},Pd=(lv(),ma(ip)).default,mp=async(e,r,t)=>{if(!e&&!r&&Pd&&Rr&&fa(Rr))return[void 0,Pd];{let s="ort-wasm-simd-threaded.jsep.mjs",i=e??cp(s,r),n=t&&i&&!fa(i,r),o=n?await Td(i):i??up(s,r);return[n?o:void 0,await pp(o)]}}}),Sd,ga,Ii,$d,_p,fp,kd,ar,mn=Ve(()=>{Cd(),ga=!1,Ii=!1,$d=!1,_p=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},fp=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},kd=async e=>{if(ga)return Promise.resolve();if(Ii)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if($d)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ii=!0;let r=e.initTimeout,t=e.numThreads;if(!fp())throw new Error("WebAssembly SIMD is not supported in the current environment.");let s=_p();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let i=e.wasmPaths,n=typeof i=="string"?i:void 0,o=i==null?void 0:i.mjs,a=(o==null?void 0:o.href)??o,l=i==null?void 0:i.wasm,c=(l==null?void 0:l.href)??l,p=e.wasmBinary,[u,h]=await mp(a,n,t>1),g=!1,f=[];if(r>0&&f.push(new Promise(P=>{setTimeout(()=>{g=!0,P()},r)})),f.push(new Promise((P,A)=>{let v={numThreads:t};if(p)v.wasmBinary=p;else if(c||n)v.locateFile=y=>c??n+y;else if(a&&a.indexOf("blob:")!==0)v.locateFile=y=>new URL(y,a).href;else if(u){let y=dp();y&&(v.locateFile=k=>y+k)}h(v).then(y=>{Ii=!1,ga=!0,Sd=y,P(),u&&URL.revokeObjectURL(u)},y=>{Ii=!1,$d=!0,A(y)})})),await Promise.race(f),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},ar=()=>{if(ga&&Sd)return Sd;throw new Error("WebAssembly is not initialized yet.")}}),Mr,wa,At,Id=Ve(()=>{mn(),Mr=(e,r)=>{let t=ar(),s=t.lengthBytesUTF8(e)+1,i=t._malloc(s);return t.stringToUTF8(e,i,s),r.push(i),i},wa=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([i,n])=>{let o=r?r+i:i;if(typeof n=="object")wa(n,o+".",t,s);else if(typeof n=="string"||typeof n=="number")s(o,n.toString());else if(typeof n=="boolean")s(o,n?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof n}`)})},At=e=>{let r=ar(),t=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetLastError(i,i+s);let n=Number(r.getValue(i,s===4?"i32":"i64")),o=r.getValue(i+s,"*"),a=o?r.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),gp,dv=Ve(()=>{mn(),Id(),gp=e=>{let r=ar(),t=0,s=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let n=0;return(e==null?void 0:e.tag)!==void 0&&(n=Mr(e.tag,s)),t=r._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,n),t===0&&At("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&wa(e.extra,"",new WeakSet,(o,a)=>{let l=Mr(o,s),c=Mr(a,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&At(`Can't set a run config entry: ${o} - ${a}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(o=>r._free(o)),n}}}),wp,yp,Mp,bp,vp,cv=Ve(()=>{mn(),Id(),wp=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},yp=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Mp=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},bp=(e,r,t)=>{for(let s of r){let i=typeof s=="string"?s:s.name;switch(i){case"webnn":if(i="WEBNN",typeof s!="string"){let o=s==null?void 0:s.deviceType;if(o){let a=Mr("deviceType",t),l=Mr(o,t);ar()._OrtAddSessionConfigEntry(e,a,l)!==0&&At(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(i="JS",typeof s!="string"){let o=s;if(o!=null&&o.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let a=Mr("preferredLayout",t),l=Mr(o.preferredLayout,t);ar()._OrtAddSessionConfigEntry(e,a,l)!==0&&At(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let n=Mr(i,t);ar()._OrtAppendExecutionProvider(e,n)!==0&&At(`Can't append execution provider: ${i}.`)}},vp=e=>{let r=ar(),t=0,s=[],i=e||{};Mp(i);try{let n=wp(i.graphOptimizationLevel??"all"),o=yp(i.executionMode??"sequential"),a=typeof i.logId=="string"?Mr(i.logId,s):0,l=i.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=i.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof i.optimizedModelFilePath=="string"?Mr(i.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(n,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,a,l,c,p),t===0&&At("Can't create session options."),i.executionProviders&&bp(t,i.executionProviders,s),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let u=Mr("enableGraphCapture",s),h=Mr(i.enableGraphCapture.toString(),s);r._OrtAddSessionConfigEntry(t,u,h)!==0&&At(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[u,h]of Object.entries(i.freeDimensionOverrides)){if(typeof u!="string")throw new Error(`free dimension override name must be a string: ${u}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let g=Mr(u,s);r._OrtAddFreeDimensionOverride(t,g,h)!==0&&At(`Can't set a free dimension override: ${u} - ${h}.`)}return i.extra!==void 0&&wa(i.extra,"",new WeakSet,(u,h)=>{let g=Mr(u,s),f=Mr(h,s);r._OrtAddSessionConfigEntry(t,g,f)!==0&&At(`Can't set a session config entry: ${u} - ${h}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&At("Can't release session options."),s.forEach(o=>r._free(o)),n}}}),Rn,_n,fn,Ad,ya,Fd,Od,Dd,pt=Ve(()=>{Rn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},_n=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},fn=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((i,n)=>i*n,1);return t>0?Math.ceil(s*t):void 0},Ad=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},ya=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Fd=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Od=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Dd=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Ld,xp=Ve(()=>{gd(),Ld=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=r.body.getReader(),n;try{n=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);n=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let o=0;for(;;){let{done:a,value:l}=await i.read();if(a)break;let c=l.byteLength;new Uint8Array(n,o,c).set(l),o+=c}return new Uint8Array(n,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Tp,Ep,Pp,Cp,zd,Sp,St,Is=Ve(()=>{pt(),Tp=["V","I","W","E","F"],Ep=(e,r)=>{console.log(`[${Tp[e]},${new Date().toISOString()}]${r}`)},zd=(e,r)=>{Pp=e,Cp=r},Sp=(e,r)=>{let t=ya(e),s=ya(Pp);t>=s&&Ep(t,typeof r=="function"?r():r)},St=(...e)=>{Cp&&Sp(...e)}}),Bd,$p=Ve(()=>{pt(),Bd=(e,r)=>new(Ad(r))(e)}),Rd=Ve(()=>{}),Nd,Ma,ba,kp,Ip,jd,Vd,Ap,Fp,uv=Ve(()=>{Is(),Rd(),Nd=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Ma=[],ba=e=>Math.ceil(Number(e)/16)*16,kp=e=>{for(let r=0;r<Ma.length;r++){let t=Ma[r];if(e<=t)return t}return Math.ceil(e/16)*16},Ip=1,jd=()=>Ip++,Vd=async(e,r,t,s)=>{let i=ba(t),n=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(r,0,n,0,i),e.flush(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{n.destroy()}},Ap=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of Nd)Ma.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,i=r.byteLength,n=ba(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,i)),a.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(a,0,o.gpuData.buffer,0,n),this.backend.device.queue.submit([c.finish()]),a.destroy(),St("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=ba(t.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,i)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return St("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=jd();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),St("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),St("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=kp(e),s,i=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||n){let a=(i?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let o={id:jd(),type:0,buffer:s};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(e)}),St("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){var r;return(r=this.storageCache.get(e))==null?void 0:r.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return St("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Vd(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=Nd.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(St("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Fp=(...e)=>new Ap(...e)}),Op,Dt,Yt=Ve(()=>{Op=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Dt=e=>new Op(e)}),Dp,Nn,xe,va,Lp,zp,Bp,Mt=Ve(()=>{Dp=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},Nn=class{static calcShape(e,r,t=!1){let s=e.length,i=r.length;if(s===0)return r;if(i===0)return e;let n=Math.max(e.length,r.length),o=new Array(n);if(t){if(s<2||i<2)return;let a=Dp.calcMatMulShape([e[s-2],e[s-1]],[r[i-2],r[i-1]]);if(a===void 0)return;[o[n-2],o[n-1]]=a}for(let a=t?3:1;a<=n;a++){let l=s-a<0?1:e[s-a],c=i-a<0?1:r[i-a];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)o[n-a]=Math.max(l,c);else{if(p>1)return;o[n-a]=0}}return o}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==r[s-i])return!1;return!0}},xe=class ad{static size(r){return ad.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let i=new Array(s),n=s-1;for(;n>=0;){if(r[n]%t===0){i[n]=r[n]/t;break}if(t%r[n]!==0)throw new Error("cannot convert shape");i[n]=1,t/=r[n],n--}for(n--;n>=0;n--)i[n]=r[n];return i}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return ad.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return ad.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let i=1;for(let n=t;n<s;n++){if(r[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(r[n])}return i}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let i=t-3;i>=0;--i)s[i]=s[i+1]*r[i+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((i,n)=>i+t[n]+t[n+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,i)=>s===t[i])}},va=class pa{static adjustPoolAttributes(r,t,s,i,n,o){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<i.length){if(i[a]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length*2;a++)if(a<o.length){if(o[a]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[a]>=s[a]||o[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,i,n,o,a){if(a){if(n.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)pa.adjustPadAndReturnShape(r[l+(o?1:2)],t[l],s[l],i[l],n,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,i,n,o,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return pa.computeShapeHelper(r,t,l,s,i,n,o,a),l}static computeConvOutputShape(r,t,s,i,n,o,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return pa.computeShapeHelper(!1,r,l,s,i,n,o,a),l}static computeShapeHelper(r,t,s,i,n,o,a,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(pa.adjustPadAndReturnShape(t[c+2],i[c],n[c],o[c],a,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,i,n,o,a,l){let c=s*(i-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return n[o]=0,n[a]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+i-r;return n[o]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),n[a]=p-n[o],Math.floor((r+p-i)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+n[o]+n[a]-c)/t+1)}},Lp=class{static getShapeOfGemmResult(e,r,t,s,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let n,o,a;r?(n=e[1],o=e[0]):(n=e[0],o=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==o)throw new Error("dimension mismatch");if(n<=0||a<=0||o<=0)throw new Error("invalid shape specified");if(i&&!Nn.isValidBroadcast(i,[n,a]))throw new Error("gemm: invalid bias shape for broadcast");return[n,a,o]}},zp=-34028234663852886e22,Bp=34028234663852886e22}),jn,xa,lr,Tr,nt,Xt,Ud,Vn,Gs,rt,Ai,$e,tt,Rp,Wd,Np,jp,xt=Ve(()=>{pt(),Mt(),jn=64,xa=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},lr=(e,r=1)=>{let t=xa(e,r);return typeof t=="string"?t:t[0]},Tr=(e,r=1)=>{let t=xa(e,r);return typeof t=="string"?t:t[1]},nt=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:xe.computeStrides(t)})}),r},Xt=e=>e%4===0?4:e%2===0?2:1,Ud=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,Vn=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,Gs=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,rt=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Ai=(e,r,t,s,i)=>{let n=typeof t=="number",o=n?t:t.length,a=[...new Array(o).keys()],l=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,c=xa(r,i),p=typeof c=="string"?c:c[1],u=typeof c=="string"?c:c[0],h={indices:l,value:p,storage:u,tensor:r},g=N=>typeof N=="string"?N:`${N}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},P=n?"uniforms.":"",A=`${P}${e}_shape`,v=`${P}${e}_strides`,y="";for(let N=0;N<o-1;N++)y+=`
    let dim${N} = current / ${rt(v,N,o)};
    let rest${N} = current % ${rt(v,N,o)};
    indices[${N}] = dim${N};
    current = rest${N};
    `;y+=`indices[${o-1}] = current;`;let k=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${y}
    return indices;
  }`,E=N=>(f.offsetToIndices=!0,o<2?N:`o2i_${e}(${N})`),M=[];if(o>=2)for(let N=o-1;N>=0;N--)M.push(`${rt(v,N,o)} * (indices[${N}])`);let w=o<2?"":`
  fn i2o_${e}(indices: ${h.indices}) -> u32 {
    return ${M.join("+")};
  }`,T=N=>(f.indicesToOffset=!0,o<2?N:`i2o_${e}(${N})`),$=(...N)=>o===0?"0u":`${h.indices}(${N.map(g).join(",")})`,z=(N,O)=>o<2?`${N}`:`${rt(N,O,o)}`,R=(N,O,G)=>o<2?`${N}=${G};`:`${rt(N,O,o)}=${G};`,Q={},q=(N,O)=>{f.broadcastedIndicesToOffset=!0;let G=`${O.name}broadcastedIndicesTo${e}Offset`;if(G in Q)return`${G}(${N})`;let se=[];for(let X=o-1;X>=0;X--){let we=O.indicesGet("outputIndices",X+O.rank-o);se.push(`${z(v,X)} * (${we} % ${z(A,X)})`)}return Q[G]=`fn ${G}(outputIndices: ${O.type.indices}) -> u32 {
             return ${se.length>0?se.join("+"):"0u"};
           }`,`${G}(${N})`},U=(N,O)=>(()=>{if(h.storage===h.value)return`${e}[${N}]=${O};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${e}[${N}]=vec2<u32>(u32(${O}), select(0u, 0xFFFFFFFFu, ${O} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${e}[${N}]=vec2<u32>(u32(${O}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${e}[${N}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${O}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Z=N=>(()=>{if(h.storage===h.value)return`${e}[${N}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${e}[${N}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${e}[${N}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${N}] & 0xFFu), bool(${e}[${N}] & 0xFF00u), bool(${e}[${N}] & 0xFF0000u), bool(${e}[${N}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),H=o<2?"":`
  fn get_${e}ByIndices(indices: ${h.indices}) -> ${p} {
    return ${Z(`i2o_${e}(indices)`)};
  }`,J=o<2?"":(()=>{let N=a.map(G=>`d${G}: u32`).join(", "),O=a.map(G=>`d${G}`).join(", ");return`
  fn get_${e}(${N}) -> ${p} {
    return get_${e}ByIndices(${$(O)});
  }`})(),ie=(...N)=>{if(N.length!==o)throw new Error(`indices length must be ${o}`);let O=N.map(g).join(",");return o===0?Z("0u"):o===1?Z(O[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${O})`)},ae=N=>o<2?Z(N):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${N})`),ce=o<2?"":`
  fn set_${e}ByIndices(indices: ${h.indices}, value: ${p}) {
    ${U(`i2o_${e}(indices)`,"value")}
  }`,he=o<2?"":(()=>{let N=a.map(G=>`d${G}: u32`).join(", "),O=a.map(G=>`d${G}`).join(", ");return`
  fn set_${e}(${N}, value: ${p}) {
    set_${e}ByIndices(${$(O)}, value);
  }`})();return{impl:()=>{let N=[],O=!1;return f.offsetToIndices&&(N.push(k),O=!0),f.indicesToOffset&&(N.push(w),O=!0),f.broadcastedIndicesToOffset&&(Object.values(Q).forEach(G=>N.push(G)),O=!0),f.set&&(N.push(he),O=!0),f.setByIndices&&(N.push(ce),O=!0),f.get&&(N.push(J),O=!0),f.getByIndices&&(N.push(H),O=!0),!n&&O&&N.unshift(`const ${A} = ${h.indices}(${t.join(",")});`,`const ${v} = ${h.indices}(${xe.computeStrides(t).join(",")});`),N.join(`
`)},type:h,offsetToIndices:E,indicesToOffset:T,broadcastedIndicesToOffset:q,indices:$,indicesGet:z,indicesSet:R,set:(...N)=>{if(N.length!==o+1)throw new Error(`indices length must be ${o}`);let O=N[o];if(typeof O!="string")throw new Error("value must be string");let G=N.slice(0,o).map(g).join(",");return o===0?U("0u",O):o===1?U(G[0],O):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${G}, ${O})`)},setByOffset:U,setByIndices:(N,O)=>o<2?U(N,O):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${N}, ${O});`),get:ie,getByOffset:Z,getByIndices:ae,usage:s,name:e,strides:v,shape:A,rank:o}},$e=(e,r,t,s=1)=>Ai(e,r,t,"input",s),tt=(e,r,t,s=1)=>Ai(e,r,t,"output",s),Rp=(e,r,t)=>Ai(e,r,t,"atomicOutput",1),Wd=(e,r,t,s=1)=>Ai(e,r,t,"internal",s),Np=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=jn){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,n=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${n}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let i=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},jp=(e,r)=>new Np(e,r)}),Vp,Gd,Up,Wp,Gp,Kp,Nr,Hp,qp,Ks=Ve(()=>{pt(),Mt(),Yt(),xt(),Vp=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},Gd=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),Up=(e,r)=>xe.sortBasedOnPerm(e,Gd(e.length,r)),Wp=(e,r,t,s)=>{let i=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let n=0;n<r;++n)i+=`a[${e[n]}]=i[${n}];`;return i+="return a;}"},Gp=(e,r)=>{let t=[],s=[];for(let i=0;i<e.length;++i)e[i]!==1&&t.push(e[i]),e[r[i]]!==1&&s.push(r[i]);return{newShape:t,newPerm:s}},Kp=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},Nr=(e,r)=>{let t=e.dataType,s=e.dims.length,i=Gd(s,r),n=Up(e.dims,i),o=e.dims,a=n,l=s<2||Kp(i,e.dims),c;if(l)return c=f=>{let P=$e("input",t,o,4),A=tt("output",t,a,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(P,A)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=xe.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:c};let{newShape:p,newPerm:u}=Gp(e.dims,i),h=xe.areEqual(u,[2,3,1]),g=xe.areEqual(u,[3,1,2]);if(p.length===2||h||g){o=h?[p[0],p[1]*p[2]]:g?[p[0]*p[1],p[2]]:p,a=[o[1],o[0]];let f=16;return c=P=>{let A=$e("a",t,o.length),v=tt("output",t,a.length);return`
  ${P.registerUniform("output_size","u32").declareVariables(A,v)}
  var<workgroup> tile : array<array<${v.type.value}, ${f+1}>, ${f}>;
  ${P.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${A.getByIndices(`${A.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${v.setByIndices(`${v.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let P=xe.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/f),y:Math.ceil(a[0]/f)},programUniforms:[{type:12,data:P},...nt(o,a)]}},getShaderSource:c}}return c=f=>{let P=$e("a",t,o.length),A=tt("output",t,a.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(P,A)}

  ${Wp(i,s,P,A)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${A.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${A.setByOffset("global_idx",P.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let f=xe.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...nt(o,a)]}},getShaderSource:c}},Hp=(e,r)=>{Vp(e.inputs,r.perm),e.compute(Nr(e.inputs[0],r.perm))},qp=e=>Dt({perm:e.perm})}),Qp,Xp,Jp,Yp,Zp,eh,th,rh,sh,nh,ns,ih,oh,ah,lh,dh,ch,uh,ph,hh,mh,pv=Ve(()=>{pt(),Mt(),xt(),Hd(),Ks(),Qp={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Xp={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Jp={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Yp={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Zp=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},eh=(e,r)=>{let t=[],s=e.length;for(let n=0;n<s;n++)r.indexOf(n)===-1&&t.push(e[n]);let i=r.map(n=>e[n]);return[t,i]},th=(e,r)=>{let t=e.length+r.length,s=[],i=0;for(let n=0;n<t;n++)r.indexOf(n)===-1?s.push(e[i++]):s.push(1);return s},rh=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},sh=(e,r)=>{let t=[];if(!rh(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},nh=(e,r,t,s,i,n,o)=>{let a=t[0].dims,l=xe.size(n),c=xe.size(o),p=$e("_A",t[0].dataType,a),u=tt("output",i,n),h=64;l===1&&(h=256);let g=`
          var<workgroup> aBestValues : array<f32, ${h}>;
       `,f=P=>`
        ${P.registerUniform("reduceSize","u32").declareVariables(p,u)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${P.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Jp[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${Qp[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Xp[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${u.setByOffset("outputIndex",`${s==="mean"?`${u.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${u.type.storage}(${Yp[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${h}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},ns=(e,r,t,s)=>{let i=e.inputs.length===1?t:Kd(e.inputs,t),n=i.axes;n.length===0&&!i.noopWithEmptyAxes&&(n=e.inputs[0].dims.map((g,f)=>f));let o=xe.normalizeAxes(n,e.inputs[0].dims.length),a=o,l=e.inputs[0],c=sh(a,e.inputs[0].dims.length);c.length>0&&(l=e.compute(Nr(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],a=Zp(a.length,l.dims.length));let[p,u]=eh(l.dims,a),h=p;i.keepDims&&(h=th(p,o)),e.compute(nh(r,i.cacheKey,[l],s,e.inputs[0].dataType,h,u),{inputs:[l]})},ih=(e,r)=>{ns(e,"ReduceMeanShared",r,"mean")},oh=(e,r)=>{ns(e,"ReduceL1Shared",r,"l1")},ah=(e,r)=>{ns(e,"ReduceL2Shared",r,"l2")},lh=(e,r)=>{ns(e,"ReduceLogSumExpShared",r,"logSumExp")},dh=(e,r)=>{ns(e,"ReduceMaxShared",r,"max")},ch=(e,r)=>{ns(e,"ReduceMinShared",r,"min")},uh=(e,r)=>{ns(e,"ReduceProdShared",r,"prod")},ph=(e,r)=>{ns(e,"ReduceSumShared",r,"sum")},hh=(e,r)=>{ns(e,"ReduceSumSquareShared",r,"sumSquare")},mh=(e,r)=>{ns(e,"ReduceLogSumShared",r,"logSum")}}),is,_h,Ta,Kd,os,fh,gh,wh,yh,Mh,bh,vh,xh,Th,Eh,as,Ph,Ch,Sh,$h,kh,Ih,Ah,Fh,Oh,Dh,Hd=Ve(()=>{pt(),Mt(),Yt(),xt(),pv(),is=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},_h=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Ta=(e,r,t,s,i,n,o=!1,a=!1)=>{let l=[],c=t[0].dims,p=c.length,u=xe.normalizeAxes(i,p),h=!a&&u.length===0;c.forEach((P,A)=>{h||u.indexOf(A)>=0?o&&l.push(1):l.push(P)});let g=l.length,f=xe.size(l);return{name:e,shaderCache:r,getShaderSource:P=>{let A=[],v=$e("_A",t[0].dataType,p),y=tt("output",n,g),k=s(v,y,u),E=k[2];for(let M=0,w=0;M<p;M++)h||u.indexOf(M)>=0?(o&&w++,E=`for(var j${M}: u32 = 0; j${M} < ${c[M]}; j${M}++) {
                  ${k[2].includes("last_index")?`let last_index = j${M};`:""}
                  ${v.indicesSet("input_indices",M,`j${M}`)}
                  ${E}
                }`):(A.push(`${v.indicesSet("input_indices",M,y.indicesGet("output_indices",w))};`),w++);return`

        ${P.registerUniform("output_size","u32").declareVariables(v,y)}

        ${P.mainStart()}
          ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${v.type.indices};
          let output_indices = ${y.offsetToIndices("global_idx")};

          ${A.join(`
`)}
          ${k[0]}       // init ops for reduce max/min
          ${k[1]}
          ${E}
          ${k[3]}
          ${k.length===4?y.setByOffset("global_idx","value"):k.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...nt(c,l)]})}},Kd=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Dt({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},os=(e,r,t,s)=>{let i=e.inputs,n=i.length===1?t:Kd(i,t);e.compute(Ta(r,{hint:n.cacheKey,inputDependencies:["rank"]},[i[0]],n.noopWithEmptyAxes&&n.axes.length===0?_h:s,n.axes,i[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},fh=(e,r)=>{is(e.inputs),os(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},gh=(e,r)=>{is(e.inputs),os(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},wh=(e,r)=>{is(e.inputs),os(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},yh=(e,r)=>{is(e.inputs),os(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},Mh=(e,r)=>{is(e.inputs),os(e,"ReduceMax",r,(t,s,i)=>{let n=[];for(let o=0;o<t.rank;o++)(i.indexOf(o)>=0||i.length===0)&&n.push(t.indicesSet("input_indices",o,0));return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},bh=(e,r)=>{is(e.inputs),os(e,"ReduceMean",r,(t,s,i)=>{let n=1;for(let o=0;o<t.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(n*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},vh=(e,r)=>{is(e.inputs),os(e,"ReduceMin",r,(t,s,i)=>{let n=[];for(let o=0;o<t.rank;o++)(i.indexOf(o)>=0||i.length===0)&&n.push(`input_indices[${o}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},xh=(e,r)=>{is(e.inputs),os(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},Th=(e,r)=>{is(e.inputs),os(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},Eh=(e,r)=>{is(e.inputs),os(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},as=(e,r,t)=>{if(r.length===0)return t;let s=1,i=1;for(let n=0;n<r.length;n++)r.indexOf(n)===-1?s*=e[n]:i*=e[n];return i<32&&s>1024},Ph=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?bh(e,r):ih(e,r)},Ch=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?gh(e,r):oh(e,r)},Sh=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?wh(e,r):ah(e,r)},$h=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?yh(e,r):lh(e,r)},kh=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Mh(e,r):dh(e,r)},Ih=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?vh(e,r):ch(e,r)},Ah=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?xh(e,r):uh(e,r)},Fh=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Th(e,r):ph(e,r)},Oh=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Eh(e,r):hh(e,r)},Dh=(e,r)=>{as(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?fh(e,r):mh(e,r)}}),qd,Lh,zh,Qd,hv=Ve(()=>{pt(),Yt(),Hd(),qd=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Lh=(e,r)=>{qd(e.inputs);let t=(s,i,n)=>{let o=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Ta("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},zh=(e,r)=>{qd(e.inputs);let t=(s,i,n)=>{let o=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Ta("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Qd=e=>Dt(e)}),Bh,Ea,Rh,Nh,jh,Fi,Vh,Uh,Xd=Ve(()=>{pt(),Mt(),Rd(),xt(),Bh=(e,r)=>{let t=e[0],s=e[1],i=e[2],n=e[3],o=e[4],a=e[5];if(o&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let u=i.dims[0]/3,h=u,g=h;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let k of r.qkvHiddenSizes)if(k%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");u=r.qkvHiddenSizes[0],h=r.qkvHiddenSizes[1],g=r.qkvHiddenSizes[2]}let f=c;if(u!==h)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==u+h+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let P=0;if(o){if(h!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==h/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(P=o.dims[3])}let A=f+P,v=-1,y=0;if(n)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==c||a.dims[3]!==A)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:P,kvSequenceLength:f,totalSequenceLength:A,maxSequenceLength:v,inputHiddenSize:p,hiddenSize:u,vHiddenSize:g,headSize:Math.floor(u/r.numHeads),vHeadSize:Math.floor(g/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:y,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Ea=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Rh=(e,r,t,s,i,n,o,a)=>{let l=Xt(o?1:n),c=64,p=n/l;p<c&&(c=32);let u=Math.ceil(n/l/c),h=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:i},{type:12,data:p},{type:12,data:u}],g=lr(e.dataType,l),f=Tr(1,l),P=["type"];o&&P.push("type"),a&&P.push("type");let A=v=>{let y=tt("x",e.dataType,e.dims,l),k=[y],E=o?$e("seq_lens",o.dataType,o.dims):void 0;E&&k.push(E);let M=a?$e("total_sequence_length_input",a.dataType,a.dims):void 0;M&&k.push(M);let w=Tr(e.dataType),T=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${v.registerUniforms(T).declareVariables(...k)}
  ${v.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${Ea(E,M,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${y.type.value}(${w}(1.0) / ${w}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${y.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${y.type.value}(${w}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${g};${l}`,inputDependencies:P},getShaderSource:A,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:i,z:r*t},programUniforms:h})}},Nh=(e,r,t,s,i,n,o,a,l)=>{let c=o+n.kvSequenceLength,p=[n.batchSize,n.numHeads,n.sequenceLength,c],u=e>1&&s,h=n.kvNumHeads?n.kvNumHeads:n.numHeads,g=u?[n.batchSize,h,c,n.headSize]:void 0,f=n.nReps?n.nReps:1,P=n.scale===0?1/Math.sqrt(n.headSize):n.scale,A=Xt(n.headSize),v=n.headSize/A,y=12,k={x:Math.ceil(c/y),y:Math.ceil(n.sequenceLength/y),z:n.batchSize*n.numHeads},E=[{type:12,data:n.sequenceLength},{type:12,data:v},{type:12,data:c},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:P},{type:12,data:o},{type:12,data:n.kvSequenceLength},{type:12,data:f}],M=u&&s&&xe.size(s.dims)>0,w=["type","type"];M&&w.push("type"),i&&w.push("type"),a&&w.push("type"),l&&w.push("type");let T=[{dims:p,dataType:r.dataType,gpuDataType:0}];u&&T.push({dims:g,dataType:r.dataType,gpuDataType:0});let $=z=>{let R=$e("q",r.dataType,r.dims,A),Q=$e("key",t.dataType,t.dims,A),q=[R,Q];if(M){let ce=$e("past_key",s.dataType,s.dims,A);q.push(ce)}i&&q.push($e("attention_bias",i.dataType,i.dims));let U=a?$e("seq_lens",a.dataType,a.dims):void 0;U&&q.push(U);let Z=l?$e("total_sequence_length_input",l.dataType,l.dims):void 0;Z&&q.push(Z);let H=tt("output",r.dataType,p),J=[H];u&&J.push(tt("present_key",r.dataType,g,A));let ie=Tr(1,A),ae=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${y}u;

  var<workgroup> tileQ: array<${R.type.storage}, ${y*y}>;
  var<workgroup> tileK: array<${R.type.storage}, ${y*y}>;
  ${z.registerUniforms(ae).declareVariables(...q,...J)}
  ${z.mainStart([y,y,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${Ea(U,Z,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${M&&u?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${u?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${ie}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${M&&u?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${u?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${ie}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(A){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${A}`)}})()};
        output[outputIdx] = ${H.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${A};${i!==void 0};${s!==void 0};${e}`,inputDependencies:w},getRunData:()=>({outputs:T,dispatchGroup:k,programUniforms:E}),getShaderSource:$}},jh=(e,r,t,s,i,n,o=void 0,a=void 0)=>{let l=n+i.kvSequenceLength,c=i.nReps?i.nReps:1,p=i.vHiddenSize*c,u=e>1&&s,h=i.kvNumHeads?i.kvNumHeads:i.numHeads,g=u?[i.batchSize,h,l,i.headSize]:void 0,f=[i.batchSize,i.sequenceLength,p],P=12,A={x:Math.ceil(i.vHeadSize/P),y:Math.ceil(i.sequenceLength/P),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:l},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:p},{type:12,data:n},{type:12,data:i.kvSequenceLength},{type:12,data:c}],y=u&&s&&xe.size(s.dims)>0,k=["type","type"];y&&k.push("type"),o&&k.push("type"),a&&k.push("type");let E=[{dims:f,dataType:r.dataType,gpuDataType:0}];u&&E.push({dims:g,dataType:r.dataType,gpuDataType:0});let M=w=>{let T=$e("probs",r.dataType,r.dims),$=$e("v",t.dataType,t.dims),z=[T,$];y&&z.push($e("past_value",s.dataType,s.dims));let R=o?$e("seq_lens",o.dataType,o.dims):void 0;o&&z.push(R);let Q=a?$e("total_sequence_length_input",a.dataType,a.dims):void 0;a&&z.push(Q);let q=[tt("output",r.dataType,f)];u&&q.push(tt("present_value",r.dataType,g));let U=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${P}u;
  var<workgroup> tileQ: array<${T.type.value}, ${P*P}>;
  var<workgroup> tileV: array<${T.type.value}, ${P*P}>;
  ${w.registerUniforms(U).declareVariables(...z,...q)}
  ${w.mainStart([P,P,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${Ea(R,Q,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${y&&u?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${u?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${T.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${y&&u?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${u?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:k},getRunData:()=>({outputs:E,dispatchGroup:A,programUniforms:v}),getShaderSource:M}},Fi=(e,r,t,s,i,n,o,a,l,c,p=void 0,u=void 0)=>{let h=Math.min(e.outputCount,1+(o?1:0)+(a?1:0)),g=h>1?c.pastSequenceLength:0,f=g+c.kvSequenceLength,P=l&&xe.size(l.dims)>0?l:void 0,A=[r,t];h>1&&o&&xe.size(o.dims)>0&&A.push(o),P&&A.push(P),p&&A.push(p),u&&A.push(u);let v=e.compute(Nh(h,r,t,o,P,c,g,p,u),{inputs:A,outputs:h>1?[-1,1]:[-1]})[0];e.compute(Rh(v,c.batchSize,c.numHeads,g,c.sequenceLength,f,p,u),{inputs:p&&u?[v,p,u]:[v],outputs:[]});let y=[v,s];h>1&&a&&xe.size(a.dims)>0&&y.push(a),p&&y.push(p),u&&y.push(u),e.compute(jh(h,v,s,a,c,g,p,u),{inputs:y,outputs:h>1?[0,2]:[0]})},Vh=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,i=r.inputHiddenSize,n=r.headSize,o=12,a={x:Math.ceil(r.headSize/o),y:Math.ceil(r.sequenceLength/o),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:i},{type:12,data:n},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=u=>{let h=tt("output_q",l[0].dataType,t),g=tt("output_k",l[0].dataType,t),f=tt("output_v",l[0].dataType,t),P=$e("input",l[0].dataType,l[0].dims),A=$e("weight",l[1].dataType,l[1].dims),v=$e("bias",l[2].dataType,l[2].dims),y=P.type.storage,k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${y}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${y}, ${o*o}>;
  var<workgroup> tileWeightK: array<${y}, ${o*o}>;
  var<workgroup> tileWeightV: array<${y}, ${o*o}>;
  ${u.registerUniforms(k).declareVariables(P,A,v,h,g,f)}
  ${u.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${y}(0);
    var valueK = ${y}(0);
    var valueV = ${y}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},Uh=(e,r)=>{let t=Bh(e.inputs,r),[s,i,n]=Vh(e,t);return Fi(e,s,i,n,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),Wh,Gh,Kh,Hh,mv=Ve(()=>{ss(),pt(),Mt(),Yt(),xt(),Wh=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,i,n)=>{let o=i.length;if(o!==s.length)throw new Error(`${n}: num dimensions != ${o}`);i.forEach((a,l)=>{if(a!==s[l])throw new Error(`${n}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},Gh=(e,r)=>{let{epsilon:t,spatial:s,format:i}=r,n=e[0].dims,o=s?Xt(n[n.length-1]):1,a=i==="NHWC"&&n.length>1?o:1,l=xe.size(n)/o,c=s,p=c?n.length:n,u=$e("x",e[0].dataType,e[0].dims,o),h=$e("scale",e[1].dataType,e[1].dims,a),g=$e("bias",e[2].dataType,e[2].dims,a),f=$e("inputMean",e[3].dataType,e[3].dims,a),P=$e("inputVar",e[4].dataType,e[4].dims,a),A=tt("y",e[0].dataType,p,o),v=()=>{let k="";if(s)k=`let cOffset = ${n.length===1?"0u":i==="NHWC"?`outputIndices[${n.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")k=`
            ${A.indicesSet("outputIndices","0","0")}
            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{k=`var cIndices = ${h.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let E=1;E<h.rank;E++)k+=`cIndices[${E}] = outputIndices[${E}];`;k+=`let cOffset = ${h.indicesToOffset("cIndices")};`}return k},y=k=>`
  const epsilon = ${t};
  ${k.registerUniform("outputSize","u32").declareVariables(u,h,g,f,P,A)}
  ${k.mainStart()}
  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${A.offsetToIndices(`global_idx * ${o}`)};
    ${v()}
    let scale = ${h.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${P.getByOffset("cOffset")};
    let x = ${u.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${A.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${o}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:y,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...nt(n)]:[{type:12,data:l}]})}},Kh=e=>Dt(e),Hh=(e,r)=>{let{inputs:t,outputCount:s}=e,i=Kh({...r,outputCount:s});if(Ut.webgpu.validateInputContent&&Wh(t,i),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Gh(t,i))}}),qh,Qh,Xh,_v=Ve(()=>{Mt(),xt(),qh=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Qh=e=>{let r=e[0].dims,t=e[0].dims[2],s=xe.size(r)/4,i=e[0].dataType,n=$e("input",i,r,4),o=$e("bias",i,[t],4),a=$e("residual",i,r,4),l=tt("output",i,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(n,o,a,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${n.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},Xh=e=>{qh(e.inputs),e.compute(Qh(e.inputs))}}),Jh,$t,Yh,Zh,em,tm,rm,sm,nm,im,om,am,lm,dm,cm,um,Oi,pm,Pa,hm,mm,_m,fm,gm,wm,ym,Mm,bm,vm,xm,Tm,Em,Pm,Cm,Sm,Jd,$m,Yd,Zd,km,Im,Am,Fm,Om,Dm,ec=Ve(()=>{pt(),Mt(),Yt(),xt(),Jh=(e,r,t,s,i,n,o)=>{let a=Math.ceil(r/4),l="";typeof i=="string"?l=`${i}(a)`:l=i("a");let c=$e("inputData",t,[a],4),p=tt("outputData",s,[a],4),u=[{name:"vec_size",type:"u32"}];return o&&u.push(...o),`
      ${e.registerUniforms(u).declareVariables(c,p)}

  ${n??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},$t=(e,r,t,s,i,n=e.dataType,o,a)=>{let l=[{type:12,data:Math.ceil(xe.size(e.dims)/4)}];return o&&l.push(...o),{name:r,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:c=>Jh(c,xe.size(e.dims),e.dataType,n,t,s,a),getRunData:c=>({outputs:[{dims:e.dims,dataType:n}],dispatchGroup:{x:Math.ceil(xe.size(c[0].dims)/64/4)},programUniforms:l})}},Yh=e=>{e.compute($t(e.inputs[0],"Abs","abs"))},Zh=e=>{e.compute($t(e.inputs[0],"Acos","acos"))},em=e=>{e.compute($t(e.inputs[0],"Acosh","acosh"))},tm=e=>{e.compute($t(e.inputs[0],"Asin","asin"))},rm=e=>{e.compute($t(e.inputs[0],"Asinh","asinh"))},sm=e=>{e.compute($t(e.inputs[0],"Atan","atan"))},nm=e=>{e.compute($t(e.inputs[0],"Atanh","atanh"))},im=e=>Dt(e),om=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute($t(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},am=e=>{let r,t,s=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Dt({min:r,max:t})},lm=(e,r)=>{let t=r||am(e.inputs),s=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},dm=e=>{e.compute($t(e.inputs[0],"Ceil","ceil"))},cm=e=>{e.compute($t(e.inputs[0],"Cos","cos"))},um=e=>{e.compute($t(e.inputs[0],"Cosh","cosh"))},Oi=e=>Dt(e),pm=(e,r)=>{let t=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},Pa=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,hm=e=>{let r=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,Pa(r)))},mm=e=>{e.compute($t(e.inputs[0],"Exp","exp"))},_m=e=>{e.compute($t(e.inputs[0],"Floor","floor"))},fm=e=>{let r=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,Pa(r)))},gm=(e,r)=>{let t=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},wm=e=>{e.compute($t(e.inputs[0],"Not",r=>`!${r}`))},ym=e=>{e.compute($t(e.inputs[0],"Neg",r=>`-${r}`))},Mm=e=>{e.compute($t(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},bm=e=>{let r=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},vm=e=>{e.compute($t(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},xm=e=>Dt(e),Tm=(e,r)=>{let t=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},Em=e=>{e.compute($t(e.inputs[0],"Sin","sin"))},Pm=e=>{e.compute($t(e.inputs[0],"Sinh","sinh"))},Cm=e=>{e.compute($t(e.inputs[0],"Sqrt","sqrt"))},Sm=e=>{e.compute($t(e.inputs[0],"Tan","tan"))},Jd=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,$m=e=>{e.compute($t(e.inputs[0],"Tanh",Jd))},Yd=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Jd("v")};
}
`,Zd=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,km=e=>{let r=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"FastGelu",Zd,Yd(r),void 0,e.inputs[0].dataType))},Im=(e,r)=>{let t=Tr(e.inputs[0].dataType);return e.compute($t(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},Am=e=>{e.compute($t(e.inputs[0],"Log","log"))},Fm=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Om=e=>`quick_gelu_impl(${e})`,Dm=(e,r)=>{let t=Tr(e.inputs[0].dataType);e.compute($t(e.inputs[0],"QuickGelu",Om,Fm(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),Lm,zm,Bm,fv=Ve(()=>{Mt(),xt(),ec(),Lm=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},zm=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=$e("input",e[0].dataType,e[0].dims,4),s=$e("bias",e[0].dataType,[e[0].dims[2]],4),i=tt("output",e[0].dataType,r,4),n=xe.size(r)/4,o=lr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,i)}

  ${Pa(o)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Bm=e=>{Lm(e.inputs),e.compute(zm(e.inputs))}}),Rm,Nm,ls,jm,Vm,Um,Wm,Gm,Km,Hm,qm,Qm,Xm,gv=Ve(()=>{pt(),Mt(),xt(),Rm=(e,r,t,s,i,n,o,a,l,c,p,u)=>{let h,g;typeof a=="string"?h=g=(y,k)=>`${a}((${y}),(${k}))`:typeof a=="function"?h=g=a:(h=a.scalar,g=a.vector);let f=tt("outputData",p,s.length,4),P=$e("aData",l,r.length,4),A=$e("bData",c,t.length,4),v;if(i)if(n){let y=xe.size(r)===1,k=xe.size(t)===1,E=r.length>0&&r[r.length-1]%4===0,M=t.length>0&&t[t.length-1]%4===0;y||k?v=f.setByOffset("global_idx",g(y?`${P.type.value}(${P.getByOffset("0")}.x)`:P.getByOffset("global_idx"),k?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):v=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${P.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",g(o||E?P.getByOffset("offsetA / 4u"):`${P.type.value}(${P.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||M?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else v=f.setByOffset("global_idx",g(P.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let y=(k,E,M="")=>{let w=`aData[indexA${E}][componentA${E}]`,T=`bData[indexB${E}][componentB${E}]`;return`
            let outputIndices${E} = ${f.offsetToIndices(`global_idx * 4u + ${E}u`)};
            let offsetA${E} = ${P.broadcastedIndicesToOffset(`outputIndices${E}`,f)};
            let offsetB${E} = ${A.broadcastedIndicesToOffset(`outputIndices${E}`,f)};
            let indexA${E} = offsetA${E} / 4u;
            let indexB${E} = offsetB${E} / 4u;
            let componentA${E} = offsetA${E} % 4u;
            let componentB${E} = offsetB${E} % 4u;
            ${k}[${E}] = ${M}(${h(w,T)});
          `};p===9?v=`
            var data = vec4<u32>(0);
            ${y("data",0,"u32")}
            ${y("data",1,"u32")}
            ${y("data",2,"u32")}
            ${y("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:v=`
            ${y("outputData[global_idx]",0)}
            ${y("outputData[global_idx]",1)}
            ${y("outputData[global_idx]",2)}
            ${y("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(P,A,f)}

        ${u??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${v}
      }`},Nm=(e,r,t,s,i,n,o=t.dataType)=>{let a=t.dims.map(P=>Number(P)??1),l=s.dims.map(P=>Number(P)??1),c=!xe.areEqual(a,l),p=a,u=xe.size(a),h=!1,g=!1,f=[c];if(c){let P=Nn.calcShape(a,l,!1);if(!P)throw new Error("Can't perform binary op on the given tensors");p=P.slice(),u=xe.size(p);let A=xe.size(a)===1,v=xe.size(l)===1,y=a.length>0&&a[a.length-1]%4===0,k=l.length>0&&l[l.length-1]%4===0;f.push(A),f.push(v),f.push(y),f.push(k);let E=1;for(let M=1;M<p.length;M++){let w=a[a.length-M],T=l[l.length-M];if(w===T)E*=w;else break}E%4===0?(g=!0,h=!0):(A||v||y||k)&&(h=!0)}else h=!0;return f.push(h),{name:e,shaderCache:{hint:r+f.map(P=>P.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:P=>Rm(P,a,l,p,h,c,g,i,t.dataType,s.dataType,o,n),getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(xe.size(p)/4)},...nt(a,l,p)]})}},ls=(e,r,t,s,i,n)=>{e.compute(Nm(r,i??"",e.inputs[0],e.inputs[1],t,s,n))},jm=e=>{ls(e,"Add",(r,t)=>`${r}+${t}`)},Vm=e=>{ls(e,"Div",(r,t)=>`${r}/${t}`)},Um=e=>{ls(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},Wm=e=>{ls(e,"Mul",(r,t)=>`${r}*${t}`)},Gm=e=>{let r=$e("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ls(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Km=e=>{ls(e,"Sub",(r,t)=>`${r}-${t}`)},Hm=e=>{ls(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},qm=e=>{ls(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},Qm=e=>{ls(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},Xm=e=>{ls(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),Jm,Ym,Zm,e_,t_,r_,wv=Ve(()=>{pt(),Mt(),Yt(),xt(),Jm=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],i=s.dataType,n=s.dims.length;e.forEach((o,a)=>{if(a!==t){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==n)throw new Error("input tensors should have the same shape");o.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},Ym=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Zm=(e,r)=>{let t=e.length,s=[];for(let i=0;i<t;++i){let n=r.setByOffset("global_idx",e[i].getByIndices("indices"));t===1?s.push(n):i===0?s.push(`if (inputIndex == ${i}u) { ${n} }`):i===t-1?s.push(`else { ${n} }`):s.push(`else if (inputIndex == ${i}) { ${n} }`)}return s.join(`
`)},e_=(e,r,t,s)=>{let i=xe.size(t),n=new Array(e.length),o=new Array(e.length),a=0,l=[],c=[],p=[{type:12,data:i}];for(let P=0;P<e.length;++P)a+=e[P].dims[r],n[P]=a,c.push(e[P].dims.length),o[P]=$e(`input${P}`,s,c[P]),l.push("rank"),p.push({type:12,data:n[P]});for(let P=0;P<e.length;++P)p.push(...nt(e[P].dims));p.push(...nt(t));let u=tt("output",s,t.length),h=u.indicesGet("indices",r),g=Array.from(Array(n.length).keys()).map(P=>`uniforms.sizeInConcatAxis${P}`).join(","),f=P=>`

  ${(()=>{P.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)P.registerUniform(`sizeInConcatAxis${A}`,"u32");return P.declareVariables(...o,u)})()}

  ${Ym(n.length,g)}

  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${u.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${g});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Zm(o,u)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p}),getShaderSource:f}},t_=(e,r)=>{let t=e.inputs,s=t[0].dims,i=xe.normalizeAxis(r.axis,s.length);Jm(t,i);let n=s.slice();n[i]=t.reduce((a,l)=>a+(l.dims.length>i?l.dims[i]:0),0);let o=t.filter(a=>xe.size(a.dims)>0);e.compute(e_(o,i,n,t[0].dataType),{inputs:o})},r_=e=>Dt({axis:e.axis})}),gn,wn,yn,tc,Mn=Ve(()=>{pt(),Mt(),gn=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},wn=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},yn=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},tc=e=>{let r=(e==null?void 0:e.activation)||"";if(r==="HardSigmoid"){let[t,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=(e==null?void 0:e.activation_params)||[zp,Bp];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=(e==null?void 0:e.activation_params)||[.01];return{activation:r,alpha:t}}return{activation:r}}}),hr,s_,rc=Ve(()=>{hr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},s_=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),n_,yv=Ve(()=>{n_=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Di,sc,nc=Ve(()=>{pt(),Mt(),xt(),Mn(),Di=(e,r,t,s,i)=>{let n=s-t;return`
      ${Array.from({length:t}).map((o,a)=>`
      if (${rt(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,rt(i,a+n,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},sc=(e,r,t,s,i=!1,n)=>{let o=e[0].dims,a=e[1].dims,l=o[o.length-2],c=a[a.length-1],p=o[o.length-1],u=Xt(c),h=Xt(p),g=Xt(l),f=xe.size(t)/u/g,P=e.length>2,A=s?s.slice(0,-2):t.slice(0,-2),v=[xe.size(A),l,c],y=[{type:12,data:f},{type:12,data:l},{type:12,data:c},{type:12,data:p}];wn(r,y),y.push(...nt(A,o,a)),P&&y.push(...nt(e[2].dims)),y.push(...nt(v));let k=E=>{let M=Wd("batch_dims",e[0].dataType,A.length),w=$e("a",e[0].dataType,o.length,h),T=$e("b",e[1].dataType,a.length,u),$=tt("output",e[0].dataType,v.length,u),z=lr($.type.tensor),R=gn(r,$.type.value,z),Q=[w,T],q="";if(P){let H=i?u:1;Q.push($e("bias",e[2].dataType,e[2].dims.length,H)),q=`${i?`value += bias[col / ${H}];`:`value += ${$.type.value}(bias[row + i]);`}`}let U=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];yn(r,U);let Z=()=>{let H=`var a_data: ${w.type.value};`;for(let J=0;J<h;J++)H+=`
              let b_data${J} = b[(b_offset + (k + ${J}) * uniforms.N + col) / ${u}];`;for(let J=0;J<g;J++){H+=`a_data = a[(a_offset + (row + ${J}) * uniforms.K + k) / ${h}];`;for(let ie=0;ie<h;ie++)H+=`
            values[${J}] = fma(${T.type.value}(a_data${h===1?"":`[${ie}]`}), b_data${ie}, values[${J}]);
`}return H};return`
  ${E.registerUniforms(U).registerInternalVariables(M).declareVariables(...Q,$)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${u})) * ${u};
    var index1 = global_idx / (uniforms.N / ${u});
    let stride1 = uniforms.M / ${g};
    let row = (index1 % stride1) * ${g};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${M.offsetToIndices("batch")};`}

    var a_indices: ${w.type.indices};
    ${Di("a_indices",w,w.rank-2,M.rank,"batch_indices")}
    ${w.indicesSet("a_indices",w.rank-2,0)}
    ${w.indicesSet("a_indices",w.rank-1,0)}
    let a_offset = ${w.indicesToOffset("a_indices")};

    var b_indices: ${T.type.indices};
    ${Di("b_indices",T,T.rank-2,M.rank,"batch_indices")}
    ${T.indicesSet("b_indices",T.rank-2,0)}
    ${T.indicesSet("b_indices",T.rank-1,0)}
    let b_offset = ${T.indicesToOffset("b_indices")};
    var values: array<${$.type.value}, ${g}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${Z()}
    }
    for (var i = 0u; i < ${g}u; i++) {
      var value = values[i];
      ${q}
      ${R}
      let cur_indices = ${$.type.indices}(batch, row + i, col);
      let offset = ${$.indicesToOffset("cur_indices")};
      ${$.setByOffset(`offset / ${u}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${u};${h};${g};${i}`,inputDependencies:P?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:y}),getShaderSource:k}}}),i_,o_,ic,oc,a_,ac,l_,Ca,lc=Ve(()=>{pt(),Mt(),xt(),Mn(),nc(),rc(),i_=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,o_=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ic=(e,r,t="f32",s,i=!1,n=32,o=!1,a=32)=>{let l=r[1]*e[1],c=r[0]*e[0],p=i?l:n,u=i?n:l,h=p/r[0],g=n/r[1];if(!((i&&h===4&&e[1]===4||!i&&(h===3||h===4))&&p%r[0]===0&&n%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${h} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${t}>, ${p/h}>, ${u}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${n}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${h};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${o?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${i_(i,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${o_(i,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},oc=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,a_=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ac=(e,r,t="f32",s,i=!1,n=32,o=!1,a=32,l=!1)=>{let c=e[1]*r[1],p=e[0]*r[0],u=i?c:n,h=i?n:c;if(!(h%r[1]===0&&u%r[0]===0&&n%r[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${u} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let g=h/r[1],f=u/r[0],P=n/r[1],A=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${r[0]}) {
          ${oc(i,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${P};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${oc(i,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${a_(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${u}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${n}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${A}
  }
`},l_=(e,r,t,s,i=!1)=>{let[n,o,a,l]=s,c=lr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${hr(e,c)} {
      var value = ${hr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${Di("aIndices",o,o.rank-2,n.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${hr(e,c)} {
      var value = ${hr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${Di("bIndices",a,a.rank-2,n.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${hr(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${i?"bias[colIn]":`${hr(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Ca=(e,r,t,s,i=!1,n)=>{let o=e[0].dims,a=e[1].dims,l=o.slice(0,-2),c=a.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),u=xe.size(p),h=o[o.length-2],g=o[o.length-1],f=a[a.length-1],P=g%4===0&&f%4===0,A=h<=8?[4,1,1]:[4,4,1],v=[8,8,1],y=[Math.ceil(f/v[0]/A[0]),Math.ceil(h/v[1]/A[1]),Math.ceil(u/v[2]/A[2])],k=P?4:1,E=[...l,h,g/k],M=E.length,w=[...c,g,f/k],T=w.length,$=[u,h,f/k],z=[{type:6,data:h},{type:6,data:f},{type:6,data:g}];wn(r,z),z.push(...nt(p,E,w));let R=["rank","rank"],Q=e.length>2;Q&&(z.push(...nt(e[2].dims)),R.push("rank")),z.push(...nt($));let q=U=>{let Z=p.length,H=Wd("batchDims",e[0].dataType,Z,1),J=lr(e[0].dataType),ie=$e("a",e[0].dataType,M,k),ae=$e("b",e[1].dataType,T,k),ce=tt("result",e[0].dataType,$.length,k),he=[ie,ae];if(Q){let X=i?k:1;he.push($e("bias",e[2].dataType,e[2].dims.length,X))}let N=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];yn(r,N);let O=lr(ce.type.tensor),G=gn(r,ce.type.value,O),se=l_(k,Q,G,[H,ie,ae,ce],i);return`
  ${U.registerUniforms(N).registerInternalVariables(H).declareVariables(...he,ce)}
  ${se}
  ${P?ic(A,v,J,H):ac(A,v,J,H)}
                   `};return{name:"MatMul",shaderCache:{hint:`${A};${r.activation};${P};${i}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:z}),getShaderSource:q}}}),d_,c_,Mv=Ve(()=>{pt(),Is(),xt(),Mn(),rc(),yv(),lc(),d_=(e,r,t,s,i=!1,n,o=4,a=4,l=4,c="f32")=>{let p=z=>{switch(z){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},u=z=>{switch(z){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},h=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",P=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",v=e?"col":"row",y=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${A} / outWidth;
    let outCol = ${A} % outWidth;

    let WRow = ${v} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${v} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${v} % inChannels;
    var resData = ${hr(o,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${P}) {
      ${h}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(o)}
    }
    return resData;`,k=e?r&&s?`
    let col = colIn * ${o};
    ${y}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${y}
    }
    return ${hr(o,c)}(0.0);`:s&&t?`
    let col = colIn * ${o};
    ${y}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${y}
    }
    return ${hr(o,c)}(0.0);`,E=e?s&&t?u(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${u(a)}
    }
    return ${hr(a,c)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${u(a)}
    }
    return ${hr(a,c)}(0.0);`,M=hr(l,c),w=hr(e?o:a,c),T=hr(e?a:o,c),$=gn(n,M,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
      ${e?k:E}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${T} {
      ${e?E:k}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${M}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${s_(i)}
      ${$}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},c_=(e,r,t,s,i,n,o,a,l)=>{let c=r.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],u=t[0],h=c?t[2]:t[3],g=c?t[1]:t[2],f=c?t[3]:t[1],P=c&&(p%4===0||p%3===0)&&f%4===0,A=c?f:h*g,v=c?h*g:f,y=[8,8,1],k=s<=8?[4,1,1]:[4,4,1],E=[Math.ceil(A/y[0]/k[0]),Math.ceil(v/y[1]/k[1]),Math.ceil(u/y[2]/k[2])];St("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let M=P?c&&p%4!==0?3:4:1,w=y[1]*k[1],T=y[0]*k[0],$=Math.max(y[0]*M,y[1]),z=s%w===0,R=i%T===0,Q=n%$===0,q=P?[M,4,4]:[1,1,1],U=[{type:6,data:s},{type:6,data:i},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];wn(r,U),U.push(...nt(e[0].dims,e[1].dims));let Z=["rank","rank"];o&&(U.push(...nt(e[2].dims)),Z.push("rank")),U.push(...nt(t));let H=J=>{let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];yn(r,ie);let ae=P?4:1,ce=lr(e[0].dataType),he=`
      fn setOutputAtIndex(flatIndex : i32, value : ${P?`vec4<${ce}>`:ce}) {
        result[flatIndex] = ${P?`vec4<${ce}>`:ce}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${P?`vec4<${ce}>`:ce}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${P?"/ 4":""}, value);
      }`,N=$e("x",e[0].dataType,e[0].dims.length,M===3?1:M),O=$e("w",e[1].dataType,e[1].dims.length,ae),G=[N,O],se=tt("result",e[0].dataType,t.length,ae);if(o){let X=$e("bias",e[2].dataType,e[2].dims.length,ae);G.push(X),he+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${P?`vec4<${ce}>`:ce} {
          return bias[coords.${c?"w":"y"}${P?"/ 4":""}];
        }`}return`
        ${n_("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${J.registerUniforms(ie).declareVariables(...G,se)}
        ${he}
        ${d_(c,z,R,Q,o,r,q[0],q[1],q[2],ce)}
        ${P?ic(k,y,ce,void 0,!c,$):ac(k,y,ce,void 0,!c,$,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${M};${P};${z};${R};${Q};${w};${T};${$}`,inputDependencies:Z},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:U}),getShaderSource:H}}}),u_,dc,Li,p_,cc,h_,m_,__,bv=Ve(()=>{pt(),Is(),Mt(),xt(),Mn(),rc(),u_=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},dc=e=>typeof e=="number"?[e,e,e]:e,Li=(e,r)=>r<=1?e:e+(e-1)*(r-1),p_=(e,r,t,s=1)=>{let i=Li(r,s);return Math.floor((e[0]*(t-1)-t+i)/2)},cc=(e,r,t,s,i)=>{i==null&&(i=p_(e,r[0],s[0]));let n=[0,0,0,t];for(let o=0;o<3;o++)e[o]+2*i>=r[o]&&(n[o]=Math.trunc((e[o]-r[o]+2*i)/s[o]+1));return n},h_=(e,r,t,s,i,n,o,a,l,c)=>{let p,u,h,g;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=cc([r,t,s,1],[a,l,c],1,[i,n,o],e);u=f[0],h=f[1],g=f[2]}else if(Array.isArray(e)){if(!e.every((P,A,v)=>P===v[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=cc([r,t,s,1],[a,l,c],1,[i,n,o],e[0]);u=f[0],h=f[1],g=f[2]}else if(e==="SAME_UPPER"){u=Math.ceil(r/i),h=Math.ceil(t/n),g=Math.ceil(s/o);let f=(u-1)*i+a-r,P=(h-1)*n+l-t,A=(g-1)*o+c-s,v=Math.floor(f/2),y=f-v,k=Math.floor(P/2),E=P-k,M=Math.floor(A/2),w=A-M;p={top:k,bottom:E,left:M,right:w,front:v,back:y}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:u,outHeight:h,outWidth:g}},m_=(e,r,t,s,i,n=!1,o="channelsLast")=>{let a,l,c,p,u;if(o==="channelsLast")[a,l,c,p,u]=e;else if(o==="channelsFirst")[a,u,l,c,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,,g,f,P]=r,[A,v,y]=dc(t),[k,E,M]=dc(s),w=Li(g,k),T=Li(f,E),$=Li(P,M),{padInfo:z,outDepth:R,outHeight:Q,outWidth:q}=h_(i,l,c,p,A,v,y,w,T,$),U=n?h*u:h,Z=[0,0,0,0,0];return o==="channelsFirst"?Z=[a,U,R,Q,q]:o==="channelsLast"&&(Z=[a,R,Q,q,U]),{batchSize:a,dataFormat:o,inDepth:l,inHeight:c,inWidth:p,inChannels:u,outDepth:R,outHeight:Q,outWidth:q,outChannels:U,padInfo:z,strideDepth:A,strideHeight:v,strideWidth:y,filterDepth:g,filterHeight:f,filterWidth:P,effectiveFilterDepth:w,effectiveFilterHeight:T,effectiveFilterWidth:$,dilationDepth:k,dilationHeight:E,dilationWidth:M,inShape:e,outShape:Z,filterShape:r}},__=(e,r,t,s,i,n)=>{let o=n==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((A,v)=>v)},c=[Math.ceil(u_(l.x.map(A=>t[A]))/a[0]),1,1];St("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,u=xe.size(t),h=[{type:12,data:u},{type:12,data:s},{type:12,data:i},{type:12,data:r.strides},{type:12,data:r.dilations}];wn(r,h),h.push(...nt(e[0].dims,e[1].dims));let g=["rank","rank"],f=e.length===3;f&&(h.push(...nt(e[2].dims)),g.push("rank")),h.push(...nt(t));let P=A=>{let v=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];yn(r,v);let y=1,k=lr(e[0].dataType),E=$e("x",e[0].dataType,e[0].dims.length,p),M=$e("W",e[1].dataType,e[1].dims.length,y),w=[E,M],T=tt("result",e[0].dataType,t.length,y),$="";if(f){let Q=$e("bias",e[2].dataType,e[2].dims.length,y);w.push(Q),$+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${k} {
          return bias[${o?rt("coords",4,5):rt("coords",1,5)}];
        }`}let z=hr(p,k),R=gn(r,z,k);return`
            ${$}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${E.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${M.getByIndices("aIndices")};
            }
          ${A.registerUniforms(v).declareVariables(...w,T)}
          ${A.mainStart()}
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${T.offsetToIndices("global_idx")};
              let batch = ${rt("coords",0,E.rank)};
              let d2 = ${o?rt("coords",E.rank-1,E.rank):rt("coords",1,E.rank)};
              let xFRCCorner = vec3<u32>(${o?rt("coords",1,E.rank):rt("coords",2,E.rank)},
              ${o?rt("coords",2,E.rank):rt("coords",3,E.rank)},
              ${o?rt("coords",3,E.rank):rt("coords",4,E.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?rt("uniforms.x_shape",1,E.rank):rt("uniforms.x_shape",2,E.rank)};
              let xShapeZ = ${o?rt("uniforms.x_shape",2,E.rank):rt("uniforms.x_shape",3,E.rank)};
              let xShapeW = ${o?rt("uniforms.x_shape",3,E.rank):rt("uniforms.x_shape",4,E.rank)};
              let xShapeU = ${o?rt("uniforms.x_shape",4,E.rank):rt("uniforms.x_shape",1,E.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${R}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};${p};${f}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:h}),getShaderSource:P}}}),f_,g_,vv=Ve(()=>{pt(),Mt(),xt(),Mn(),f_=(e,r,t,s)=>{let i=e.length>2,n=i?"value += b[output_channel];":"",o=e[0].dims,a=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],p=c/r.group,u=l&&p>=4?Xt(c):1,h=xe.size(t)/u,g=[{type:12,data:h},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];wn(r,g),g.push(...nt(o,[a[0],a[1],a[2],a[3]/u]));let f=i?["rank","rank","rank"]:["rank","rank"];g.push(...nt([t[0],t[1],t[2],t[3]/u]));let P=A=>{let v=tt("output",e[0].dataType,t.length,u),y=lr(v.type.tensor),k=gn(r,v.type.value,y),E=$e("x",e[0].dataType,o.length),M=$e("w",e[1].dataType,a.length,u),w=[E,M];i&&w.push($e("b",e[2].dataType,e[2].dims,u));let T=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];yn(r,T);let $=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${E.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${M.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${E.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${M.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${A.registerUniforms(T).declareVariables(...w,v)}

  ${A.mainStart()}
    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${v.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${u} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${v.type.value} = ${v.type.value}(0);
    ${$}
    ${n}
    ${k}
    ${v.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${u}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:g}),getShaderSource:P}},g_=(e,r,t,s)=>{let i=e.length>2,n=Xt(t[3]),o=Xt(t[2]),a=xe.size(t)/n/o,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],p=[t[0],t[1],t[2],t[3]/n],u=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];wn(r,u),u.push(...nt(l,c,p));let h=(o-1)*r.strides[1]+c[1],g=f=>{let P=tt("output",e[0].dataType,p.length,n),A=lr(P.type.tensor),v=gn(r,P.type.value,A),y=$e("x",e[0].dataType,l.length,n),k=$e("w",e[1].dataType,c.length,n),E=[y,k];i&&E.push($e("b",e[2].dataType,e[2].dims,n));let M=i?"value += b[output_channel];":"",w=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return yn(r,w),`
  ${f.registerUniforms(w).declareVariables(...E,P)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${y.type.value}, ${h}>;
    var values: array<${P.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${y.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${y.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${k.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${M}
      ${v}
      ${P.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${o};${h};${c[0]};${c[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:u}),getShaderSource:g}}}),w_,Sa,y_,$a,uc,pc,M_,b_,hc,xv=Ve(()=>{Mt(),Mv(),bv(),lc(),vv(),Mn(),nc(),Ks(),w_=(e,r,t,s,i,n)=>{let o=e[0],a=e.slice(n?1:2,n?3:4),l=a.length,c=r[0],p=r.slice(2).map((h,g)=>h+(h-1)*(t[g]-1)),u=a.map((h,g)=>h+s[g]+s[g+l]).map((h,g)=>Math.floor((h-p[g]+i[g])/i[g]));return u.splice(0,0,o),u.splice(n?3:1,0,c),u},Sa=[2,3,1,0],y_=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(r.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(r.strides.length!==i)throw new Error(`strides should be ${i}D`);if(r.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},$a=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let n=2;n<r[1].dims.length;++n)t[n-2]===0&&(t[n-2]=r[1].dims[n]);let s=e.pads.slice();va.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:t,pads:s}),i},uc=e=>{let r=tc(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,n=e.group,o=e.kernel_shape,a=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:i,group:n,kernelShape:o,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},pc=(e,r,t,s)=>{let i=t.format==="NHWC",n=w_(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,i);if(t.group!==1){let w=[r[0]];if(i){let T=e.kernelCustomData.wT??e.compute(Nr(r[1],Sa),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T),w.push(T)}else w.push(r[1]);r.length===3&&w.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(g_(w,t,n,s),{inputs:w}):e.compute(f_(w,t,n,s),{inputs:w});return}let o=r.length===3,a=r[0].dims[i?1:2],l=r[0].dims[i?2:3],c=r[0].dims[i?3:1],p=r[1].dims[2],u=r[1].dims[3],h=n[i?1:2],g=n[i?2:3],f=n[i?3:1],P=i&&p===a&&u===l&&t.pads[0]===0&&t.pads[1]===0;if(P||p===1&&u===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let w=n[0],T,$,z,R=[];if(i){let U=e.kernelCustomData.wT??e.compute(Nr(r[1],Sa),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=U),P){let Z=a*l*c;T=r[0].reshape([1,w,Z]),$=U.reshape([1,Z,f]),z=[1,w,f]}else T=r[0].reshape([w,a*l,c]),$=U.reshape([1,c,f]),z=[w,h*g,f];R.push(T),R.push($)}else T=r[0].reshape([w,c,a*l]),$=r[1].reshape([1,f,c]),z=[w,f,h*g],R.push($),R.push(T);o&&R.push(r[2]);let Q=z[2],q=R[0].dims[R[0].dims.length-1];Q<8&&q<8?e.compute(sc(R,t,n,z,i,s),{inputs:R}):e.compute(Ca(R,t,n,z,i,s),{inputs:R});return}let A=!0,v=e.kernelCustomData.wT??e.compute(Nr(r[1],Sa),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=v);let y=[r[0],v];o&&y.push(r[2]);let k=i?h*g:f,E=i?f:h*g,M=p*u*c;e.compute(c_(y,t,n,k,E,M,o,A,s),{inputs:y})},M_=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=[0,r.pads[0],0,r.pads[1]],n=[1].concat(r.strides),o=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=$a({...r,pads:i,strides:n,dilations:o,kernelShape:a},s);pc(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},b_=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",i=$a(t,r),n=t.autoPad==="NOTSET"?t.pads:t.autoPad,o=m_(r[0].dims,r[1].dims,t.strides,t.dilations,n,!1,s);e.compute(__(r,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],s))},hc=(e,r)=>{if(y_(e.inputs,r),e.inputs[0].dims.length===3)M_(e,r);else if(e.inputs[0].dims.length===5)b_(e,e.inputs,r);else{let t=$a(r,e.inputs);pc(e,e.inputs,t)}}}),v_,Tv=Ve(()=>{pt(),Is(),Mt(),xt(),v_=(e,r,t)=>{let s=e.length>2,i=r.outputShape,n=r.format==="NHWC",o=r.group,a=e[1].dims,l=a[2]/o,c=a[3],p=n?Xt(l):1,u=n&&c===1&&l>=4,h=u?Math.floor(l/4)*4:Math.floor(l/p)*p,g=l-h,f=n?Xt(c):1,P=n?c===1?p:f:1,A=xe.size(i)/f,v=[Math.ceil(A/64),1,1];St("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${v}`);let y=["rank","rank"],k=[r.strides[0],r.strides[1]],E=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],M=[r.dilations[0],r.dilations[1]],w=[E[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),E[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],T=[w[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),w[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],$=[{type:12,data:A},{type:12,data:k},{type:12,data:E},{type:12,data:M},{type:12,data:w},{type:6,data:T},{type:12,data:h},{type:12,data:l},{type:12,data:c},...nt(e[0].dims,e[1].dims)];s&&($.push(...nt(e[2].dims)),y.push("rank")),$.push(...nt(i));let z=R=>{let Q=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:k.length},{name:"filter_dims",type:"u32",length:E.length},{name:"dilations",type:"u32",length:E.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:T.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],q=lr(e[0].dataType),U=n?1:2,Z=n?2:3,H=n?3:1,J=$e("W",e[1].dataType,e[1].dims.length,P),ie=$e("Dy",e[0].dataType,e[0].dims.length,p),ae=[ie,J];s&&ae.push($e("bias",e[2].dataType,[i[H]].length,f));let ce=tt("result",e[0].dataType,i.length,f),he=()=>{let G="";if(u)p===4?G+=`
        let xValue = ${ie.getByOffset("x_offset")};
        let wValue = ${J.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?G+=`
          dotProd = dotProd + dot(vec4<${q}>(${ie.getByOffset("x_offset")}, ${ie.getByOffset("x_offset + 1u")}), vec4<${q}>(${J.getByOffset("w_offset")}, ${J.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(G+=`
          dotProd = dotProd + dot(vec4<${q}>(${ie.getByOffset("x_offset")}, ${ie.getByOffset("x_offset + 1u")}, ${ie.getByOffset("x_offset + 2u")}, ${ie.getByOffset("x_offset + 3u")}), vec4<${q}>(${J.getByOffset("w_offset")}, ${J.getByOffset("w_offset + 1u")}, ${J.getByOffset("w_offset + 2u")}, ${J.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(G+=`
                  let xValue = ${n?ie.getByOffset(`${ie.indicesToOffset(`${ie.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):ie.get("batch","inputChannel","idyR","idyC")};
        `,p===1)G+=`
          let w_offset = ${J.indicesToOffset(`${J.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${J.getByOffset(`w_offset / ${P}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let se=0;se<p;se++)G+=`
            let wValue${se} = ${J.getByOffset(`${J.indicesToOffset(`${J.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${se}, wOutChannel)`)} / ${P}`)};
            dotProd = dotProd + xValue[${se}] * wValue${se};`;return G},N=()=>{if(g===0)return"";if(!u)throw new Error(`packInputAs4 ${u} is not true.`);let G="";if(p===1){G+="dotProd = dotProd";for(let se=0;se<g;se++)G+=`
            + ${ie.getByOffset(`x_offset + ${se}`)} * ${J.getByOffset(`w_offset + ${se}`)}`;G+=";"}else if(p===2){if(g!==2)throw new Error(`Invalid inputChannelsRemainder ${g}.`);G+=`
          let xValue = ${ie.getByOffset("x_offset")};
          let wValue = ${J.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return G},O=`
            let outputIndices = ${ce.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${ce.indicesGet("outputIndices",0)};
            let d1 = ${ce.indicesGet("outputIndices",H)};
            let r = ${ce.indicesGet("outputIndices",U)};
            let c = ${ce.indicesGet("outputIndices",Z)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${ce.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${q}(dyRCorner) + ${q}(wR)) / ${q}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${q}(uniforms.Dy_shape[${U}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${q}(dyCCorner) + ${q}(wC)) / ${q}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${q}(uniforms.Dy_shape[${Z}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${u?`
                var x_offset = ${ie.indicesToOffset(`${ie.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${J.indicesToOffset(`${J.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${P};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${u?4:p}) {
                  ${he()}
                  inputChannel = inputChannel + ${u?4:p};
                }
                ${N()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${ce.setByOffset("global_idx","value")};
          `;return`
    ${R.registerUniforms(Q).declareVariables(...ae,ce)}
      ${R.mainStart()}
      ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${O}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${P}${f}${u}${g}`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:v[0],y:v[1],z:v[2]},outputs:[{dims:t?t(i):i,dataType:e[0].dataType}],programUniforms:$}),getShaderSource:z}}}),x_,T_,E_,mc,P_,C_,_c,S_,$_,Ev=Ve(()=>{Tv(),Mn(),Ks(),x_=(e,r,t,s,i,n)=>(e-1)*r+t+(s-1)*i+1-n,T_=(e,r,t,s,i)=>{let n=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=n,t[i]=e-n):r==="SAME_LOWER"&&(t[s]=e-n,t[i]=n)},E_=(e,r,t,s,i,n,o,a,l,c)=>{let p=e.length-2,u=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let h=e[0],g=r[a?3:1]*i;for(let f=0,P=e.length-p-(a?1:0);f<p;++f,++P){let A=e[P],v=u?A*o[f]:c[f],y=x_(A,o[f],n[f],r[P],t[f],v);T_(y,s,n,f,f+p),u&&c.push(o[f]*(A-1)+l[f]+(r[P]-1)*t[f]+1-n[f]-n[f+p])}c.splice(0,0,h),c.splice(a?3:1,0,g)},mc=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((u,h)=>u*h,1)===0){t.length=0;for(let u=2;u<r[1].dims.length;++u)t.push(r[1].dims[u])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let i=e.pads.slice(),n=e.outputShape.slice(),o=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((u,h)=>u+h,0)===0){let u=r[0].dims.length-2;l=new Array(u).fill(1)}let c=e.strides.slice();if(c.reduce((u,h)=>u+h,0)===0){let u=r[0].dims.length-2;c=new Array(u).fill(1)}E_(a,t,l,e.autoPad,e.group,i,c,s,o,n);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:i,outputPadding:o,outputShape:n,dilations:l,strides:c}),p},P_=e=>{let r=tc(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,n=e.group,o=e.kernelShape,a=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,u=e.outputShape;return{autoPad:s,format:t,dilations:i,group:n,kernelShape:o,outputPadding:p,outputShape:u,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},C_=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.reduce((o,a)=>o+a,0)>0&&r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.reduce((o,a)=>o+a,0)>0&&r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.reduce((o,a)=>o+a,0)>0&&r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.outputPadding.length!==n&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${n}D`);if(r.kernelShape.reduce((o,a)=>o+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},_c=(e,r,t,s)=>{let i=e.kernelCustomData.wT??e.compute(Nr(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i);let n=[r[0],i];r.length===3&&n.push(r[2]),e.compute(v_(n,t,s),{inputs:n})},S_=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=r.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let n=r.dilations;(n.length===0||n[0]===0)&&(n=[1]);let o=r.strides;(o.length===0||o[0]===0)&&(o=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],o=[1].concat(o),n=[1].concat(n),i=[1].concat(i);let l=r.outputPadding;l=[0].concat(l);let c=mc({...r,pads:a,strides:o,dilations:n,kernelShape:i,outputPadding:l},s);_c(e,s,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},$_=(e,r)=>{if(C_(e.inputs,r),e.inputs[0].dims.length===3)S_(e,r);else{let t=mc(r,e.inputs);_c(e,e.inputs,t)}}}),k_,I_,A_,Pv=Ve(()=>{pt(),Mt(),Yt(),xt(),k_=(e,r,t,s)=>{let i=xe.size(r),n=r.length,o=$e("input",e,n),a=tt("output",e,n),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=xe.normalizeAxis(l,n),p=u=>{let h=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,g=rt("uniforms.input_shape","uniforms.axis",n),f=s.reverse?h+(s.exclusive?" + 1":""):"0",P=s.reverse?g:h+(s.exclusive?"":" + 1");return`
                ${u.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,a)}
                ${u.mainStart()}
                  ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${P};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:c},...nt(r,r)]}),getShaderSource:p}},I_=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,i=e.inputs[1];e.compute(k_(s,t,i,r),{inputs:[0]})},A_=e=>{let r=e.exclusive===1,t=e.reverse===1;return Dt({exclusive:r,reverse:t})}}),F_,O_,D_,L_,z_,Cv=Ve(()=>{pt(),Mt(),Yt(),xt(),F_=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},O_=(e,r,t,s)=>{let i=[];i.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let n=0;n<r;++n)i.push(t.indicesSet("a",e[n],`i[${n}]`));return i.push("return a;}"),i.join(`
`)},D_=(e,r)=>{let t,s,i,n,o,a,l=r.format==="NHWC",c=r.blocksize,p=r.mode==="DCR";l?([t,s,i,n]=e.dims,o=p?[t,s,i,c,c,n/c**2]:[t,s,i,n/c**2,c,c],a=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,i,n]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=p?[t,c,c,n/c**2,s,i]:[t,n/c**2,c,c,s,i],a=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let u=e.reshape(o),h=u.dims.length,g=e.dataType,f=$e("a",g,h),P=tt("output",g,h),A=v=>`
  ${v.registerUniform("output_size","u32").declareVariables(f,P)}

  ${O_(a,h,f,P)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${P.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${P.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:v=>{let y=l?[t,s*c,i*c,n/c**2]:[t,n/c**2,s*c,i*c],k=xe.size(y),E=u.dims,M=xe.sortBasedOnPerm(E,a);return{outputs:[{dims:y,dataType:v[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:[{type:12,data:k},...nt(E,M)]}},getShaderSource:A}},L_=(e,r)=>{F_(e.inputs),e.compute(D_(e.inputs[0],r))},z_=e=>Dt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),ka,zi,fc,B_,R_,N_,j_,gc,V_,U_,W_,Sv=Ve(()=>{pt(),Mt(),Yt(),xt(),ka="[a-zA-Z]|\\.\\.\\.",zi="("+ka+")+",fc="^"+zi+"$",B_="("+zi+",)*"+zi,R_="^"+B_+"$",N_=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},j_=class{constructor(e,r){var i;this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(R_)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,o)=>{let a=e[o].dims.slice();if(!n.match(RegExp(fc)))throw new Error("Invalid LHS term");let l=this.processTerm(n,!0,a,o);this.lhs.push(l)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,o])=>o.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(zi)))throw new Error("Invalid RHS");(i=s.match(RegExp(ka,"g")))==null||i.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(n);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let i=t.length,n=!1,o=[],a=0;if(!e.match(RegExp(fc))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(ka,"g")),c=new N_(s);return l==null||l.forEach((p,u)=>{if(p==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let h=i-l.length+1;if(h<0)throw new Error("Ellipsis out of bounds");if(o=t.slice(a,a+h),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let g=0;g<o.length;g++){let f=String.fromCharCode(48+g);c.addSymbol(f,u+g),this.addSymbol(f,t[a++],s)}}else c.addSymbol(p,u+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[a++],s)}),c}},gc=e=>e+"_max",V_=(e,r,t,s)=>{let i=e.map(c=>c.length).map((c,p)=>$e(`input${p}`,r,c)),n=xe.size(s),o=tt("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],u="var prod = 1.0;",h="var sum = 0.0;",g="sum += prod;",f=[],P=[],A=[],v=[],y=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((E,M)=>{var w;if(t.rhs.symbolToIndices.has(M)){let T=(w=t.rhs.symbolToIndices.get(M))==null?void 0:w[0];T!==void 0&&t.lhs.forEach(($,z)=>{if(E.inputIndices.includes(z)){let R=$.symbolToIndices.get(M);if(R===void 0)throw new Error("Invalid symbol error");R.forEach(Q=>{p.push(`${i[z].indicesSet(`input${z}Indices`,Q,o.indicesGet("outputIndices",T))}`)})}})}else t.lhs.forEach((T,$)=>{if(E.inputIndices.includes($)){let z=T.symbolToIndices.get(M);if(z===void 0)throw new Error("Invalid symbol error");z.forEach(R=>{f.push(`${i[$].indicesSet(`input${$}Indices`,R,`${M}`)}`)}),v.push(`prod *= ${i[$].getByIndices(`input${$}Indices`)};`)}}),P.push(`for(var ${M}: u32 = 0; ${M} < uniforms.${gc(M)}; ${M}++) {`),A.push("}")});let k=y?[...p,`let sum = ${i.map((E,M)=>E.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...p,h,...P,...f,u,...v,g,...A];return`
            ${c.registerUniforms(a.map(E=>({name:`${gc(E)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((E,M)=>`var input${M}Indices: ${i[M].type.indices};`).join(`
`)}
            ${k.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=a.filter(u=>t.symbolToInfo.has(u)).map(u=>{var h;return{type:12,data:((h=t.symbolToInfo.get(u))==null?void 0:h.dimValue)||0}});c.push({type:12,data:n});let p=e.map((u,h)=>[...nt(u)]).reduce((u,h)=>u.concat(h),c);return p.push(...nt(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}},getShaderSource:l}},U_=(e,r)=>{let t=new j_(e.inputs,r.equation),s=t.outputDims,i=e.inputs.map((n,o)=>n.dims);e.compute(V_(i,e.inputs[0].dataType,t,s))},W_=e=>{let r=e.equation.replace(/\s+/g,"");return Dt({equation:r})}}),G_,wc,K_,H_,q_,$v=Ve(()=>{pt(),Mt(),xt(),G_=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,i=r.length<t.length?0:r.length-t.length;for(;s<t.length&&i<r.length;++s,++i)if(t[s]!==r[i]&&t[s]!==1&&r[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},wc=(e,r)=>{let t=e.length-r.length,s=[];for(let i=0;i<t;++i)s.push(e[i]);for(let i=0;i<r.length;++i)s.push(r[i]===1?e[i+t]:r[i]);return s},K_=(e,r)=>e.length>r.length?wc(e,r):wc(r,e),H_=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=K_(r,t),i=e[0].dataType,n=i===9||xe.size(r)===1,o=i===9||r.length>0&&r[r.length-1]%4===0?4:1,a=n||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(xe.size(s)/a),c=u=>{let h=$e("input",i,r.length,o),g=tt("output",i,s.length,a),f;if(i===9){let P=(A,v,y="")=>`
          let outputIndices${v} = ${g.offsetToIndices(`outputOffset + ${v}u`)};
          let offset${v} = ${h.broadcastedIndicesToOffset(`outputIndices${v}`,g)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${A}[${v}] = ${y}(${h.getByOffset(`index${v}`)}[component${v}]);
        `;f=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${P("data",0,"u32")}
        ${P("data",1,"u32")}
        ${P("data",2,"u32")}
        ${P("data",3,"u32")}
        ${g.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${g.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${h.broadcastedIndicesToOffset("outputIndices",g)};
        let data = ${g.type.value}(${h.getByOffset(`inputOffset / ${o}`)});
        ${g.setByOffset("global_idx","data")}
      }`;return`
    ${u.registerUniform("vec_size","u32").declareVariables(h,g)}
    ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},p=[{type:12,data:l},...nt(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${o}${a}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},q_=e=>{G_(e.inputs),e.compute(H_(e.inputs),{inputs:[0]})}}),Q_,X_,kv=Ve(()=>{pt(),Mt(),xt(),ec(),Q_=e=>{let r=e[0].dataType,t=xe.size(e[0].dims),s=xe.size(e[1].dims),i=s%4===0,n=o=>{let a=$e("x",r,[1],4),l=$e("bias",r,[1],4),c=tt("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],u=g=>`
      let bias${g}_offset: u32 = (global_idx * 4 + ${g}) % uniforms.bias_size;
      let bias${g} = ${l.getByOffset(`bias${g}_offset / 4`)}[bias${g}_offset % 4];`,h=i?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${u(0)}${u(1)}${u(2)}${u(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(p).declareVariables(a,l,c)}

    ${Yd(Tr(r))}

    ${o.mainStart(jn)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${h}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",Zd("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:n,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/jn/4)}})}},X_=e=>{e.inputs.length<2||xe.size(e.inputs[1].dims)===0?km(e):e.compute(Q_(e.inputs))}}),J_,Y_,Z_,ef,Iv=Ve(()=>{pt(),Mt(),Yt(),xt(),J_=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Y_=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t.length,n=xe.normalizeAxis(r.axis,i),o=t.slice(0);o.splice(n,1,...s);let a=t[n],l=e[0].dataType===9?4:1,c=Math.ceil(xe.size(o)/l),p=[{type:12,data:c},{type:6,data:a},{type:12,data:n},...nt(e[0].dims,e[1].dims,o)],u=h=>{let g=$e("data",e[0].dataType,e[0].dims.length,l),f=$e("inputIndices",e[1].dataType,e[1].dims.length),P=tt("output",e[0].dataType,o.length,l),A=y=>{let k=s.length,E=`var indicesIndices${y}  = ${f.type.indices}(0);`;for(let M=0;M<k;M++)E+=`${k>1?`indicesIndices${y}[${M}]`:`indicesIndices${y}`} = ${o.length>1?`outputIndices${y}[uniforms.axis + ${M}]`:`outputIndices${y}`};`;E+=`
          var idx${y} = ${f.getByIndices(`indicesIndices${y}`)};
          if (idx${y} < 0) {
            idx${y} = idx${y} + uniforms.axisDimLimit;
          }
          var dataIndices${y} : ${g.type.indices};
        `;for(let M=0,w=0;M<i;M++)M===n?(E+=`${i>1?`dataIndices${y}[${M}]`:`dataIndices${y}`} = u32(idx${y});`,w+=k):(E+=`${i>1?`dataIndices${y}[${M}]`:`dataIndices${y}`} = ${o.length>1?`outputIndices${y}[${w}]`:`outputIndices${y}`};`,w++);return E},v;if(e[0].dataType===9){let y=(k,E,M="")=>`
          let outputIndices${E} = ${P.offsetToIndices(`outputOffset + ${E}u`)};
          ${A(E)};
          let offset${E} = ${g.indicesToOffset(`dataIndices${E}`)};
          let index${E} = offset${E} / 4u;
          let component${E} = offset${E} % 4u;
          ${k}[${E}] = ${M}(${g.getByOffset(`index${E}`)}[component${E}]);
        `;v=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${y("value",0,"u32")}
        ${y("value",1,"u32")}
        ${y("value",2,"u32")}
        ${y("value",3,"u32")}
        ${P.setByOffset("global_idx","value")}
      `}else v=`
      let outputIndices = ${P.offsetToIndices("global_idx")};
      ${A("")};
      let value = ${g.getByIndices("dataIndices")};
      ${P.setByOffset("global_idx","value")};
      `;return`
      ${h.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,f,P)}
      ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${v}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:u}},Z_=e=>Dt({axis:e.axis}),ef=(e,r)=>{let t=e.inputs;J_(t),e.compute(Y_(e.inputs,r))}}),tf,rf,sf,Av=Ve(()=>{pt(),Mt(),xt(),tf=(e,r,t,s,i,n,o,a,l)=>{let c=[{type:12,data:n},{type:12,data:s},{type:12,data:i},{type:12,data:t},{type:12,data:o},{type:12,data:a},{type:12,data:l}],p=[n];c.push(...nt(r.dims,p));let u=h=>{let g=$e("indices_data",r.dataType,r.dims.length),f=tt("input_slice_offsets_data",12,1,1),P=[g,f],A=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:i.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${h.registerUniforms(A).declareVariables(...P)}
  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${i.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${i.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:u},{inputs:[r],outputs:[-1]})[0]},rf=(e,r)=>{let t=e.inputs,s=t[0].dims,i=t[0].dataType,n=t[1].dims,o=n[n.length-1],a=xe.sizeToDimension(n,n.length-1),l=xe.sizeFromDimension(s,r.batchDims+o),c=xe.sizeToDimension(s,r.batchDims),p=xe.sizeFromDimension(s,r.batchDims),u=a/c,h=new Array(o),g=l;for(let E=0;E<o;++E)h[o-1-E]=g,g*=s[r.batchDims+o-1-E];let f=tf(e,t[1],h,r.batchDims,s,a,u,p,o),P=r.batchDims+o;if(P>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let A=n.slice(0,-1).concat(s.slice(P)),v=xe.size(A),y=[{type:12,data:v},{type:12,data:l},...nt(t[0].dims,f.dims,A)],k=E=>{let M=$e("data",t[0].dataType,t[0].dims.length),w=$e("slice_offsets",12,f.dims.length),T=tt("output",t[0].dataType,A.length);return`
          ${E.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(M,w,T)}
            ${E.mainStart()}
            ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:A,dataType:i}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:y}),getShaderSource:k},{inputs:[t[0],f]})},sf=e=>({batchDims:e.batch_dims,cacheKey:""})}),nf,of,af,lf,Fv=Ve(()=>{pt(),Mt(),Yt(),xt(),nf=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=xe.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,i=e[0],n=e[2],o=e.length===4?e[3]:void 0;if(n.dims.length!==i.dims.length||!i.dims.map((a,l)=>l===t?Math.ceil(a/s)===n.dims[l]:a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==n.dims.length||!o.dims.map((a,l)=>a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},of=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t.length,n=xe.normalizeAxis(r.gatherAxis,i),o=xe.normalizeAxis(r.quantizeAxis,i),a=t.slice(0);a.splice(n,1,...s);let l=xe.size(a),c=e[2].dataType,p=e[0].dataType===22,u=[{type:12,data:l},{type:12,data:o},{type:12,data:n},{type:12,data:r.blockSize},...nt(...e.map((g,f)=>g.dims),a)],h=g=>{let f=$e("data",e[0].dataType,e[0].dims.length),P=$e("inputIndices",e[1].dataType,e[1].dims.length),A=$e("scales",e[2].dataType,e[2].dims.length),v=e.length>3?$e("zeroPoint",e[3].dataType,e[3].dims.length):void 0,y=tt("output",c,a.length),k=[f,P,A];v&&k.push(v);let E=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${g.registerUniforms(E).declareVariables(...k,y)}
        ${g.mainStart()}
        let output_indices = ${y.offsetToIndices("global_idx")};
        var indices_indices = ${P.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${y.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${P.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${y.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${y.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${P.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[n]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${y.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${A.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${A.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${A.getByIndices("scale_indices")};
        ${v?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${v.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${v.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Tr(c)}(quantized_data - zero_point) * scale;
        ${y.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((g,f)=>f!==1).map(g=>g.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(g,f)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:h}},af=(e,r)=>{let t=e.inputs;nf(t,r),e.compute(of(e.inputs,r))},lf=e=>Dt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),df,cf,uf,pf,Ov=Ve(()=>{pt(),Mt(),Yt(),xt(),df=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},cf=(e,r)=>{let t=e[0].dims,s=e[0].dataType,i=t.length,n=e[1].dims,o=e[1].dataType,a=xe.normalizeAxis(r.axis,i),l=t[a],c=n.slice(0),p=xe.size(c),u=$e("input",s,i),h=$e("indicesInput",o,n.length),g=tt("output",s,c.length),f=[{type:12,data:p},{type:6,data:l},{type:12,data:a}];return f.push(...nt(t,n,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:f}),getShaderSource:P=>`
      ${P.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(u,h,g)}
      ${P.mainStart()}
      ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${u.type.indices}(outputIndices);
      ${u.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${u.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},uf=e=>Dt({axis:e.axis}),pf=(e,r)=>{let t=e.inputs;df(t),e.compute(cf(e.inputs,r))}}),hf,mf,_f,ff,Dv=Ve(()=>{pt(),Mt(),xt(),hf=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},mf=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[i,n,o]=Lp.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[i,n];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(n/l),p=Math.ceil(i/l),u=!0,h=xe.size(a),g=[{type:12,data:u?c:h},{type:12,data:i},{type:12,data:n},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}],f=["type","type"];e.length===3&&(g.push(...nt(e[2].dims)),f.push("rank")),g.push(...nt(a));let P=v=>{let y="";r.transA&&r.transB?y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let k=r.alpha===1?"":"value *= uniforms.alpha;",E=$e("a",e[0].dataType,e[0].dims),M=$e("b",e[1].dataType,e[1].dims),w=E.type.value,T=null,$=[E,M];e.length===3&&(T=$e("c",e[2].dataType,e[2].dims.length),$.push(T));let z=tt("output",e[0].dataType,a.length);$.push(z);let R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${v.registerUniforms(R).declareVariables(...$)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${w}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${y}
    }

    ${k}
    ${T!=null?`let cOffset = ${T.broadcastedIndicesToOffset("vec2(m, n)",z)}; value += ${w}(uniforms.beta) * ${T.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},A=v=>{let y=$e("a",e[0].dataType,e[0].dims),k=$e("b",e[1].dataType,e[1].dims),E=null,M=[y,k];e.length===3&&(E=$e("c",e[2].dataType,e[2].dims.length),M.push(E));let w=tt("output",e[0].dataType,a.length);M.push(w);let T=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],$="",z="";r.transA&&r.transB?(z=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(z=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(z=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(z=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let R=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${v.registerUniforms(T).declareVariables(...M)}
  var<workgroup> tile_a: array<array<${y.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${k.type.storage}, ${l}>, ${l}>;
  ${v.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${w.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${z}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${$}
      }
      workgroupBarrier();
    }

    ${R}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${E!=null?`let cOffset = ${E.broadcastedIndicesToOffset("vec2(m, n)",w)}; value += ${w.type.value}(uniforms.beta) * ${E.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return u?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:g}),getShaderSource:A}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:g}),getShaderSource:P}},_f=e=>{let r=e.transA,t=e.transB,s=e.alpha,i=e.beta;return{transA:r,transB:t,alpha:s,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},ff=(e,r)=>{hf(e.inputs),e.compute(mf(e.inputs,r))}}),vs,As,bn,vn,gf,wf,yf,Mf,bf,vf,xf,Tf,Ef,Pf,Lv=Ve(()=>{pt(),Mt(),Yt(),xt(),[vs,As,bn,vn]=[0,1,2,3],gf=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},wf=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,yf=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,Mf=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,bf=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,vf=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${vs}] = batch;
     indices[${As}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${bn}] = u32(r);
            indices[${vn}] = u32(c);
          }
        `;case"border":return`
          indices[${bn}] = u32(clamp(r, 0, H - 1));
          indices[${vn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${bn}] = gs_reflect(r, border[1], border[3]);
          indices[${vn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,xf=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${vs}], indices[${As}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${vs}], indices[${As}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${vs}], indices[${As}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${vs}], indices[${As}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${vs}], indices[${As}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${vs}], indices[${As}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Tf=(e,r)=>{let t=$e("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],i=$e("grid",e[1].dataType,s.length,2),n=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(n=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[vs,As,bn,vn]=[0,3,1,2]);let o=tt("output",e[0].dataType,n.length),a=t.type.value,l=xe.size(n),c=[{type:12,data:l},...nt(e[0].dims,s,n)],p=u=>`
  ${u.registerUniform("output_size","u32").declareVariables(t,i,o)}
  ${wf}
  ${yf(a)}
  ${Mf(r)}
  ${bf(r)}
  ${vf(t,a,r)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${bn}]);
      let W_in = i32(uniforms.x_shape[${vn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${vs}], indices[${bn}], indices[${vn}]);
      let nxy = ${i.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${xf(o,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:u=>{let h=xe.size(n);return{outputs:[{dims:n,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:c}},getShaderSource:p}},Ef=(e,r)=>{gf(e.inputs),e.compute(Tf(e.inputs,r))},Pf=e=>Dt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),$r,Cf,Sf,yc,$f,Bi,kf,If=Ve(()=>{pt(),Mt(),Yt(),Rd(),Xd(),xt(),Ks(),$r=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,Cf=(e,r)=>{let t=e[0],s=$r(e,1),i=$r(e,2),n=$r(e,3),o=$r(e,4),a=$r(e,5),l=$r(e,6),c=$r(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],u=t.dims[1],h=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],g=u,f=0,P=0,A=Math.floor(h/r.numHeads);if(l&&c&&xe.size(l.dims)&&xe.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==A)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==A)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],P=l.dims[2]}else if(l&&xe.size(l.dims)||c&&xe.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let v;if(s&&xe.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');v=2,g=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==A)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');v=5,g=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==A)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');v=0,g=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');v=3}if(n&&xe.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let y=f+g,k=0;if(o&&xe.size(o.dims)>0){k=8;let T=o.dims;throw T.length===1?T[0]===p?k=1:T[0]===3*p+2&&(k=3):T.length===2&&T[0]===p&&T[1]===y&&(k=5),k===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let E=!1,M=h;if(i&&xe.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(g!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');M=i.dims[2]}else{if(g!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');M=i.dims[1]*i.dims[3],E=!0}}let w=!1;if(o&&xe.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(a&&xe.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==p||a.dims[1]!==r.numHeads||a.dims[2]!==u||a.dims[3]!==y)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:u,pastSequenceLength:f,kvSequenceLength:g,totalSequenceLength:y,maxSequenceLength:P,inputHiddenSize:0,hiddenSize:h,vHiddenSize:M,headSize:A,vHeadSize:Math.floor(M/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:k,scale:r.scale,broadcastResPosBias:w,passPastInKv:E,qkvFormat:v}},Sf=e=>Dt({...e}),yc=Dt({perm:[0,2,1,3]}),$f=(e,r,t,s,i,n,o)=>{let a=[s,i,n],l=xe.size(a),c=[{type:12,data:l},{type:12,data:o},{type:12,data:n}],p=u=>{let h=tt("qkv_with_bias",r.dataType,a),g=$e("qkv",r.dataType,a),f=$e("bias",t.dataType,a),P=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${u.registerUniforms(P).declareVariables(g,f,h)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},Bi=(e,r,t,s,i,n,o,a)=>{let l=n;if(o&&xe.size(o.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=$f(e,n,o,r,s,t*i,a),l=l.reshape([r,s,t,i]),t===1||s===1?l:e.compute(Nr(l,yc.perm),{inputs:[l],outputs:[-1]})[0]}else return n.dims.length===3&&(l=n.reshape([r,s,t,i])),t===1||s===1?l:e.compute(Nr(l,yc.perm),{inputs:[l],outputs:[-1]})[0]},kf=(e,r)=>{let t=Cf(e.inputs,r),s=e.inputs[0],i=$r(e.inputs,1),n=$r(e.inputs,2),o=$r(e.inputs,3),a=$r(e.inputs,4),l=$r(e.inputs,5),c=$r(e.inputs,6),p=$r(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let u=i&&n&&i.dims.length===4&&n.dims.length===4,h=Bi(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,o,0);if(u)return Fi(e,h,i,n,a,void 0,c,p,l,t);if(!i||!n)throw new Error("key and value must be provided");let g=Bi(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,i,o,t.hiddenSize),f=Bi(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,n,o,2*t.hiddenSize);Fi(e,h,g,f,a,void 0,c,p,l,t)}}),Af,Ff,Of,Df,Mc,Lf,zf,Bf=Ve(()=>{pt(),Mt(),Yt(),xt(),Af=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Ff=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>t.push(Number(i))),s=t.length),Dt({numOutputs:s,axis:r.axis,splitSizes:t})},Of=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${rt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Df=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let i=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(i):s===0?t.push(`if (output_number == ${s}u) { ${i} }`):s===r-1?t.push(`else { ${i} }`):t.push(`else if (output_number == ${s}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},Mc=(e,r)=>{let t=e[0].dims,s=xe.size(t),i=e[0].dataType,n=xe.normalizeAxis(r.axis,t.length),o=new Array(r.numOutputs),a=$e("input",i,t.length),l=new Array(r.numOutputs),c=[],p=[],u=0,h=[{type:12,data:s}];for(let f=0;f<r.numOutputs;f++){u+=r.splitSizes[f],l[f]=u;let P=t.slice();P[n]=r.splitSizes[f],p.push(P),o[f]=tt(`output${f}`,i,P.length),c.push({dims:p[f],dataType:e[0].dataType})}h.push({type:12,data:l},...nt(t,...p));let g=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...o)}
  ${Of(l.length)}
  ${Df(o)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${rt("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:h})}},Lf=(e,r)=>{Af(e.inputs);let t=e.inputs.length===1?r:Ff(e.inputs,r);e.compute(Mc(e.inputs,t),{inputs:[0]})},zf=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Dt({axis:r,numOutputs:s,splitSizes:t})}}),Rf,Nf,bc,jf,zv=Ve(()=>{Yt(),Xd(),If(),Bf(),Ks(),Rf=(e,r)=>{if(r.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],i=e[2],n=e[3],o=e[4];if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],u=c,h=0,g=!s||s.dims.length===0,f=Math.floor(g?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);g&&(p=f*r.numHeads);let P=n&&n.dims.length!==0,A=o&&o.dims.length!==0;if(P&&n.dims.length===4&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(P&&A){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');h=n.dims[2]}else if(P||A)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let v=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');u=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');u=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');u=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');v=3}let y=0,k=!1,E=r.kvNumHeads?f*r.kvNumHeads:p;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(u!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');E=i.dims[2]}else{if(u!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');E=i.dims[1]*i.dims[3],k=!0}}let M=e.length>4?e[5]:void 0;if(M&&M.dims.length!==1&&M.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:h,kvSequenceLength:u,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:E,headSize:f,vHeadSize:Math.floor(E/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:y,scale:r.scale,broadcastResPosBias:!1,passPastInKv:k,qkvFormat:v}},Nf=Dt({perm:[0,2,1,3]}),bc=(e,r,t)=>{let s=r,i=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,i,t.headSize]),s=e.compute(Nr(s,Nf.perm),{inputs:[s],outputs:[-1]})[0]),s},jf=(e,r)=>{var A;let t=Rf(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((A=e.inputs[1])==null?void 0:A.dims.length)===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,n=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,u=Dt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[h,g,f]=!i&&!n?e.compute(Mc([s],u),{inputs:[s],outputs:[-1,-1,-1]}):[s,i,n],P=Bi(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,h,void 0,0);Fi(e,P,bc(e,g,t),bc(e,f,t),void 0,void 0,o,a,void 0,t,l,c)}}),vc,Vf,Uf,Wf,Bv=Ve(()=>{pt(),Mt(),Ks(),xt(),vc=(e,r,t,s,i,n,o,a)=>{let l=Xt(n),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,u=i*o,h=64;u===1&&(h=256);let g=[i,o,n/l],f=[i,o,2],P=["rank","type","type"],A=[];A.push(...nt(g,f));let v=y=>{let k=$e("x",r.dataType,3,l),E=$e("scale",t.dataType,t.dims),M=$e("bias",s.dataType,s.dims),w=tt("output",1,3,2),T=[k,E,M,w];return`
  var<workgroup> workgroup_shared : array<${p}, ${h}>;
  const workgroup_size = ${h}u;
  ${y.declareVariables(...T)}
  ${y.mainStart(h)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${k.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Gs("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${Gs("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${h}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:u},programUniforms:A}),getShaderSource:v},{inputs:[r,t,s],outputs:[-1]})[0]},Vf=(e,r,t)=>{let s=r[0].dims,i=s,n=2,o=s[0],a=s[1],l=xe.sizeFromDimension(s,n),c=Xt(l),p=xe.size(i)/c,u=vc(e,r[0],r[1],r[2],o,l,a,t.epsilon),h=[o,a,l/c],g=[o,a],f=["type","none"],P=A=>{let v=$e("x",r[0].dataType,h.length,c),y=$e("scale_shift",1,g.length,2),k=tt("output",r[0].dataType,h.length,c),E=[v,y,k];return`
  ${A.registerUniform("output_size","u32").declareVariables(...E)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${k.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${y.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${v.getByOffset("global_idx")} * ${k.type.value}(scale_shift.x) + ${k.type.value}(scale_shift.y);
      ${k.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...nt(h,g,h)]}),getShaderSource:P},{inputs:[r[0],u]})},Uf=(e,r,t)=>{let s=r[0].dims,i=s,n=s[0],o=s[s.length-1],a=xe.sizeFromDimension(s,1)/o,l=Xt(o),c=xe.size(i)/l,p=[{type:12,data:a},{type:12,data:Math.floor(o/l)}],u=["type","type"],h=!1,g=[0,s.length-1];for(let v=0;v<s.length-2;v++)h=h||s[v+1]!==1,g.push(v+1);h=h&&s[s.length-1]!==1;let f=h?e.compute(Nr(e.inputs[0],g),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(v,y)=>s[g[y]])),P=vc(e,f,r[1],r[2],n,a,o,t.epsilon),A=v=>{let y=lr(r[0].dataType),k=l===1?"vec2f":`mat${l}x2f`,E=T=>{let $=T===0?"x":"y",z=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${y}(${z}(scale.${$}))`;case 2:return`vec2<${y}>(${z}(scale[0].${$}, scale[1].${$}))`;case 4:return`vec4<${y}>(${z}(scale[0].${$}, scale[1].${$}, scale[2].${$}, scale[3].${$}))`;default:throw new Error(`Not supported compoents ${l}`)}},M=$e("input",r[0].dataType,r[0].dims,l),w=tt("output",r[0].dataType,i,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${M.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${k}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${w.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${v.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${E(0)}, ${E(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:A},{inputs:[r[0],P]})},Wf=(e,r)=>{r.format==="NHWC"?Uf(e,e.inputs,r):Vf(e,e.inputs,r)}}),Gf,Kf,Hf,Rv=Ve(()=>{pt(),Mt(),xt(),Gf=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Kf=(e,r,t)=>{let s=r.simplified,i=e[0].dims,n=e[1],o=!s&&e[2],a=i,l=xe.normalizeAxis(r.axis,i.length),c=xe.sizeToDimension(i,l),p=xe.sizeFromDimension(i,l),u=xe.size(n.dims),h=o?xe.size(o.dims):0;if(u!==p||o&&h!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${u} and bias size of ${h}`);let g=[];for(let M=0;M<i.length;++M)M<l?g.push(i[M]):g.push(1);let f=Xt(p),P=["type","type"],A=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/f)},{type:1,data:r.epsilon}];o&&P.push("type");let v=t>1,y=t>2,k=M=>{let w=lr(e[0].dataType),T=[$e("x",e[0].dataType,e[0].dims,f),$e("scale",n.dataType,n.dims,f)];o&&T.push($e("bias",o.dataType,o.dims,f)),T.push(tt("output",e[0].dataType,a,f)),v&&T.push(tt("mean_data_output",1,g)),y&&T.push(tt("inv_std_output",1,g));let $=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${M.registerUniforms($).declareVariables(...T)}
  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Ud("f32",f)};
    var mean_square_vector = ${Ud("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Vn(w,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Gs("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Gs("mean_square_vector",f)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Vn(w,f,"x[j + offset]")};
      let f32scale = ${Vn(w,f,"scale[j]")};
      output[j + offset] = ${T[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${Vn(w,f,"bias[j]")}`:""}
      );
    }

    ${v?"mean_data_output[global_idx] = mean":""};
    ${y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},E=[{dims:a,dataType:e[0].dataType}];return v&&E.push({dims:g,dataType:1}),y&&E.push({dims:g,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${s}`,inputDependencies:P},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:A}),getShaderSource:k}},Hf=(e,r)=>{Gf(e.inputs),e.compute(Kf(e.inputs,r,e.outputCount))}}),qf,Qf,Nv=Ve(()=>{Mt(),nc(),lc(),qf=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Qf=e=>{qf(e.inputs);let r=Nn.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(sc(e.inputs,{activation:""},r));else{let i=r[r.length-2],n=xe.size(e.inputs[0].dims.slice(0,-2)),o=xe.size(e.inputs[1].dims.slice(0,-2));if(n!==1&&i===1&&o===1){let a=e.inputs[0].reshape([1,n,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,n,t],p=[a,l];e.compute(Ca(p,{activation:""},r,c),{inputs:p})}else e.compute(Ca(e.inputs,{activation:""},r))}}}),Xf,Jf,Yf,Zf,eg,jv=Ve(()=>{pt(),Mt(),Yt(),xt(),Xf=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,o=e[1];if(!xe.areEqual(o.dims,[r.n,i,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(xe.size(a)!==r.n*i)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*i:r.n*Math.floor((i+1)/2);if(xe.size(l)!==c)throw new Error("zeroPoints input size error.")}},Jf=(e,r)=>{let t=e[0].dims,s=t.length,i=t[s-2],n=r.k,o=r.n,a=t.slice(0,s-2),l=xe.size(a),c=e[1].dims[2]/4,p=e[0].dataType,u=Xt(r.k),h=Xt(c),g=Xt(o),f=a.concat([i,o]),P=i>1&&o/g%2===0?2:1,A=xe.size(f)/g/P,v=64,y=[],k=[l,i,n/u],E=xe.convertShape(e[1].dims).slice();E.splice(-1,1,c/h),y.push(...nt(k)),y.push(...nt(E)),y.push(...nt(e[2].dims)),e.length===4&&y.push(...nt(xe.convertShape(e[3].dims)));let M=[l,i,o/g];y.push(...nt(M));let w=T=>{let $=k.length,z=$e("a",e[0].dataType,$,u),R=$e("b",12,E.length,h),Q=$e("scales",e[2].dataType,e[2].dims.length),q=[z,R,Q],U=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;U&&q.push(U);let Z=M.length,H=tt("output",e[0].dataType,Z,g),J=lr(e[0].dataType),ie=(()=>{switch(u){case 1:return`array<${J}, 8>`;case 2:return`mat4x2<${J}>`;case 4:return`mat2x4<${J}>`;default:throw new Error(`${u}-component is not supported.`)}})(),ae=()=>{let N=`
          // reuse a data
            var input_offset = ${z.indicesToOffset(`${z.type.indices}(batch, row, word_offset)`)};
            var a_data: ${ie};
            for (var j: u32 = 0; j < ${8/u}; j++) {
              a_data[j] = ${z.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let O=0;O<g*P;O++)N+=`
            b_value = ${h===1?`b${O}_data`:`b${O}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${ie}(${Array.from({length:4},(G,se)=>`${J}(b_value_lower[${se}]), ${J}(b_value_upper[${se}])`).join(", ")});
            b_dequantized_values = ${u===1?`${ie}(${Array.from({length:8},(G,se)=>`(b_quantized_values[${se}] - ${U?`zero_point${O}`:"zero_point"}) * scale${O}`).join(", ")});`:`(b_quantized_values - ${ie}(${Array(8).fill(`${U?`zero_point${O}`:"zero_point"}`).join(",")})) * scale${O};`};
            workgroup_shared[local_id.x * ${P} + ${Math.floor(O/g)}]${g>1?`[${O%g}]`:""} += ${Array.from({length:8/u},(G,se)=>`${u===1?`a_data[${se}] * b_dequantized_values[${se}]`:`dot(a_data[${se}], b_dequantized_values[${se}])`}`).join(" + ")};
          `;return N},ce=()=>{let N=`
            var col_index = col * ${g};
            ${U?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${J}(8);`}
            `;for(let O=0;O<g*P;O++)N+=`
            let scale${O} = ${Q.getByOffset("col_index * nBlocksPerCol + block")};
            ${U?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${U.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${O} = ${J}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return N},he=()=>{let N=`col_index = col * ${g};`;for(let O=0;O<g*P;O++)N+=`
            let b${O}_data = ${R.getByIndices(`${R.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return N+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${ie};
            var b_dequantized_values: ${ie};`,N};return`
        var<workgroup> workgroup_shared: array<${H.type.value}, ${P*v}>;
        ${T.declareVariables(...q,H)}
        ${T.mainStart([v,1,1])}
          let output_indices = ${H.offsetToIndices(`(global_idx / ${v}) * ${P}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${v}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/u};
            ${ce()}
            for (var word: u32 = 0; word < ${c}; word += ${h}) {
              ${he()}
              for (var i: u32 = 0; i < ${h}; i++) {
                ${ae()}
                word_offset += ${8/u};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${P}) {
            var output_value: ${H.type.value} = ${H.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${v}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${P};
            }
            ${H.setByIndices(`${H.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${u};${h};${g};${P};${v}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:p}],dispatchGroup:{x:A},programUniforms:y}),getShaderSource:w}},Yf=(e,r)=>{let t=e[0].dims,s=t.length,i=t[s-2],n=r.k,o=r.n,a=t.slice(0,s-2),l=xe.size(a),c=e[1].dims[2]/4,p=e[0].dataType,u=Xt(r.k),h=Xt(c),g=a.concat([i,o]),f=128,P=o%8===0?8:o%4===0?4:1,A=f/P,v=A*h*8,y=v/u,k=v/r.blockSize,E=xe.size(g)/P,M=[],w=[l,i,n/u],T=xe.convertShape(e[1].dims).slice();T.splice(-1,1,c/h),M.push(...nt(w)),M.push(...nt(T)),M.push(...nt(e[2].dims)),e.length===4&&M.push(...nt(xe.convertShape(e[3].dims)));let $=[l,i,o];M.push(...nt($));let z=R=>{let Q=w.length,q=$e("a",e[0].dataType,Q,u),U=$e("b",12,T.length,h),Z=$e("scales",e[2].dataType,e[2].dims.length),H=[q,U,Z],J=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;J&&H.push(J);let ie=$.length,ae=tt("output",e[0].dataType,ie),ce=lr(e[0].dataType),he=()=>{switch(u){case 1:return`
          let a_data0 = vec4<${ce}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${ce}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${ce}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${ce}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${u}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${q.type.value}, ${y}>;
        var<workgroup> inter_results: array<array<${ae.type.value}, ${A}>, ${P}>;
        ${R.declareVariables(...H,ae)}
        ${R.mainStart([A,P,1])}
          let output_indices = ${ae.offsetToIndices(`workgroup_index * ${P}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${k} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${y};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${y}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${q.getByIndices(`${q.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${q.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${k} + local_id.x;
            ${J?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${J.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${ce}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ce}(8);`}
            let scale = ${Z.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${U.getByIndices(`${U.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/u};
            for (var i: u32 = 0; i < ${h}; i++) {
              ${he()}
              let b_value = ${h===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${ce}>(${Array.from({length:4},(N,O)=>`${ce}(b_value_lower[${O}]), ${ce}(b_value_upper[${O}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${ce}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(N,O)=>`${`dot(a_data${O}, b_dequantized_values[${O}])`}`).join(" + ")};
              word_offset += ${8/u};
            }
            workgroupBarrier();
          }

          if (local_idx < ${P}) {
            var output_value: ${ae.type.value} = ${ae.type.value}(0);
            for (var b = 0u; b < ${A}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ae.setByIndices(`${ae.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${u};${h};${A};${P}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:g,dataType:p}],dispatchGroup:{x:E},programUniforms:M}),getShaderSource:z}},Zf=(e,r)=>{Xf(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Yf(e.inputs,r)):e.compute(Jf(e.inputs,r))},eg=e=>Dt(e)}),tg,rg,sg,ng,ig,og,ag,lg,dg,Vv=Ve(()=>{pt(),Mt(),xt(),tg=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},rg=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
            k = i32(${e.indicesGet("indices",i)}) - ${rt("uniforms.pads",i,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${rt("uniforms.x_shape",i,r)})) {
              break;
            }
            offset += k * i32(${rt("uniforms.x_strides",i,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},sg=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${rt("uniforms.pads",i,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${rt("uniforms.x_shape",i,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${rt("uniforms.x_shape",i,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${rt("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},ng=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${rt("uniforms.pads",i,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${rt("uniforms.x_shape",i,r)})) {
                  k = i32(${rt("uniforms.x_shape",i,r)}) - 1;
                }
                offset += k * i32(${rt("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},ig=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${rt("uniforms.pads",i,t)};
                if (k < 0)  {
                  k += i32(${rt("uniforms.x_shape",i,r)}]);
                }
                if (k >= i32(${rt("uniforms.x_shape",i,r)})) {
                  k -= i32(${rt("uniforms.x_shape",i,r)});
                }
                offset += k * i32(${rt("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},og=(e,r,t)=>{switch(t.mode){case 0:return rg(e,r,t.pads.length);case 1:return sg(e,r,t.pads.length);case 2:return ng(e,r,t.pads.length);case 3:return ig(e,r,t.pads.length);default:throw new Error("Invalid mode")}},ag=(e,r)=>{let t=xe.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,i=xe.size(t),n=[{type:12,data:i},{type:6,data:r.pads}],o=e.length>=3&&e[2].data;r.mode===0&&n.push({type:o?e[2].dataType:1,data:r.value}),n.push(...nt(e[0].dims,t));let a=["rank"],l=c=>{let p=tt("output",e[0].dataType,t.length),u=$e("x",e[0].dataType,s.length),h=u.type.value,g=og(p,s.length,r),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&f.push({name:"constant_value",type:o?h:"f32"}),`
            ${c.registerUniforms(f).declareVariables(u,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${h}(0);
            ${g}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${o}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(xe.size(t)/64)},programUniforms:n}),getShaderSource:l}},lg=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,n=new Int32Array(2*i).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)n[Number(a[l])]=Number(t[l]),n[Number(a[l])+i]=Number(t[l+a.length])}else t.forEach((a,l)=>n[Number(l)]=Number(a));let o=[];return n.forEach(a=>o.push(a)),{mode:r.mode,value:s,pads:o}}else return r},dg=(e,r)=>{tg(e.inputs);let t=lg(e.inputs,r);e.compute(ag(e.inputs,t),{inputs:[0]})}}),Ri,xc,Tc,Ec,Pc,cg,ug,Cc,Sc,pg,hg,$c,mg,_g,kc,fg,gg,wg,yg,Uv=Ve(()=>{ss(),pt(),Mt(),xt(),Ri=e=>{if(Ut.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},xc=(e,r,t)=>{let s=r.format==="NHWC",i=e.dims.slice();s&&i.splice(1,0,i.pop());let n=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),a=r.strides.slice(),l=n?r.dilations.slice():[],c=r.pads.slice();va.adjustPoolAttributes(t,i,o,a,l,c);let p=va.computePoolOutputShape(t,i,a,l,o,c,r.autoPad),u=Object.assign({},r);n?Object.assign(u,{kernelShape:o,strides:a,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(u,{kernelShape:o,strides:a,pads:c,cacheKey:r.cacheKey});let h=p.slice();return h.push(h.splice(1,1)[0]),[u,s?h:p]},Tc=(e,r)=>{let t=r.format==="NHWC",s=xe.size(e),i=xe.size(r.kernelShape),n=[{type:12,data:s},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],u=!!(c+p);n.push({type:12,data:a},{type:12,data:l},{type:12,data:c},{type:12,data:p}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let h=!1;if(r.kernelShape.length===2){let g=r.kernelShape[r.kernelShape.length-2],f=r.strides[r.strides.length-2],P=r.pads[r.pads.length/2-2],A=r.pads[r.pads.length-2];h=!!(P+A),n.push({type:12,data:g},{type:12,data:f},{type:12,data:P},{type:12,data:A}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[n,o,!0,u,h]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=xe.computeStrides(r.kernelShape);n.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),o.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,p)=>c+p);return[n,o,!!l,!1,!1]}},Ec=(e,r,t,s,i,n,o,a,l,c,p,u)=>{let h=i.format==="NHWC",g=r.type.value,f=tt("output",r.type.tensor,s);if(i.kernelShape.length<=2){let P="",A="",v="",y=t-(h?2:1);if(p?P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${y}] < 0 || xIndices[${y}]
                      >= uniforms.x_shape[${y}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,i.kernelShape.length===2){let k=t-(h?3:2);u?A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${k}] < 0 || xIndices[${k}] >= uniforms.x_shape[${k}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                `,v=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${g}(${a});
              var pad = 0;
              ${A}
              ${P}
              ${v}
              ${o}

              output[global_idx] = value;
            }`}else{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let P=i.kernelShape.length,A=i.pads.length,v="";return c?v=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:v=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${P}>;

              var value = ${g}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${P-1}u; j++) {
                  offsets[j] = offset / ${rt("uniforms.kernelStrides","j",P)};
                  offset -= offsets[j] * ${rt("uniforms.kernelStrides","j",P)};
                }
                offsets[${P-1}] = offset;

                isPad = false;
                for (var j = ${t-P}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${rt("uniforms.strides",`j - ${t-P}u`,P)}
                    + offsets[j - ${t-P}u] - ${rt("uniforms.pads","j - 2u",A)};
                  ${v}
              }
              ${o}

              output[global_idx] = value;
            }`}},Pc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,cg=e=>`${Pc(e)};${e.countIncludePad}`,ug=e=>`${Pc(e)};${e.storageOrder};${e.dilations}`,Cc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Sc=(e,r,t,s)=>{let[i,n]=xc(r,s,t),o=$e("x",r.dataType,r.dims.length),a=o.type.value,l="value += x_val;",c="";i.countIncludePad?c+=`value /= ${a}(uniforms.kernelSize);`:c+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[p,u,h,g,f]=Tc(n,i);p.push(...nt(r.dims,n));let P=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${h};${g};${f}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(xe.size(n)/64)},programUniforms:p}),getShaderSource:A=>Ec(A,o,r.dims.length,n.length,i,l,c,0,u,h,g,f)}},pg=e=>{let r=e.count_include_pad!==0,t=Cc(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:cg(s)}},hg=(e,r)=>{Ri(e.inputs),e.compute(Sc("AveragePool",e.inputs[0],!1,r))},$c={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},mg=e=>{let r=e.format;return{format:r,...$c,cacheKey:r}},_g=(e,r)=>{Ri(e.inputs),e.compute(Sc("GlobalAveragePool",e.inputs[0],!0,r))},kc=(e,r,t,s)=>{let[i,n]=xc(r,s,t),o=`
      value = max(x_val, value);
    `,a="",l=$e("x",r.dataType,r.dims.length),c=["rank"],[p,u,h,g,f]=Tc(n,i);return p.push(...nt(r.dims,n)),{name:e,shaderCache:{hint:`${s.cacheKey};${h};${g};${f}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(xe.size(n)/64)},programUniforms:p}),getShaderSource:P=>Ec(P,l,r.dims.length,n.length,i,o,a,r.dataType===10?-65504:-1e5,u,h,g,f)}},fg=(e,r)=>{Ri(e.inputs),e.compute(kc("MaxPool",e.inputs[0],!1,r))},gg=e=>{let r=e.storage_order,t=e.dilations,s=Cc(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:r,dilations:t,...s,cacheKey:""};return{...i,cacheKey:ug(i)}},wg=e=>{let r=e.format;return{format:r,...$c,cacheKey:r}},yg=(e,r)=>{Ri(e.inputs),e.compute(kc("GlobalMaxPool",e.inputs[0],!0,r))}}),Mg,bg,vg,xg,Wv=Ve(()=>{pt(),Mt(),Yt(),xt(),Mg=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,n)=>n===r.axis||i===e[0].dims[n]).reduce((i,n)=>i&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},bg=(e,r)=>{let t=xe.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,i=s===3,n=e[0].dims,o=e[1].dataType,a=xe.size(n),l=s===3||s===2,c=l?[Math.ceil(xe.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,u=e.length>2?e[2]:void 0,h=u?l?[Math.ceil(xe.size(u.dims)/4)]:u.dims:void 0,g=p.length===0||p.length===1&&p[0]===1,f=g===!1&&p.length===1,P=Xt(a),A=g&&(!l||P===4),v=A?P:1,y=A&&!l?P:1,k=$e("input",l?12:s,c.length,y),E=$e("scale",o,p.length),M=u?$e("zero_point",l?12:s,h.length):void 0,w=tt("output",o,n.length,v),T=[k,E];M&&T.push(M);let $=[c,p];u&&$.push(h);let z=[{type:12,data:a/v},{type:12,data:t},{type:12,data:r.blockSize},...nt(...$,n)],R=Q=>{let q=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${Q.registerUniforms(q).declareVariables(...T,w)}
      ${Q.mainStart()}
          ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${w.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${k.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${v===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${k.getByOffset("global_idx")};`};

          // Set scale input
          ${g?`let scale_value= ${E.getByOffset("0")}`:f?`
            let scale_index = ${w.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${E.getByOffset("scale_index")};`:`
            var scale_indices: ${E.type.indices} = output_indices;
            let index = ${E.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${E.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${E.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${M?g?l?`
                let zero_point_input = ${M.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${M.getByOffset("0")}`:f?l?`
                let zero_point_index = ${w.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${M.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${w.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${M.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${E.indicesToOffset("scale_indices")};
                let zero_point_input = ${M.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${M.getByIndices("scale_indices")};`:`let zero_point_value = ${l?i?"i32":"u32":k.type.value}(0);`};
      // Compute and write output
      ${w.setByOffset("global_idx",`${w.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:M?["rank","rank","rank"]:["rank","rank"]},getShaderSource:R,getRunData:()=>({outputs:[{dims:n,dataType:o}],dispatchGroup:{x:Math.ceil(a/v/64),y:1,z:1},programUniforms:z})}},vg=(e,r)=>{Mg(e.inputs,r),e.compute(bg(e.inputs,r))},xg=e=>Dt({axis:e.axis,blockSize:e.blockSize})}),Tg,Eg,Pg,Gv=Ve(()=>{ss(),pt(),xt(),Tg=(e,r,t)=>{let s=e===r,i=e<r&&t<0,n=e>r&&t>0;if(s||i||n)throw new Error("Range these inputs' contents are invalid.")},Eg=(e,r,t,s)=>{let i=Math.abs(Math.ceil((r-e)/t)),n=[i],o=i,a=[{type:12,data:o},{type:s,data:e},{type:s,data:t},...nt(n)],l=c=>{let p=tt("output",s,n.length),u=p.type.value,h=[{name:"outputSize",type:"u32"},{name:"start",type:u},{name:"delta",type:u}];return`
        ${c.registerUniforms(h).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${u}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:n,dataType:s}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:a})}},Pg=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),Ut.webgpu.validateInputContent&&Tg(r,t,s),e.compute(Eg(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),Cg,Sg,$g,kg,Kv=Ve(()=>{pt(),Mt(),Yt(),xt(),Cg=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let i=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${i}bitcast<${s}>(oldValue) + (${t})${n}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${i}max(bitcast<f32>(oldValue), (${t}))${n}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${i}min(bitcast<${s}>(oldValue), (${t}))${n}`;case"mul":return`${i}(bitcast<${s}>(oldValue) * (${t}))${n}`;default:throw new Error(`Reduction ${e} is not supported.`)}},Sg=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t,n=1,o=Math.ceil(xe.size(s)/n),a=s[s.length-1],l=xe.sizeFromDimension(t,a),c=[{type:12,data:o},{type:12,data:a},{type:12,data:l},...nt(e[1].dims,e[2].dims,i)],p=u=>{let h=$e("indices",e[1].dataType,e[1].dims.length),g=$e("updates",e[2].dataType,e[2].dims.length,n),f=r.reduction!=="none"&&r.reduction!==""?Rp("output",e[0].dataType,i.length):tt("output",e[0].dataType,i.length,n);return`
      ${u.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(h,g,f)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    let n = ${xe.size(s)};
    for (var i = 0; i < n; i = i + 1) {
      for (var j = i + 1; j < n; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    indices_start = 0u;
  }
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${Cg(r.reduction,"output[data_offset + i]","value",f.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c}),getShaderSource:p}},$g=e=>Dt({reduction:e.reduction}),kg=(e,r)=>{e.compute(Sg(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Ig,Ag,Fg,Ic,Og,Dg,Lg,zg,Bg,Rg,Ng,jg,Ac,Vg,Ug,Wg,Gg,Kg,Hg,qg,Hv=Ve(()=>{pt(),Mt(),Yt(),xt(),Ig=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Ag=(e,r,t)=>{r.every(i=>i>=0&&i<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((i,n)=>s[i]=e[n]),s},Fg=(e,r,t,s,i,n)=>{let[o,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(p=>n.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ig(s,r),r.axes.length>0&&Ag(s,r.axes,c).forEach((p,u)=>s[u]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>i.push(Number(p))),i.length!==0&&i.length!==c&&t>=18&&i.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof i<"u"&&s.length>0&&i.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},Ic=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,Og=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${Ic("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Ic("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Dg=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Lg=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),i=e.length===0?s:e.slice();return r.length>0?(r.forEach((n,o)=>{s[n]=i[o],s[o+t]=i[r.length+o]}),s):i},zg=(e,r,t,s)=>{let i=[];if(t.length>0)if(s.length>0){if(e.forEach(n=>i.push(n)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((n,o)=>i[n]=t[o])}else t.forEach(n=>i.push(n));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((n,o)=>Math.round(n*r[o]))}return i},Bg=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(n=>r[n]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(n=>r[n]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let i=e.slice();return t.axes.length>0?(t.axes.forEach(n=>r[n]=s),t.axes.forEach(n=>i[n]=Math.round(e[n]*r[n]))):(r.fill(s,0,r.length),i.forEach((n,o)=>i[o]=Math.round(n*r[o]))),i},Rg=(e,r,t,s,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${rt("uniforms.scales","i",s)};
        var roi_low = ${rt("uniforms.roi","i",i)};
        var roi_hi = ${rt("uniforms.roi",`i + ${r.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${rt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${rt("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Ng=(e,r,t,s,i,n,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${rt("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${rt("uniforms.roi","i",n)};
          var roi_hi = ${rt("uniforms.roi",`i + ${t.length}`,n)};
          var input_shape_i = ${rt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${rt("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,jg=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${rt("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Ac=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",Vg=(e,r,t,s,i)=>{let[n,o,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Ac(e,l,n,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${o}];
      var col:${c} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[o]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${t[o]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Ug=(e,r,t,s,i,n,o,a,l,c)=>{let p=t.length===2,[u,h]=p?[0,1]:[2,3],g=e.type.value,f=P=>{let A=P===u?"row":"col";return`
      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${g} {
        var output_index = ${r.indicesGet("output_indices",P)};
        var originalIdx: ${g} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[P]},
        ${s[P]}, ${t[P]}, ${n[P]}, ${n[P]} + ${t.length});
        var fractOriginalIdx: ${g} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[P]} - 1))) {
          return ${l};
        }
        var data: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${A}: ${g} = originalIdx + ${g}(i);
          if (${A} < 0 || ${A} >= ${t[P]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${A} = max(0, min(${A}, ${t[P]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",P,`u32(${A})`)};
          data[i + 1] = ${P===u?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(u)};
    ${f(h)};
  fn getCubicInterpolationCoefs(s: ${g}) -> array<${g}, 4> {
    var absS = abs(s);
    var coeffs: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${g} = 1.0 - absS;
    var twoMinusAbsS: ${g} = 2.0 - absS;
    var onePlusAbsS: ${g} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${g}, 4>, coefs: array<${g}, 4>) -> ${g} {
    var coefsSum: ${g} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${g} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Wg=(e,r,t,s,i)=>{let[n,o,a,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Ac(e,c,n,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${o}];
      var height:${p} = originalIndices[${a}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[o]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${t[o]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Gg=(e,r,t,s,i,n)=>{let o=e.dims,a=Lg(n,r.axes,o.length),l=zg(o,s,i,r.axes),c=s.slice();s.length===0&&(c=o.map((y,k)=>y===0?1:l[k]/y),r.keepAspectRatioPolicy!=="stretch"&&(l=Bg(o,c,r)));let p=tt("output",e.dataType,l.length),u=$e("input",e.dataType,o.length),h=xe.size(l),g=o.length===l.length&&o.every((y,k)=>y===l[k]),f=r.coordinateTransformMode==="tf_crop_and_resize",P=r.extrapolationValue,A=u.type.value,v=y=>`
      ${g?"":`
      ${Og(r.coordinateTransformMode,A)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${jg(u,o)};
              ${Dg(r.nearestMode,t,A)};
              ${Ng(u,p,o,l,c.length,a.length,f)};
              `;case"linear":return`
              ${Rg(p,o,l,c.length,a.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${Vg(u,p,o,f,P)}`;if(o.length===3||o.length===5)return`${Wg(u,p,o,f,P)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${Ug(u,p,o,l,c,a,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${y.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",a.length).declareVariables(u,p)}
      ${y.mainStart()}
        ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${g?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${u.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${u.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${i.length>0?i:""}|${a.length>0?a:""}|${g}|${r.mode==="nearest"?o.length:o}`,inputDependencies:["rank"]},getShaderSource:v,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:c},{type:1,data:a},...nt(o,l)]})}},Kg=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Hg=(e,r)=>{let t=[],s=[],i=[],n=Kg(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Fg(e.inputs,r,n,t,s,i),e.compute(Gg(e.inputs[0],r,n,t,s,i),{inputs:[0]})},qg=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,i=e.cubicCoeffA,n=e.excludeOutside!==0,o=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Dt({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:i,excludeOutside:n,extrapolationValue:o,keepAspectRatioPolicy:a,mode:l,nearestMode:c})}}),Qg,Xg,Jg,qv=Ve(()=>{pt(),Mt(),Yt(),xt(),Qg=(e,r)=>{let[t,s,i,n]=e,{numHeads:o,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!xe.areEqual(s.dims,[])&&!xe.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!xe.areEqual(i.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=i.dims[0],u=xe.sizeFromDimension(t.dims,1)/c,h=a===0?i.dims[1]*2:u/o;if(a>h)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(h/2!==i.dims[1]&&a/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Xg=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:i,scale:n}=r,o=e[0].dims[0],a=xe.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=a/l,p=e[2].dims[1],u=i===0?p*2:c/s,h=new Array(o,l,c/u,u-p),g=xe.computeStrides(h),f=[{type:1,data:n},{type:12,data:h},{type:12,data:g},...e[0].dims.length===3?new Array({type:12,data:[a,c,u,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,u,l*u,1]}):[],...nt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],P=A=>{let v=$e("input",e[0].dataType,e[0].dims.length),y=$e("position_ids",e[1].dataType,e[1].dims.length),k=$e("cos_cache",e[2].dataType,e[2].dims.length),E=$e("sin_cache",e[3].dataType,e[3].dims.length),M=tt("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:g.length},{name:"input_output_strides",type:"u32",length:g.length}]),`
        ${A.declareVariables(v,y,k,E,M)}

        ${A.mainStart(jn)}
          let half_rotary_emb_dim = uniforms.${k.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${y.broadcastedIndicesToOffset("bsnh.xy",tt("",y.type.tensor,2))};
            let position_id =
                u32(${y.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${v.getByOffset("i")} * ${k.get("position_id","bsnh[3]")} -
                ${v.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};
            ${M.setByOffset("i","re")}
            let im = ${v.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} +
                ${v.getByOffset("j")} * ${k.get("position_id","bsnh[3]")};
            ${M.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${M.setByOffset("k",v.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Dt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:P,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(xe.size(h)/jn)},programUniforms:f})}},Jg=(e,r)=>{Qg(e.inputs,r),e.compute(Xg(e.inputs,r))}}),Yg,Zg,ew,Qv=Ve(()=>{pt(),Mt(),xt(),Yg=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Zg=(e,r,t,s)=>{let i=r.simplified,n=e[0].dims,o=xe.size(n),a=n,l=o,c=n.slice(-1)[0],p=s?n.slice(0,-1).concat(1):[],u=!i&&e.length>3,h=e.length>4,g=s&&t>1,f=s&&t>2,P=t>3,A=64,v=Xt(c),y=[{type:12,data:l},{type:12,data:v},{type:12,data:c},{type:1,data:r.epsilon}],k=M=>{let w=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],T=[$e("x",e[0].dataType,e[0].dims,v),$e("skip",e[1].dataType,e[1].dims,v),$e("gamma",e[2].dataType,e[2].dims,v)];u&&T.push($e("beta",e[3].dataType,e[3].dims,v)),h&&T.push($e("bias",e[4].dataType,e[4].dims,v)),T.push(tt("output",e[0].dataType,a,v)),g&&T.push(tt("mean_output",1,p)),f&&T.push(tt("inv_std_output",1,p)),P&&T.push(tt("input_skip_bias_sum",e[0].dataType,a,v));let $=lr(e[0].dataType),z=lr(1,v);return`

      ${M.registerUniforms(w).declareVariables(...T)}
      var<workgroup> sum_shared : array<${z}, ${A}>;
      var<workgroup> sum_squared_shared : array<${z}, ${A}>;

      ${M.mainStart([A,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${A};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${A};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${A-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${h?"bias[offset1d + i]":$+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${P?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Vn($,v,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${A};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Gs("sum",v)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Gs("square_sum",v)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${g?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${$}(mean)`}) *
            ${$}(inv_std_dev) * gamma[offset1d + i]
            ${u?"+ beta[offset1d + i]":""};
        }
      }`},E=[{dims:a,dataType:e[0].dataType}];return t>1&&E.push({dims:p,dataType:1}),t>2&&E.push({dims:p,dataType:1}),t>3&&E.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${v};${g};${f};${P}`,inputDependencies:e.map((M,w)=>"type")},getShaderSource:k,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:y})}},ew=(e,r)=>{Yg(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(Zg(e.inputs,r,e.outputCount,!1),{outputs:t})}}),tw,Ni,rw,Fc,sw,nw,iw,ow,Xv=Ve(()=>{pt(),Mt(),Yt(),xt(),tw=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},Ni=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},rw=(e,r)=>{if(e.length>1){let t=Ni(e,1),s=Ni(e,2),i=Ni(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Dt({starts:t,ends:s,axes:i})}else return r},Fc=(e,r,t,s,i)=>{let n=e;return e<0&&(n+=t[s[r]]),i[r]<0?Math.max(0,Math.min(n,t[s[r]]-1)):Math.max(0,Math.min(n,t[s[r]]))},sw=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${rt("uniforms.input_shape","i",t.length)};
            let steps_i = ${rt("uniforms.steps","i",t.length)};
            let signs_i = ${rt("uniforms.signs","i",t.length)};
            let starts_i = ${rt("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,nw=(e,r)=>{let t=e[0].dims,s=xe.size(t),i=r.axes.length>0?xe.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],n=Ni(e,4);n.forEach(v=>v!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(i.length).fill(1));let o=r.starts.map((v,y)=>Fc(v,y,t,i,n)),a=r.ends.map((v,y)=>Fc(v,y,t,i,n));if(i.length!==o.length||i.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==t.length)for(let v=0;v<t.length;++v)i.includes(v)||(o.splice(v,0,0),a.splice(v,0,t[v]),n.splice(v,0,1));let l=n.map(v=>Math.sign(v));n.forEach((v,y,k)=>{if(v<0){let E=(a[y]-o[y])/v,M=o[y],w=M+E*n[y];o[y]=w,a[y]=M,k[y]=-v}});let c=t.slice(0);i.forEach((v,y)=>{c[v]=Math.ceil((a[v]-o[v])/n[v])});let p={dims:c,dataType:e[0].dataType},u=tt("output",e[0].dataType,c.length),h=$e("input",e[0].dataType,e[0].dims.length),g=xe.size(c),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:n.length}],P=[{type:12,data:g},{type:12,data:o},{type:6,data:l},{type:12,data:n},...nt(e[0].dims,c)],A=v=>`
      ${v.registerUniforms(f).declareVariables(h,u)}
        ${sw(h,u,t)}
        ${v.mainStart()}
          ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${u.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${u.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${o.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:P})}},iw=(e,r)=>{tw(e.inputs,r);let t=rw(e.inputs,r);e.compute(nw(e.inputs,t),{inputs:[0]})},ow=e=>{let r=e.starts,t=e.ends,s=e.axes;return Dt({starts:r,ends:t,axes:s})}}),aw,lw,dw,cw,Jv=Ve(()=>{pt(),Mt(),Yt(),Ks(),xt(),aw=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},lw=(e,r)=>{let t=e.inputs[0],s=t.dims,i=xe.size(s),n=s.length,o=xe.normalizeAxis(r.axis,n),a=o<s.length-1,l,c=[];a?(c=Array.from({length:n},(T,$)=>$),c[o]=n-1,c[n-1]=o,l=e.compute(Nr(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,u=p[n-1],h=i/u,g=Xt(u),f=u/g,P=64;h===1&&(P=256);let A=(T,$)=>$===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:$===2?`max(${T}.x, ${T}.y)`:$===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,v=$e("x",l.dataType,l.dims,g),y=tt("result",l.dataType,l.dims,g),k=v.type.value,E=lr(l.dataType)==="f32"?`var threadMax = ${k}(-3.402823e+38f);`:`var threadMax = ${k}(-65504.0h);`,M=T=>`
      var<workgroup> rowMaxShared : ${k};
      var<workgroup> rowSumShared : ${k};
      var<workgroup> threadShared : array<${k}, ${P}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${k} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${k}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${T.registerUniform("packedCols","i32").declareVariables(v,y)}
      ${T.mainStart(P)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${P};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${E}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${k}(${A("threadShared[0]",g)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${k}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${k}(${Gs("threadShared[0]",g)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,w=e.compute({name:"Softmax",shaderCache:{hint:`${g};${P}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:h},programUniforms:[{type:6,data:f}]}),getShaderSource:M},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(Nr(w,c),{inputs:[w]})},dw=(e,r)=>{aw(e.inputs),lw(e,r)},cw=e=>Dt({axis:e.axis})}),Oc,uw,pw,hw,mw,Yv=Ve(()=>{pt(),Mt(),xt(),Oc=e=>Array.from(e.getBigInt64Array(),Number),uw=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Oc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},pw=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},hw=(e,r)=>{let t=e[0].dims,s=r??Oc(e[1]),i=pw(t,s),n=xe.size(i),o=e[0].dataType,a=$e("input",o,t.length),l=tt("output",o,i.length),c=p=>`
      const inputShape = ${a.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(a,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...nt(e[0].dims,i)]}),getShaderSource:c}},mw=e=>{uw(e.inputs),e.compute(hw(e.inputs),{inputs:[0]})}}),_w,fw,gw,Zv=Ve(()=>{pt(),Mt(),xt(),_w=(e,r,t,s,i)=>{let n=tt("output_data",i,t.length,4),o=$e("a_data",r[1].dataType,r[1].dims.length,4),a=$e("b_data",r[2].dataType,r[2].dims.length,4),l=$e("c_data",r[0].dataType,r[0].dims.length,4),c,p=(u,h,g)=>`select(${h}, ${u}, ${g})`;if(!s)c=n.setByOffset("global_idx",p(o.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let u=(h,g,f="")=>{let P=`a_data[index_a${g}][component_a${g}]`,A=`b_data[index_b${g}][component_b${g}]`,v=`bool(c_data[index_c${g}] & (0xffu << (component_c${g} * 8)))`;return`
            let output_indices${g} = ${n.offsetToIndices(`global_idx * 4u + ${g}u`)};
            let offset_a${g} = ${o.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let offset_b${g} = ${a.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let offset_c${g} = ${l.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let index_a${g} = offset_a${g} / 4u;
            let index_b${g} = offset_b${g} / 4u;
            let index_c${g} = offset_c${g} / 4u;
            let component_a${g} = offset_a${g} % 4u;
            let component_b${g} = offset_b${g} % 4u;
            let component_c${g} = offset_c${g} % 4u;
            ${h}[${g}] = ${f}(${p(P,A,v)});
          `};i===9?c=`
            var data = vec4<u32>(0);
            ${u("data",0,"u32")}
            ${u("data",1,"u32")}
            ${u("data",2,"u32")}
            ${u("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${u("output_data[global_idx]",0)}
            ${u("output_data[global_idx]",1)}
            ${u("output_data[global_idx]",2)}
            ${u("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,o,a,n)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},fw=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,i=e[1].dataType,n=!(xe.areEqual(r,t)&&xe.areEqual(t,s)),o=r,a=xe.size(r);if(n){let c=Nn.calcShape(Nn.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");o=c,a=xe.size(o)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>_w(c,e,o,n,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...nt(s,r,t,o)]})}},gw=e=>{e.compute(fw(e.inputs))}}),ww,ex=Ve(()=>{hv(),Xd(),mv(),_v(),fv(),gv(),wv(),xv(),Ev(),Pv(),Cv(),Sv(),$v(),kv(),Iv(),Av(),Fv(),Ov(),Dv(),Lv(),zv(),Bv(),Rv(),Nv(),jv(),If(),Vv(),Uv(),Wv(),Gv(),Kv(),Hd(),Hv(),qv(),Qv(),Xv(),Jv(),Bf(),Yv(),Ks(),ec(),Zv(),ww=new Map([["Abs",[Yh]],["Acos",[Zh]],["Acosh",[em]],["Add",[jm]],["ArgMax",[zh,Qd]],["ArgMin",[Lh,Qd]],["Asin",[tm]],["Asinh",[rm]],["Atan",[sm]],["Atanh",[nm]],["Attention",[Uh]],["AveragePool",[hg,pg]],["BatchNormalization",[Hh]],["BiasAdd",[Xh]],["BiasSplitGelu",[Bm]],["Cast",[om,im]],["Ceil",[dm]],["Clip",[lm]],["Concat",[t_,r_]],["Conv",[hc,uc]],["ConvTranspose",[$_,P_]],["Cos",[cm]],["Cosh",[um]],["CumSum",[I_,A_]],["DepthToSpace",[L_,z_]],["DequantizeLinear",[vg,xg]],["Div",[Vm]],["Einsum",[U_,W_]],["Elu",[pm,Oi]],["Equal",[Um]],["Erf",[hm]],["Exp",[mm]],["Expand",[q_]],["FastGelu",[X_]],["Floor",[_m]],["FusedConv",[hc,uc]],["Gather",[ef,Z_]],["GatherElements",[pf,uf]],["GatherBlockQuantized",[af,lf]],["GatherND",[rf,sf]],["Gelu",[fm]],["Gemm",[ff,_f]],["GlobalAveragePool",[_g,mg]],["GlobalMaxPool",[yg,wg]],["Greater",[Hm]],["GreaterOrEqual",[Qm]],["GridSample",[Ef,Pf]],["GroupQueryAttention",[jf]],["HardSigmoid",[Tm,xm]],["InstanceNormalization",[Wf]],["LayerNormalization",[Hf]],["LeakyRelu",[gm,Oi]],["Less",[qm]],["LessOrEqual",[Xm]],["Log",[Am]],["MatMul",[Qf]],["MatMulNBits",[Zf,eg]],["MaxPool",[fg,gg]],["Mul",[Wm]],["MultiHeadAttention",[kf,Sf]],["Neg",[ym]],["Not",[wm]],["Pad",[dg]],["Pow",[Gm]],["QuickGelu",[Dm,Oi]],["Range",[Pg]],["Reciprocal",[Mm]],["ReduceMin",[Ih]],["ReduceMean",[Ph]],["ReduceMax",[kh]],["ReduceSum",[Fh]],["ReduceProd",[Ah]],["ReduceL1",[Ch]],["ReduceL2",[Sh]],["ReduceLogSum",[Dh]],["ReduceLogSumExp",[$h]],["ReduceSumSquare",[Oh]],["Relu",[bm]],["Resize",[Hg,qg]],["RotaryEmbedding",[Jg]],["ScatterND",[kg,$g]],["Sigmoid",[vm]],["Sin",[Em]],["Sinh",[Pm]],["Slice",[iw,ow]],["SkipLayerNormalization",[ew]],["Split",[Lf,zf]],["Sqrt",[Cm]],["Softmax",[dw,cw]],["Sub",[Km]],["Tan",[Sm]],["Tanh",[$m]],["ThresholdedRelu",[Im,Oi]],["Tile",[mw]],["Transpose",[Hp,qp]],["Where",[gw]]])}),yw,tx=Ve(()=>{ss(),Is(),xt(),yw=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,i){rs(e.programInfo.name);let n=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let c of r)a.push({binding:a.length,resource:{buffer:c.buffer}});for(let c of t)a.push({binding:a.length,resource:{buffer:c.buffer}});i&&a.push({binding:a.length,resource:i});let l=n.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}o.setPipeline(e.computePipeline),o.setBindGroup(0,l),o.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Hr(e.programInfo.name)}dispose(){}build(e,r){rs(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let i=jp(r,this.backend.device.limits),n=e.getShaderSource(i),o=`${s.join(`
`)}
${i.additionalImplementations}
${n}`,a=t.createShaderModule({code:o,label:e.name});St("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return Hr(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=i&&t<=i&&s<=i)return[r,t,s];let n=r*t*s,o=Math.ceil(Math.sqrt(n));if(o>i){if(o=Math.ceil(Math.cbrt(n)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),Mw,bw,vw,xw,rx=Ve(()=>{ss(),pt(),Is(),$p(),uv(),ex(),tx(),Mw=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let i=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${i}`);break}case"rank":{let n=e[s].dims.length;t.push(`${i};${n}`);break}case"dims":{let n=e[s].dims.join(",");t.push(`${i};${n}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},bw=(e,r,t)=>{var i,n;let s=e.name;return(i=e.shaderCache)!=null&&i.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${Mw(r,((n=e.shaderCache)==null?void 0:n.inputDependencies)??new Array(r.length).fill("dims"))}`,s},vw=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},xw=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},i=n=>r.features.has(n)&&t.push(n)&&!0;i("chromium-experimental-timestamp-query-inside-passes")||i("timestamp-query"),i("shader-f16"),i("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new vw(r.info||await r.requestAdapterInfo()),this.gpuDataManager=Fp(this),this.programManager=new yw(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,zd(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;rs(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let i=0;i<r.length/2;i++){let n=t[i],o=n.kernelId,a=this.kernels.get(o),l=a.kernelType,c=a.kernelName,p=n.programName,u=n.inputTensorViews,h=n.outputTensorViews,g=r[i*2],f=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=g);let P=Number(g-this.queryTimeBase),A=Number(f-this.queryTimeBase);if(!Number.isSafeInteger(P)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:u.map(v=>({dims:v.dims,dataType:_n(v.dataType)})),outputsMetadata:h.map(v=>({dims:v.dims,dataType:_n(v.dataType)})),kernelId:o,kernelType:l,kernelName:c,programName:p,startTime:P,endTime:A});else{let v="";u.forEach((k,E)=>{v+=`input[${E}]: [${k.dims}] | ${_n(k.dataType)}, `});let y="";h.forEach((k,E)=>{y+=`output[${E}]: [${k.dims}] | ${_n(k.dataType)}, `}),console.log(`[profiling] kernel "${o}|${l}|${c}|${p}" ${v}${y}execution time: ${A-P} ns`)}ki("GPU",`${p}::${g}::${f}`)}e.unmap(),this.pendingQueries.delete(e)}),Hr()}run(e,r,t,s,i,n){rs(e.name);let o=[];for(let y=0;y<r.length;++y){let k=r[y].data;if(k===0)continue;let E=this.gpuDataManager.get(k);if(!E)throw new Error(`no GPU data for input: ${k}`);o.push(E)}let{outputs:a,dispatchGroup:l,programUniforms:c}=e.getRunData(r),p=t.length===0?a.map((y,k)=>k):t;if(p.length!==a.length)throw new Error(`Output size ${p.length} must be equal to ${a.length}.`);let u=[],h=[];for(let y=0;y<a.length;++y){if(!Number.isInteger(p[y])||p[y]<-3||p[y]>=n)throw new Error(`Invalid output index: ${p[y]}`);if(p[y]===-3)continue;let k=p[y]===-1,E=p[y]===-2,M=k||E?i(a[y].dataType,a[y].dims):s(p[y],a[y].dataType,a[y].dims);if(u.push(M),M.data===0)continue;let w=this.gpuDataManager.get(M.data);if(!w)throw new Error(`no GPU data for output: ${M.data}`);if(k&&this.temporaryData.push(w),E){let T=this.kernelPersistentData.get(this.currentKernelId);T||(T=[],this.kernelPersistentData.set(this.currentKernelId,T)),T.push(w)}h.push(w)}if(o.length!==r.length||h.length!==u.length){if(h.length===0)return Hr(e.name),u;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let g;if(c){let y=0,k=[];c.forEach(T=>{let $=typeof T.data=="number"?[T.data]:T.data;if($.length===0)return;let z=T.type===10?2:4,R,Q;T.type===10?(Q=$.length>4?16:$.length>2?8:$.length*z,R=$.length>4?16:z*$.length):(Q=$.length<=2?$.length*z:16,R=16),y=Math.ceil(y/Q)*Q,k.push(y);let q=T.type===10?8:4;y+=$.length>4?Math.ceil($.length/q)*R:$.length*z});let E=16;y=Math.ceil(y/E)*E;let M=new ArrayBuffer(y);c.forEach((T,$)=>{let z=k[$],R=typeof T.data=="number"?[T.data]:T.data;if(T.type===6)new Int32Array(M,z,R.length).set(R);else if(T.type===12)new Uint32Array(M,z,R.length).set(R);else if(T.type===10)new Uint16Array(M,z,R.length).set(R);else if(T.type===1)new Float32Array(M,z,R.length).set(R);else throw new Error(`Unsupported uniform type: ${_n(T.type)}`)});let w=this.gpuDataManager.create(y,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(w.buffer,0,M,0,y),this.gpuDataManager.release(w.id),g={offset:0,size:y,buffer:w.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),P=f[1]===1&&f[2]===1,A=bw(e,r,P),v=this.programManager.getArtifact(A);if(v||(v=this.programManager.build(e,f),this.programManager.setArtifact(A,v),St("info",()=>`[artifact] key: ${A}, programName: ${e.name}`)),c&&v.uniformVariablesInfo){if(c.length!==v.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${v.uniformVariablesInfo.length}, got ${c.length} in program "${v.programInfo.name}".`);for(let y=0;y<c.length;y++){let k=c[y],E=k.type,M=typeof k.data=="number"?1:k.data.length,[w,T]=v.uniformVariablesInfo[y];if(E!==w||M!==T)throw new Error(`Uniform variable ${y} mismatch: expect type ${w} with size ${T}, got type ${E} with size ${M} in program "${v.programInfo.name}".`)}}if(St("info",()=>`[ProgramManager] run "${e.name}" (key=${A}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let y={kernelId:this.currentKernelId,programName:v.programInfo.name,inputTensorViews:r,outputTensorViews:u};this.pendingKernels.push(y),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(y)}return this.programManager.run(v,o,h,f,g),Hr(e.name),u}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let i=ww.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let n={kernelType:e,kernelName:s,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(r,n)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let i=s.kernelType,n=s.kernelName,o=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${n}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),St("info",()=>`[WebGPU] Start to run kernel "[${i}] ${n}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),o(r,a[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${n}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${i}] ${n}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let n=i.get(r),o=this.gpuDataManager.registerExternalBuffer(t,s,n);return i.set(r,[o,t]),o}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Vd(this,e,r);return Bd(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){St("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){St("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){St("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let i=this.getComputePassEncoder(),n=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(n.computePipeline),i.setBindGroup(0,n.bindGroup),i.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Tw,Dc,Ew,Lc,zc,Bc,Pw,Cw,sx=Ve(()=>{Is(),Tw=1,Dc=()=>Tw++,Ew=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Lc=(e,r)=>{let t=Ew.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,i)=>s*i)*t/8):0},zc=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Lc(this.dataType,this.tensorShape)}destroy(){St("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,i)=>s===t[i])}},Bc=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let i=this.tensorManager.getMLContext(e);if(this.wrapper){if(this.wrapper.canReuseTensor(i,r,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==Lc(r,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let n=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,r,t,n,!0,!0),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper)if(e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else St("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},Pw=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=Dc();return this.tensorTrackersById.set(e,new Bc(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,i){St("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${i}}`);let n=this.tensorTrackersById.get(r);if(!n)throw new Error("Tensor not found.");return n.ensureTensor(e,t,s,i)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){St("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r==null?void 0:r.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let i=this.getMLContext(e),n=Dc(),o=new zc({sessionId:e,context:i,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(n,new Bc(this,o)),this.externalTensors.add(o),n}async getCachedTensor(e,r,t,s,i,n){let o=this.getMLContext(e);for(let[l,c]of this.freeTensors.entries())if(c.canReuseTensor(o,r,t)){St("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let p=this.freeTensors.splice(l,1)[0];return p.sessionId=e,p}St("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let a=await o.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:i,readable:n});return new zc({sessionId:e,context:o,tensor:a,dataType:r,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Cw=(...e)=>new Pw(...e)}),Ia,Sw,$w,nx=Ve(()=>{pt(),mn(),$p(),sx(),Is(),Ia=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Sw=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((i,n)=>i===s[n]&&e[i]===r[i])},$w=class{constructor(e){this.tensorManager=Cw(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,zd(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){St("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){St("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)St("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>Sw(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(i=>i.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){St("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,i){let n=Ia.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,n,s,i)}async createTemporaryTensor(e,r,t){St("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=Ia.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let i=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,i,s,t,!1);let n=this.temporarySessionTensorIds.get(e);return n?n.push(i):this.temporarySessionTensorIds.set(e,[i]),i}uploadTensor(e,r){if(!ar().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");St("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return Bd(t,r)}}registerMLTensor(e,r,t,s){let i=Ia.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(e,r,i,s);return St("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${i}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(e,r,t,s,i,n){if(!n)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let a=n.get(o);if(!a)throw new Error(`File with name ${o} not found in preloaded files.`);if(r+t>a.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let l=a.slice(r,r+t).buffer,c;switch(i.dataType){case"float32":c=new Float32Array(l);break;case"float16":c=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(l):new Uint16Array(l);break;case"int32":c=new Int32Array(l);break;case"uint32":c=new Uint32Array(l);break;case"int64":c=new BigInt64Array(l);break;case"uint64":c=new BigUint64Array(l);break;case"int8":c=new Int8Array(l);break;case"int4":case"uint4":case"uint8":c=new Uint8Array(l);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return St("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),s.constant(i,c)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}flush(){}}}),kw={};Ci(kw,{init:()=>Aw});var Aa,Iw,Aw,ix=Ve(()=>{pt(),rx(),Is(),Mt(),nx(),Aa=class Cb{constructor(r,t,s,i){this.module=r,this.dataType=t,this.data=s,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=xe.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=xe.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=xe.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=xe.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(xe.size(r)!==xe.size(this.dims))throw new Error("Invalid new shape");return new Cb(this.module,this.dataType,this.data,r)}},Iw=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,i=t/e.PTR_SIZE,n=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*i++,n));let o=Number(e.getValue(s*i++,n));this.outputCount=Number(e.getValue(s*i++,n)),this.customDataOffset=Number(e.getValue(s*i++,"*")),this.customDataSize=Number(e.getValue(s*i++,n));let a=[];for(let l=0;l<o;l++){let c=Number(e.getValue(s*i++,n)),p=Number(e.getValue(s*i++,"*")),u=Number(e.getValue(s*i++,n)),h=[];for(let g=0;g<u;g++)h.push(Number(e.getValue(s*i++,n)));a.push(new Aa(e,c,p,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){var o;let t=((o=r==null?void 0:r.inputs)==null?void 0:o.map(a=>typeof a=="number"?this.inputs[a]:a))??this.inputs,s=(r==null?void 0:r.outputs)??[],i=(a,l,c)=>new Aa(this.module,l,this.output(a,c),c),n=(a,l)=>{let c=fn(a,l);if(!c)throw new Error(`Unsupported data type: ${a}`);let p=c>0?this.backend.gpuDataManager.create(c).id:0;return new Aa(this.module,a,p,l)};return this.backend.run(e,t,s,i,n,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,i=s===4?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,i);for(let o=0;o<r.length;o++)this.module.setValue(n+s*(o+1),r[o],i);return this.module._JsepOutput(this.opKernelContext,e,n)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},Aw=async(e,r,t,s)=>{let i=r.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let n=new xw;await n.initialize(t,s),i("webgpu",[n,o=>n.alloc(Number(o)),o=>n.free(o),(o,a,l,c=!1)=>{if(c)St("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(o)}, dst=${Number(a)}, size=${Number(l)}`),n.memcpy(Number(o),Number(a));else{St("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(o)}, gpuDataId=${Number(a)}, size=${Number(l)}`);let p=r.HEAPU8.subarray(Number(o>>>0),Number(o>>>0)+Number(l));n.upload(Number(a),p)}},async(o,a,l)=>{St("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${a}, size=${l}`),await n.download(Number(o),()=>r.HEAPU8.subarray(Number(a)>>>0,Number(a+l)>>>0))},(o,a,l)=>n.createKernel(o,Number(a),l,r.UTF8ToString(r._JsepGetNodeName(Number(a)))),o=>n.releaseKernel(o),(o,a,l,c)=>{St("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${l}, kernel=${o}, contextDataOffset=${a}`);let p=new Iw(r,n,Number(a));return n.computeKernel(Number(o),p,c)},()=>n.captureBegin(),()=>n.captureEnd(),()=>n.replay()])}else{let n=new $w(t);i("webnn",[n,()=>n.reserveTensorId(),o=>n.releaseTensorId(o),async(o,a,l,c,p)=>n.ensureTensor(o,a,l,c,p),(o,a)=>{n.uploadTensor(o,a)},async(o,a)=>n.downloadTensor(o,a)])}}}),Fw,Rc,Nc,Hs,Ow,Fa,jc,Vc,Uc,Wc,Gc,Kc,Dw=Ve(()=>{dv(),cv(),pt(),mn(),Id(),xp(),Fw=(e,r)=>{ar()._OrtInit(e,r)!==0&&At("Can't initialize onnxruntime.")},Rc=async e=>{Fw(e.wasm.numThreads,ya(e.logLevel))},Nc=async(e,r)=>{{let t=(ix(),ma(kw)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let n=e.webgpu.forceFallbackAdapter;if(n!==void 0&&typeof n!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${n}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:n}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await t("webgpu",ar(),e,s)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",ar(),e)}}},Hs=new Map,Ow=e=>{let r=ar(),t=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,i,i+s)!==0&&At("Can't get session input/output count.");let n=s===4?"i32":"i64";return[Number(r.getValue(i,n)),Number(r.getValue(i+s,n))]}finally{r.stackRestore(t)}},Fa=e=>{let r=ar(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},jc=async(e,r)=>{var u,h,g;let t,s,i=ar();Array.isArray(e)?[t,s]=e:e.buffer===i.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=Fa(e);let n=0,o=0,a=0,l=[],c=[],p=[];try{if([o,l]=vp(r),(r==null?void 0:r.externalData)&&i.mountExternalData){let M=[];for(let w of r.externalData){let T=typeof w=="string"?w:w.path;M.push(Ld(typeof w=="string"?w:w.data).then($=>{i.mountExternalData(T,$)}))}await Promise.all(M)}for(let M of(r==null?void 0:r.executionProviders)??[])if((typeof M=="string"?M:M.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,typeof M!="string"){let w=M,T=w==null?void 0:w.context,$=w==null?void 0:w.gpuDevice,z=w==null?void 0:w.deviceType,R=w==null?void 0:w.powerPreference;T?i.currentContext=T:$?i.currentContext=await i.jsepCreateMLContext($):i.currentContext=await i.jsepCreateMLContext({deviceType:z,powerPreference:R})}else i.currentContext=await i.jsepCreateMLContext();break}n=await i._OrtCreateSession(t,s,o),n===0&&At("Can't create a session."),(u=i.jsepOnCreateSession)==null||u.call(i),i.currentContext&&(i.jsepRegisterMLContext(n,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[f,P]=Ow(n),A=!!(r!=null&&r.enableGraphCapture),v=[],y=[],k=[];for(let M=0;M<f;M++){let w=i._OrtGetInputName(n,M);w===0&&At("Can't get an input name."),c.push(w),v.push(i.UTF8ToString(w))}for(let M=0;M<P;M++){let w=i._OrtGetOutputName(n,M);w===0&&At("Can't get an output name."),p.push(w);let T=i.UTF8ToString(w);y.push(T);{if(A&&(r==null?void 0:r.preferredOutputLocation)===void 0){k.push("gpu-buffer");continue}let $=typeof(r==null?void 0:r.preferredOutputLocation)=="string"?r.preferredOutputLocation:((h=r==null?void 0:r.preferredOutputLocation)==null?void 0:h[T])??"cpu";if($!=="cpu"&&$!=="cpu-pinned"&&$!=="gpu-buffer"&&$!=="ml-tensor")throw new Error(`Not supported preferred output location: ${$}.`);if(A&&$!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${$}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);k.push($)}}let E=null;return k.some(M=>M==="gpu-buffer"||M==="ml-tensor")&&(a=i._OrtCreateBinding(n),a===0&&At("Can't create IO binding."),E={handle:a,outputPreferredLocations:k,outputPreferredLocationsEncoded:k.map(M=>Dd(M))}),Hs.set(n,[n,c,p,E,A,!1]),[n,v,y]}catch(f){throw c.forEach(P=>i._OrtFree(P)),p.forEach(P=>i._OrtFree(P)),a!==0&&i._OrtReleaseBinding(a)!==0&&At("Can't release IO binding."),n!==0&&i._OrtReleaseSession(n)!==0&&At("Can't release session."),f}finally{i._free(t),o!==0&&i._OrtReleaseSessionOptions(o)!==0&&At("Can't release session options."),l.forEach(f=>i._free(f)),(g=i.unmountExternalData)==null||g.call(i)}},Vc=e=>{var l;let r=ar(),t=Hs.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,i,n,o,a]=t;o&&(a&&r._OrtClearBoundOutputs(o.handle)!==0&&At("Can't clear bound outputs."),r._OrtReleaseBinding(o.handle)!==0&&At("Can't release IO binding.")),(l=r.jsepOnReleaseSession)==null||l.call(r,e),i.forEach(c=>r._OrtFree(c)),n.forEach(c=>r._OrtFree(c)),r._OrtReleaseSession(s)!==0&&At("Can't release session."),Hs.delete(e)},Uc=async(e,r,t,s,i,n=!1)=>{if(!e){r.push(0);return}let o=ar(),a=o.PTR_SIZE,l=e[0],c=e[1],p=e[3],u=p,h,g;if(l==="string"&&(p==="gpu-buffer"||p==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(n&&p!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(p==="gpu-buffer"){let A=e[2].gpuBuffer;g=fn(Rn(l),c);let v=o.jsepRegisterBuffer;if(!v)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');h=v(s,i,A,g)}else if(p==="ml-tensor"){let A=e[2].mlTensor;g=fn(Rn(l),c);let v=o.jsepRegisterMLTensor;if(!v)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');h=v(s,A,Rn(l),c)}else{let A=e[2];if(Array.isArray(A)){g=a*A.length,h=o._malloc(g),t.push(h);for(let v=0;v<A.length;v++){if(typeof A[v]!="string")throw new TypeError(`tensor data at index ${v} is not a string`);o.setValue(h+v*a,Mr(A[v],t),"*")}}else{let v=o.jsepIsGraphInput;if(l!=="string"&&v){let y=o._OrtGetInputName(s,i),k=o.UTF8ToString(y);if(v(s,k)){let E=Rn(l);g=fn(E,c),u="ml-tensor";let M=o.jsepCreateTemporaryTensor,w=o.jsepUploadTensor;if(!M||!w)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let T=await M(s,E,c);w(T,new Uint8Array(A.buffer,A.byteOffset,A.byteLength)),h=T}else g=A.byteLength,h=o._malloc(g),t.push(h),o.HEAPU8.set(new Uint8Array(A.buffer,A.byteOffset,g),h)}else g=A.byteLength,h=o._malloc(g),t.push(h),o.HEAPU8.set(new Uint8Array(A.buffer,A.byteOffset,g),h)}}let f=o.stackSave(),P=o.stackAlloc(4*c.length);try{c.forEach((v,y)=>o.setValue(P+y*a,v,a===4?"i32":"i64"));let A=o._OrtCreateTensor(Rn(l),h,g,P,c.length,Dd(u));A===0&&At(`Can't create tensor for input/output. session=${s}, index=${i}.`),r.push(A)}finally{o.stackRestore(f)}},Wc=async(e,r,t,s,i,n)=>{var Q,q,U;let o=ar(),a=o.PTR_SIZE,l=Hs.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],u=l[2],h=l[3],g=l[4],f=l[5],P=r.length,A=s.length,v=0,y=[],k=[],E=[],M=[],w=o.stackSave(),T=o.stackAlloc(P*a),$=o.stackAlloc(P*a),z=o.stackAlloc(A*a),R=o.stackAlloc(A*a);try{[v,y]=gp(n);for(let J=0;J<P;J++)await Uc(t[J],k,M,e,r[J],g);for(let J=0;J<A;J++)await Uc(i[J],E,M,e,P+s[J],g);for(let J=0;J<P;J++)o.setValue(T+J*a,k[J],"*"),o.setValue($+J*a,p[r[J]],"*");for(let J=0;J<A;J++)o.setValue(z+J*a,E[J],"*"),o.setValue(R+J*a,u[s[J]],"*");if(h&&!f){let{handle:J,outputPreferredLocations:ie,outputPreferredLocationsEncoded:ae}=h;if(p.length!==P)throw new Error(`input count from feeds (${P}) is expected to be always equal to model's input count (${p.length}).`);for(let ce=0;ce<P;ce++){let he=r[ce];await o._OrtBindInput(J,p[he],k[ce])!==0&&At(`Can't bind input[${ce}] for session=${e}.`)}for(let ce=0;ce<A;ce++){let he=s[ce];(Q=i[ce])!=null&&Q[3]?o._OrtBindOutput(J,u[he],E[ce],0)!==0&&At(`Can't bind pre-allocated output[${ce}] for session=${e}.`):o._OrtBindOutput(J,u[he],0,ae[he])!==0&&At(`Can't bind output[${ce}] to ${ie[ce]} for session=${e}.`)}Hs.set(e,[c,p,u,h,g,!0])}(q=o.jsepOnRunStart)==null||q.call(o,c);let Z;h?Z=await o._OrtRunWithBinding(c,h.handle,A,z,v):Z=await o._OrtRun(c,$,T,P,R,A,z,v),Z!==0&&At("failed to call OrtRun().");let H=[];for(let J=0;J<A;J++){let ie=Number(o.getValue(z+J*a,"*"));if(ie===E[J]){H.push(i[J]);continue}let ae=o.stackSave(),ce=o.stackAlloc(4*a),he=!1,N,O=0;try{o._OrtGetTensorData(ie,ce,ce+a,ce+2*a,ce+3*a)!==0&&At(`Can't access output tensor data on index ${J}.`);let G=a===4?"i32":"i64",se=Number(o.getValue(ce,G));O=o.getValue(ce+a,"*");let X=o.getValue(ce+a*2,"*"),we=Number(o.getValue(ce+a*3,G)),fe=[];for(let Me=0;Me<we;Me++)fe.push(Number(o.getValue(X+Me*a,G)));o._OrtFree(X)!==0&&At("Can't free memory for tensor dims.");let ke=fe.reduce((Me,K)=>Me*K,1);N=_n(se);let He=h==null?void 0:h.outputPreferredLocations[s[J]];if(N==="string"){if(He==="gpu-buffer"||He==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Me=[];for(let K=0;K<ke;K++){let j=o.getValue(O+K*a,"*"),me=o.getValue(O+(K+1)*a,"*"),Pe=K===ke-1?void 0:me-j;Me.push(o.UTF8ToString(j,Pe))}H.push([N,fe,Me,"cpu"])}else if(He==="gpu-buffer"&&ke>0){let Me=o.jsepGetBuffer;if(!Me)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let K=Me(O),j=fn(se,ke);if(j===void 0||!Fd(N))throw new Error(`Unsupported data type: ${N}`);he=!0,H.push([N,fe,{gpuBuffer:K,download:o.jsepCreateDownloader(K,j,N),dispose:()=>{o._OrtReleaseTensor(ie)!==0&&At("Can't release tensor.")}},"gpu-buffer"])}else if(He==="ml-tensor"&&ke>0){let Me=o.jsepEnsureTensor;if(!Me)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(fn(se,ke)===void 0||!Od(N))throw new Error(`Unsupported data type: ${N}`);let K=await Me(e,O,se,fe,!1);he=!0,H.push([N,fe,{mlTensor:K,download:o.jsepCreateMLTensorDownloader(O,N),dispose:()=>{o.jsepReleaseTensorId(O),o._OrtReleaseTensor(ie)}},"ml-tensor"])}else{let Me=Ad(N),K=new Me(ke);new Uint8Array(K.buffer,K.byteOffset,K.byteLength).set(o.HEAPU8.subarray(O,O+K.byteLength)),H.push([N,fe,K,"cpu"])}}finally{o.stackRestore(ae),N==="string"&&O&&o._free(O),he||o._OrtReleaseTensor(ie),(U=o.jsepOnRunEnd)==null||U.call(o,c)}}return h&&!g&&(o._OrtClearBoundOutputs(h.handle)!==0&&At("Can't clear bound outputs."),Hs.set(e,[c,p,u,h,g,!1])),H}finally{o.stackRestore(w),k.forEach(Z=>o._OrtReleaseTensor(Z)),E.forEach(Z=>o._OrtReleaseTensor(Z)),M.forEach(Z=>o._free(Z)),v!==0&&o._OrtReleaseRunOptions(v),y.forEach(Z=>o._free(Z))}},Gc=e=>{let r=ar(),t=Hs.get(e);if(!t)throw new Error("invalid session id");let s=t[0],i=r._OrtEndProfiling(s);i===0&&At("Can't get an profile file name."),r._OrtFree(i)},Kc=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),qs,Or,Un,ji,Vi,Oa,Hc,Da,xn,Tn,Lw,zw,Bw,Rw,Nw,jw,Vw,Uw,Ww=Ve(()=>{ss(),Dw(),mn(),Cd(),qs=()=>!!Ut.wasm.proxy&&typeof document<"u",Un=!1,ji=!1,Vi=!1,Da=new Map,xn=(e,r)=>{let t=Da.get(e);t?t.push(r):Da.set(e,[r])},Tn=()=>{if(Un||!ji||Vi||!Or)throw new Error("worker not ready")},Lw=e=>{switch(e.data.type){case"init-wasm":Un=!1,e.data.err?(Vi=!0,Hc[1](e.data.err)):(ji=!0,Hc[0]()),Oa&&(URL.revokeObjectURL(Oa),Oa=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=Da.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},zw=async()=>{if(!ji){if(Un)throw new Error("multiple calls to 'initWasm()' detected.");if(Vi)throw new Error("previous call to 'initWasm()' failed.");if(Un=!0,qs())return new Promise((e,r)=>{Or==null||Or.terminate(),hp().then(([t,s])=>{try{Or=s,Or.onerror=n=>r(n),Or.onmessage=Lw,Hc=[e,r];let i={type:"init-wasm",in:Ut};!i.in.wasm.wasmPaths&&(t||xd)&&(i.in.wasm.wasmPaths={wasm:new URL("/SMART-demo/assets/ort-wasm-simd-threaded.jsep-QEfO5mwy.wasm",self.location.href).href}),Or.postMessage(i),Oa=t}catch(i){r(i)}},r)});try{await kd(Ut.wasm),await Rc(Ut),ji=!0}catch(e){throw Vi=!0,e}finally{Un=!1}}},Bw=async e=>{if(qs())return Tn(),new Promise((r,t)=>{xn("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:Ut}};Or.postMessage(s)});await Nc(Ut,e)},Rw=async e=>qs()?(Tn(),new Promise((r,t)=>{xn("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};Or.postMessage(s,[e.buffer])})):Fa(e),Nw=async(e,r)=>{if(qs()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Tn(),new Promise((t,s)=>{xn("create",[t,s]);let i={type:"create",in:{model:e,options:{...r}}},n=[];e instanceof Uint8Array&&n.push(e.buffer),Or.postMessage(i,n)})}else return jc(e,r)},jw=async e=>{if(qs())return Tn(),new Promise((r,t)=>{xn("release",[r,t]);let s={type:"release",in:e};Or.postMessage(s)});Vc(e)},Vw=async(e,r,t,s,i,n)=>{if(qs()){if(t.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return Tn(),new Promise((o,a)=>{xn("run",[o,a]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:n}};Or.postMessage(c,Kc(l))})}else return Wc(e,r,t,s,i,n)},Uw=async e=>{if(qs())return Tn(),new Promise((r,t)=>{xn("end-profiling",[r,t]);let s={type:"end-profiling",in:e};Or.postMessage(s)});Gc(e)}}),qc,Gw,Kw,ox=Ve(()=>{ss(),Ww(),pt(),gd(),xp(),qc=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},Gw=e=>{switch(e[3]){case"cpu":return new ts(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!Fd(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:i}=e[2];return ts.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:i})}case"ml-tensor":{let r=e[0];if(!Od(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:i}=e[2];return ts.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Kw=class{async fetchModelAndCopyToWasmMemory(e){return Rw(await Ld(e))}async loadModel(e,r){rs();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await Nw(t,r),Hr()}async dispose(){return jw(this.sessionId)}async run(e,r,t){rs();let s=[],i=[];Object.entries(e).forEach(u=>{let h=u[0],g=u[1],f=this.inputNames.indexOf(h);if(f===-1)throw new Error(`invalid input '${h}'`);s.push(g),i.push(f)});let n=[],o=[];Object.entries(r).forEach(u=>{let h=u[0],g=u[1],f=this.outputNames.indexOf(h);if(f===-1)throw new Error(`invalid output '${h}'`);n.push(g),o.push(f)});let a=s.map((u,h)=>qc(u,()=>`input "${this.inputNames[i[h]]}"`)),l=n.map((u,h)=>u?qc(u,()=>`output "${this.outputNames[o[h]]}"`):null),c=await Vw(this.sessionId,i,a,o,l,t),p={};for(let u=0;u<c.length;u++)p[this.outputNames[o[u]]]=n[u]??Gw(c[u]);return Hr(),p}startProfiling(){}endProfiling(){Uw(this.sessionId)}}}),Hw={};Ci(Hw,{OnnxruntimeWebAssemblyBackend:()=>Xc,initializeFlags:()=>Qc,wasmBackend:()=>qw});var Qc,Xc,qw,ax=Ve(()=>{ss(),Ww(),ox(),Qc=()=>{if((typeof Ut.wasm.initTimeout!="number"||Ut.wasm.initTimeout<0)&&(Ut.wasm.initTimeout=0),Ut.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof Ut.wasm.proxy!="boolean"&&(Ut.wasm.proxy=!1),typeof Ut.wasm.trace!="boolean"&&(Ut.wasm.trace=!1),typeof Ut.wasm.numThreads!="number"||!Number.isInteger(Ut.wasm.numThreads)||Ut.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)Ut.wasm.numThreads=1;else{let e=typeof navigator>"u"?Kb("node:os").cpus().length:navigator.hardwareConcurrency;Ut.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Xc=class{async init(e){Qc(),await zw(),await Bw(e)}async createInferenceSessionHandler(e,r){let t=new Kw;return await t.loadModel(e,r),Promise.resolve(t)}},qw=new Xc});ss(),ss(),ss();var lx="1.22.0-dev.20250306-ccf8fdd9ea",dx=rp;{let e=(ax(),ma(Hw)).wasmBackend;pn("webgpu",e,5),pn("webnn",e,5),pn("cpu",e,10),pn("wasm",e,10)}Object.defineProperty(Ut.versions,"web",{value:lx,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cx=Object.freeze({__proto__:null,get InferenceSession(){return fd},get TRACE(){return ki},get TRACE_FUNC_BEGIN(){return rs},get TRACE_FUNC_END(){return Hr},get Tensor(){return ts},default:dx,get env(){return Ut},get registerBackend(){return pn}}),Fs={},ux={"onnxruntime-common":e=>{e.exports=Vb},"onnxruntime-web":e=>{e.exports=cx},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>Ae,Interpreter:()=>Ie,Template:()=>We,parse:()=>N,tokenize:()=>u});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),i=Object.freeze({set:s.Set,for:s.For,in:s.In,is:s.Is,if:s.If,else:s.Else,endif:s.EndIf,elif:s.ElseIf,endfor:s.EndFor,and:s.And,or:s.Or,not:s.Not,"not in":s.NotIn,macro:s.Macro,endmacro:s.EndMacro,true:s.BooleanLiteral,false:s.BooleanLiteral,none:s.NullLiteral,True:s.BooleanLiteral,False:s.BooleanLiteral,None:s.NullLiteral}),n=class{constructor(D,ee){this.value=D,this.type=ee}};function o(D){return/\w/.test(D)}function a(D){return/[0-9]/.test(D)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],c=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function p(D,ee={}){return D.endsWith(`
`)&&(D=D.slice(0,-1)),D=D.replace(/{#.*?#}/gs,"{##}"),ee.lstrip_blocks&&(D=D.replace(/^[ \t]*({[#%])/gm,"$1")),ee.trim_blocks&&(D=D.replace(/([#%]})\n/g,"$1")),D.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function u(D,ee={}){var ve,Re,Fe;const B=[],te=p(D,ee);let de=0;const be=je=>{let qe="";for(;je(te[de]);){if(te[de]==="\\"){if(++de,de>=te.length)throw new SyntaxError("Unexpected end of input");const Xe=te[de++],ut=c.get(Xe);if(ut===void 0)throw new SyntaxError(`Unexpected escaped character: ${Xe}`);qe+=ut;continue}if(qe+=te[de++],de>=te.length)throw new SyntaxError("Unexpected end of input")}return qe};e:for(;de<te.length;){const je=(ve=B.at(-1))==null?void 0:ve.type;if(je===void 0||je===s.CloseStatement||je===s.CloseExpression){let Xe="";for(;de<te.length&&!(te[de]==="{"&&(te[de+1]==="%"||te[de+1]==="{"));)Xe+=te[de++];if(Xe.length>0){B.push(new n(Xe,s.Text));continue}}be(Xe=>/\s/.test(Xe));const qe=te[de];if(qe==="-"||qe==="+"){const Xe=(Re=B.at(-1))==null?void 0:Re.type;if(Xe===s.Text||Xe===void 0)throw new SyntaxError(`Unexpected character: ${qe}`);switch(Xe){case s.Identifier:case s.NumericLiteral:case s.BooleanLiteral:case s.NullLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++de;const ut=be(a);B.push(new n(`${qe}${ut}`,ut.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[Xe,ut]of l)if(te.slice(de,de+Xe.length)===Xe){B.push(new n(Xe,ut)),de+=Xe.length;continue e}if(qe==="'"||qe==='"'){++de;const Xe=be(ut=>ut!==qe);B.push(new n(Xe,s.StringLiteral)),++de;continue}if(a(qe)){const Xe=be(a);B.push(new n(Xe,s.NumericLiteral));continue}if(o(qe)){const Xe=be(o),ut=Object.hasOwn(i,Xe)?i[Xe]:s.Identifier;ut===s.In&&((Fe=B.at(-1))==null?void 0:Fe.type)===s.Not?(B.pop(),B.push(new n("not in",s.NotIn))):B.push(new n(Xe,ut));continue}throw new SyntaxError(`Unexpected character: ${qe}`)}return B}var h=class{constructor(){re(this,"type","Statement")}},g=class extends h{constructor(ee){super();re(this,"type","Program");this.body=ee}},f=class extends h{constructor(ee,B,te){super();re(this,"type","If");this.test=ee,this.body=B,this.alternate=te}},P=class extends h{constructor(ee,B,te,de){super();re(this,"type","For");this.loopvar=ee,this.iterable=B,this.body=te,this.defaultBlock=de}},A=class extends h{constructor(ee,B){super();re(this,"type","Set");this.assignee=ee,this.value=B}},v=class extends h{constructor(ee,B,te){super();re(this,"type","Macro");this.name=ee,this.args=B,this.body=te}},y=class extends h{constructor(){super(...arguments);re(this,"type","Expression")}},k=class extends y{constructor(ee,B,te){super();re(this,"type","MemberExpression");this.object=ee,this.property=B,this.computed=te}},E=class extends y{constructor(ee,B){super();re(this,"type","CallExpression");this.callee=ee,this.args=B}},M=class extends y{constructor(ee){super();re(this,"type","Identifier");this.value=ee}},w=class extends y{constructor(ee){super();re(this,"type","Literal");this.value=ee}},T=class extends w{constructor(){super(...arguments);re(this,"type","NumericLiteral")}},$=class extends w{constructor(){super(...arguments);re(this,"type","StringLiteral")}},z=class extends w{constructor(){super(...arguments);re(this,"type","BooleanLiteral")}},R=class extends w{constructor(){super(...arguments);re(this,"type","NullLiteral")}},Q=class extends w{constructor(){super(...arguments);re(this,"type","ArrayLiteral")}},q=class extends w{constructor(){super(...arguments);re(this,"type","TupleLiteral")}},U=class extends w{constructor(){super(...arguments);re(this,"type","ObjectLiteral")}},Z=class extends y{constructor(ee,B,te){super();re(this,"type","BinaryExpression");this.operator=ee,this.left=B,this.right=te}},H=class extends y{constructor(ee,B){super();re(this,"type","FilterExpression");this.operand=ee,this.filter=B}},J=class extends y{constructor(ee,B){super();re(this,"type","SelectExpression");this.iterable=ee,this.test=B}},ie=class extends y{constructor(ee,B,te){super();re(this,"type","TestExpression");this.operand=ee,this.negate=B,this.test=te}},ae=class extends y{constructor(ee,B){super();re(this,"type","UnaryExpression");this.operator=ee,this.argument=B}},ce=class extends y{constructor(ee=void 0,B=void 0,te=void 0){super();re(this,"type","SliceExpression");this.start=ee,this.stop=B,this.step=te}},he=class extends y{constructor(ee,B){super();re(this,"type","KeywordArgumentExpression");this.key=ee,this.value=B}};function N(D){const ee=new g([]);let B=0;function te(Be,et){const it=D[B++];if(!it||it.type!==Be)throw new Error(`Parser Error: ${et}. ${it.type} !== ${Be}.`);return it}function de(){switch(D[B].type){case s.Text:return Re();case s.OpenStatement:return Fe();case s.OpenExpression:return je();default:throw new SyntaxError(`Unexpected token type: ${D[B].type}`)}}function be(...Be){return B+Be.length<=D.length&&Be.some((et,it)=>et!==D[B+it].type)}function ve(...Be){return B+Be.length<=D.length&&Be.every((et,it)=>et===D[B+it].type)}function Re(){return new $(te(s.Text,"Expected text token").value)}function Fe(){te(s.OpenStatement,"Expected opening statement token");let Be;switch(D[B].type){case s.Set:++B,Be=qe(),te(s.CloseStatement,"Expected closing statement token");break;case s.If:++B,Be=Xe(),te(s.OpenStatement,"Expected {% token"),te(s.EndIf,"Expected endif token"),te(s.CloseStatement,"Expected %} token");break;case s.Macro:++B,Be=ut(),te(s.OpenStatement,"Expected {% token"),te(s.EndMacro,"Expected endmacro token"),te(s.CloseStatement,"Expected %} token");break;case s.For:++B,Be=nr(),te(s.OpenStatement,"Expected {% token"),te(s.EndFor,"Expected endfor token"),te(s.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${D[B].type}`)}return Be}function je(){te(s.OpenExpression,"Expected opening expression token");const Be=jt();return te(s.CloseExpression,"Expected closing expression token"),Be}function qe(){const Be=jt();if(ve(s.Equals)){++B;const et=qe();return new A(Be,et)}return Be}function Xe(){var rr,zt,kr,ps,hs,Er,ms,_s;const Be=jt();te(s.CloseStatement,"Expected closing statement token");const et=[],it=[];for(;!(((rr=D[B])==null?void 0:rr.type)===s.OpenStatement&&(((zt=D[B+1])==null?void 0:zt.type)===s.ElseIf||((kr=D[B+1])==null?void 0:kr.type)===s.Else||((ps=D[B+1])==null?void 0:ps.type)===s.EndIf));)et.push(de());if(((hs=D[B])==null?void 0:hs.type)===s.OpenStatement&&((Er=D[B+1])==null?void 0:Er.type)!==s.EndIf)if(++B,ve(s.ElseIf))te(s.ElseIf,"Expected elseif token"),it.push(Xe());else for(te(s.Else,"Expected else token"),te(s.CloseStatement,"Expected closing statement token");!(((ms=D[B])==null?void 0:ms.type)===s.OpenStatement&&((_s=D[B+1])==null?void 0:_s.type)===s.EndIf);)it.push(de());return new f(Be,et,it)}function ut(){const Be=mr();if(Be.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const et=qr();te(s.CloseStatement,"Expected closing statement token");const it=[];for(;be(s.OpenStatement,s.EndMacro);)it.push(de());return new v(Be,et,it)}function wt(Be=!1){const et=Be?mr:jt,it=[et()],rr=ve(s.Comma);for(;rr&&(++B,it.push(et()),!!ve(s.Comma)););return rr?new q(it):it[0]}function nr(){const Be=wt(!0);if(!(Be instanceof M||Be instanceof q))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Be.type} instead`);te(s.In,"Expected `in` keyword following loop variable");const et=jt();te(s.CloseStatement,"Expected closing statement token");const it=[];for(;be(s.OpenStatement,s.EndFor)&&be(s.OpenStatement,s.Else);)it.push(de());const rr=[];if(ve(s.OpenStatement,s.Else))for(++B,++B,te(s.CloseStatement,"Expected closing statement token");be(s.OpenStatement,s.EndFor);)rr.push(de());return new P(Be,et,it,rr)}function jt(){return dr()}function dr(){const Be=ds();if(ve(s.If)){++B;const et=ds();if(ve(s.Else)){++B;const it=ds();return new f(et,[Be],[it])}else return new J(Be,et)}return Be}function ds(){let Be=Os();for(;ve(s.Or);){const et=D[B];++B;const it=Os();Be=new Z(et,Be,it)}return Be}function Os(){let Be=Dr();for(;ve(s.And);){const et=D[B];++B;const it=Dr();Be=new Z(et,Be,it)}return Be}function Dr(){let Be;for(;ve(s.Not);){const et=D[B];++B;const it=Dr();Be=new ae(et,it)}return Be??cs()}function cs(){let Be=Ds();for(;ve(s.ComparisonBinaryOperator)||ve(s.In)||ve(s.NotIn);){const et=D[B];++B;const it=Ds();Be=new Z(et,Be,it)}return Be}function Ds(){let Be=Ts();for(;ve(s.AdditiveBinaryOperator);){const et=D[B];++B;const it=Ts();Be=new Z(et,Be,it)}return Be}function jr(){const Be=xs(mr());return ve(s.OpenParen)?dt(Be):Be}function dt(Be){let et=new E(Be,qr());return et=xs(et),ve(s.OpenParen)&&(et=dt(et)),et}function qr(){te(s.OpenParen,"Expected opening parenthesis for arguments list");const Be=Vr();return te(s.CloseParen,"Expected closing parenthesis for arguments list"),Be}function Vr(){const Be=[];for(;!ve(s.CloseParen);){let et=jt();if(ve(s.Equals)){if(++B,!(et instanceof M))throw new SyntaxError("Expected identifier for keyword argument");const it=jt();et=new he(et,it)}Be.push(et),ve(s.Comma)&&++B}return Be}function us(){const Be=[];let et=!1;for(;!ve(s.CloseSquareBracket);)ve(s.Colon)?(Be.push(void 0),++B,et=!0):(Be.push(jt()),ve(s.Colon)&&(++B,et=!0));if(Be.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(et){if(Be.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new ce(...Be)}return Be[0]}function xs(Be){for(;ve(s.Dot)||ve(s.OpenSquareBracket);){const et=D[B];++B;let it;const rr=et.type!==s.Dot;if(rr)it=us(),te(s.CloseSquareBracket,"Expected closing square bracket");else if(it=mr(),it.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Be=new k(Be,it,rr)}return Be}function Ts(){let Be=Es();for(;ve(s.MultiplicativeBinaryOperator);){const et=D[B];++B;const it=Es();Be=new Z(et,Be,it)}return Be}function Es(){let Be=Ls();for(;ve(s.Is);){++B;const et=ve(s.Not);et&&++B;let it=mr();if(it instanceof z?it=new M(it.value.toString()):it instanceof R&&(it=new M("none")),!(it instanceof M))throw new SyntaxError("Expected identifier for the test");Be=new ie(Be,et,it)}return Be}function Ls(){let Be=jr();for(;ve(s.Pipe);){++B;let et=mr();if(!(et instanceof M))throw new SyntaxError("Expected identifier for the filter");ve(s.OpenParen)&&(et=dt(et)),Be=new H(Be,et)}return Be}function mr(){const Be=D[B];switch(Be.type){case s.NumericLiteral:return++B,new T(Number(Be.value));case s.StringLiteral:return++B,new $(Be.value);case s.BooleanLiteral:return++B,new z(Be.value.toLowerCase()==="true");case s.NullLiteral:return++B,new R(null);case s.Identifier:return++B,new M(Be.value);case s.OpenParen:{++B;const et=wt();if(D[B].type!==s.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${D[B].type} instead`);return++B,et}case s.OpenSquareBracket:{++B;const et=[];for(;!ve(s.CloseSquareBracket);)et.push(jt()),ve(s.Comma)&&++B;return++B,new Q(et)}case s.OpenCurlyBracket:{++B;const et=new Map;for(;!ve(s.CloseCurlyBracket);){const it=jt();te(s.Colon,"Expected colon between key and value in object literal");const rr=jt();et.set(it,rr),ve(s.Comma)&&++B}return++B,new U(et)}default:throw new SyntaxError(`Unexpected token: ${Be.type}`)}}for(;B<D.length;)ee.body.push(de());return ee}function O(D,ee,B=1){ee===void 0&&(ee=D,D=0);const te=[];for(let de=D;de<ee;de+=B)te.push(de);return te}function G(D,ee,B,te=1){const de=Math.sign(te);de>=0?(ee=(ee??(ee=0))<0?Math.max(D.length+ee,0):Math.min(ee,D.length),B=(B??(B=D.length))<0?Math.max(D.length+B,0):Math.min(B,D.length)):(ee=(ee??(ee=D.length-1))<0?Math.max(D.length+ee,-1):Math.min(ee,D.length-1),B=(B??(B=-1))<-1?Math.max(D.length+B,-1):Math.min(B,D.length-1));const be=[];for(let ve=ee;de*ve<de*B;ve+=te)be.push(D[ve]);return be}function se(D){return D.replace(/\b\w/g,ee=>ee.toUpperCase())}var X=class{constructor(D=void 0){re(this,"type","RuntimeValue");re(this,"value");re(this,"builtins",new Map);this.value=D}__bool__(){return new ke(!!this.value)}},we=class extends X{constructor(){super(...arguments);re(this,"type","NumericValue")}},fe=class extends X{constructor(){super(...arguments);re(this,"type","StringValue");re(this,"builtins",new Map([["upper",new me(()=>new fe(this.value.toUpperCase()))],["lower",new me(()=>new fe(this.value.toLowerCase()))],["strip",new me(()=>new fe(this.value.trim()))],["title",new me(()=>new fe(se(this.value)))],["length",new we(this.value.length)],["rstrip",new me(()=>new fe(this.value.trimEnd()))],["lstrip",new me(()=>new fe(this.value.trimStart()))],["split",new me(ee=>{const B=ee[0]??new Pe;if(!(B instanceof fe||B instanceof Pe))throw new Error("sep argument must be a string or null");const te=ee[1]??new we(-1);if(!(te instanceof we))throw new Error("maxsplit argument must be a number");let de=[];if(B instanceof Pe){const be=this.value.trimStart();for(const{0:ve,index:Re}of be.matchAll(/\S+/g)){if(te.value!==-1&&de.length>=te.value&&Re!==void 0){de.push(ve+be.slice(Re+ve.length));break}de.push(ve)}}else{if(B.value==="")throw new Error("empty separator");de=this.value.split(B.value),te.value!==-1&&de.length>te.value&&de.push(de.splice(te.value).join(B.value))}return new K(de.map(be=>new fe(be)))})]]))}},ke=class extends X{constructor(){super(...arguments);re(this,"type","BooleanValue")}},He=class extends X{constructor(){super(...arguments);re(this,"type","ObjectValue");re(this,"builtins",new Map([["get",new me(([ee,B])=>{if(!(ee instanceof fe))throw new Error(`Object key must be a string: got ${ee.type}`);return this.value.get(ee.value)??B??new Pe})],["items",new me(()=>new K(Array.from(this.value.entries()).map(([ee,B])=>new K([new fe(ee),B]))))]]))}__bool__(){return new ke(this.value.size>0)}},Me=class extends He{constructor(){super(...arguments);re(this,"type","KeywordArgumentsValue")}},K=class extends X{constructor(){super(...arguments);re(this,"type","ArrayValue");re(this,"builtins",new Map([["length",new we(this.value.length)]]))}__bool__(){return new ke(this.value.length>0)}},j=class extends K{constructor(){super(...arguments);re(this,"type","TupleValue")}},me=class extends X{constructor(){super(...arguments);re(this,"type","FunctionValue")}},Pe=class extends X{constructor(){super(...arguments);re(this,"type","NullValue")}},Te=class extends X{constructor(){super(...arguments);re(this,"type","UndefinedValue")}},Ae=class{constructor(D){re(this,"variables",new Map([["namespace",new me(D=>{if(D.length===0)return new He(new Map);if(D.length!==1||!(D[0]instanceof He))throw new Error("`namespace` expects either zero arguments or a single object argument");return D[0]})]]));re(this,"tests",new Map([["boolean",D=>D.type==="BooleanValue"],["callable",D=>D instanceof me],["odd",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${D.type}`);return D.value%2!==0}],["even",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${D.type}`);return D.value%2===0}],["false",D=>D.type==="BooleanValue"&&!D.value],["true",D=>D.type==="BooleanValue"&&D.value],["none",D=>D.type==="NullValue"],["string",D=>D.type==="StringValue"],["number",D=>D.type==="NumericValue"],["integer",D=>D.type==="NumericValue"&&Number.isInteger(D.value)],["iterable",D=>D.type==="ArrayValue"||D.type==="StringValue"],["mapping",D=>D.type==="ObjectValue"],["lower",D=>{const ee=D.value;return D.type==="StringValue"&&ee===ee.toLowerCase()}],["upper",D=>{const ee=D.value;return D.type==="StringValue"&&ee===ee.toUpperCase()}],["none",D=>D.type==="NullValue"],["defined",D=>D.type!=="UndefinedValue"],["undefined",D=>D.type==="UndefinedValue"],["equalto",(D,ee)=>D.value===ee.value],["eq",(D,ee)=>D.value===ee.value]]));this.parent=D}set(D,ee){return this.declareVariable(D,Le(ee))}declareVariable(D,ee){if(this.variables.has(D))throw new SyntaxError(`Variable already declared: ${D}`);return this.variables.set(D,ee),ee}setVariable(D,ee){return this.variables.set(D,ee),ee}resolve(D){if(this.variables.has(D))return this;if(this.parent)return this.parent.resolve(D);throw new Error(`Unknown variable: ${D}`)}lookupVariable(D){try{return this.resolve(D).variables.get(D)??new Te}catch{return new Te}}},Ie=class{constructor(D){re(this,"global");this.global=D??new Ae}run(D){return this.evaluate(D,this.global)}evaluateBinaryExpression(D,ee){const B=this.evaluate(D.left,ee);switch(D.operator.value){case"and":return B.__bool__().value?this.evaluate(D.right,ee):B;case"or":return B.__bool__().value?B:this.evaluate(D.right,ee)}const te=this.evaluate(D.right,ee);switch(D.operator.value){case"==":return new ke(B.value==te.value);case"!=":return new ke(B.value!=te.value)}if(B instanceof Te||te instanceof Te)throw new Error("Cannot perform operation on undefined values");if(B instanceof Pe||te instanceof Pe)throw new Error("Cannot perform operation on null values");if(B instanceof we&&te instanceof we)switch(D.operator.value){case"+":return new we(B.value+te.value);case"-":return new we(B.value-te.value);case"*":return new we(B.value*te.value);case"/":return new we(B.value/te.value);case"%":return new we(B.value%te.value);case"<":return new ke(B.value<te.value);case">":return new ke(B.value>te.value);case">=":return new ke(B.value>=te.value);case"<=":return new ke(B.value<=te.value)}else if(B instanceof K&&te instanceof K)switch(D.operator.value){case"+":return new K(B.value.concat(te.value))}else if(te instanceof K){const de=te.value.find(be=>be.value===B.value)!==void 0;switch(D.operator.value){case"in":return new ke(de);case"not in":return new ke(!de)}}if(B instanceof fe||te instanceof fe)switch(D.operator.value){case"+":return new fe(B.value.toString()+te.value.toString())}if(B instanceof fe&&te instanceof fe)switch(D.operator.value){case"in":return new ke(te.value.includes(B.value));case"not in":return new ke(!te.value.includes(B.value))}if(B instanceof fe&&te instanceof He)switch(D.operator.value){case"in":return new ke(te.value.has(B.value));case"not in":return new ke(!te.value.has(B.value))}throw new SyntaxError(`Unknown operator "${D.operator.value}" between ${B.type} and ${te.type}`)}evaluateArguments(D,ee){const B=[],te=new Map;for(const de of D)if(de.type==="KeywordArgumentExpression"){const be=de;te.set(be.key.value,this.evaluate(be.value,ee))}else{if(te.size>0)throw new Error("Positional arguments must come before keyword arguments");B.push(this.evaluate(de,ee))}return[B,te]}evaluateFilterExpression(D,ee){const B=this.evaluate(D.operand,ee);if(D.filter.type==="Identifier"){const te=D.filter;if(te.value==="tojson")return new fe(Ne(B));if(B instanceof K)switch(te.value){case"list":return B;case"first":return B.value[0];case"last":return B.value[B.value.length-1];case"length":return new we(B.value.length);case"reverse":return new K(B.value.reverse());case"sort":return new K(B.value.sort((de,be)=>{if(de.type!==be.type)throw new Error(`Cannot compare different types: ${de.type} and ${be.type}`);switch(de.type){case"NumericValue":return de.value-be.value;case"StringValue":return de.value.localeCompare(be.value);default:throw new Error(`Cannot compare type: ${de.type}`)}}));case"join":return new fe(B.value.map(de=>de.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${te.value}`)}else if(B instanceof fe)switch(te.value){case"length":return new we(B.value.length);case"upper":return new fe(B.value.toUpperCase());case"lower":return new fe(B.value.toLowerCase());case"title":return new fe(se(B.value));case"capitalize":return new fe(B.value.charAt(0).toUpperCase()+B.value.slice(1));case"trim":return new fe(B.value.trim());case"indent":return new fe(B.value.split(`
`).map((de,be)=>be===0||de.length===0?de:"    "+de).join(`
`));case"join":case"string":return B;default:throw new Error(`Unknown StringValue filter: ${te.value}`)}else if(B instanceof we)switch(te.value){case"abs":return new we(Math.abs(B.value));default:throw new Error(`Unknown NumericValue filter: ${te.value}`)}else if(B instanceof He)switch(te.value){case"items":return new K(Array.from(B.value.entries()).map(([de,be])=>new K([new fe(de),be])));case"length":return new we(B.value.size);default:throw new Error(`Unknown ObjectValue filter: ${te.value}`)}throw new Error(`Cannot apply filter "${te.value}" to type: ${B.type}`)}else if(D.filter.type==="CallExpression"){const te=D.filter;if(te.callee.type!=="Identifier")throw new Error(`Unknown filter: ${te.callee.type}`);const de=te.callee.value;if(de==="tojson"){const[,be]=this.evaluateArguments(te.args,ee),ve=be.get("indent")??new Pe;if(!(ve instanceof we||ve instanceof Pe))throw new Error("If set, indent must be a number");return new fe(Ne(B,ve.value))}else if(de==="join"){let be;if(B instanceof fe)be=Array.from(B.value);else if(B instanceof K)be=B.value.map(je=>je.value);else throw new Error(`Cannot apply filter "${de}" to type: ${B.type}`);const[ve,Re]=this.evaluateArguments(te.args,ee),Fe=ve.at(0)??Re.get("separator")??new fe("");if(!(Fe instanceof fe))throw new Error("separator must be a string");return new fe(be.join(Fe.value))}if(B instanceof K){switch(de){case"selectattr":case"rejectattr":{const be=de==="selectattr";if(B.value.some(Xe=>!(Xe instanceof He)))throw new Error(`\`${de}\` can only be applied to array of objects`);if(te.args.some(Xe=>Xe.type!=="StringLiteral"))throw new Error(`arguments of \`${de}\` must be strings`);const[ve,Re,Fe]=te.args.map(Xe=>this.evaluate(Xe,ee));let je;if(Re){const Xe=ee.tests.get(Re.value);if(!Xe)throw new Error(`Unknown test: ${Re.value}`);je=Xe}else je=(...Xe)=>Xe[0].__bool__().value;const qe=B.value.filter(Xe=>{const ut=Xe.value.get(ve.value),wt=ut?je(ut,Fe):!1;return be?wt:!wt});return new K(qe)}case"map":{const[,be]=this.evaluateArguments(te.args,ee);if(be.has("attribute")){const ve=be.get("attribute");if(!(ve instanceof fe))throw new Error("attribute must be a string");const Re=be.get("default"),Fe=B.value.map(je=>{if(!(je instanceof He))throw new Error("items in map must be an object");return je.value.get(ve.value)??Re??new Te});return new K(Fe)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${de}`)}else if(B instanceof fe){switch(de){case"indent":{const[be,ve]=this.evaluateArguments(te.args,ee),Re=be.at(0)??ve.get("width")??new we(4);if(!(Re instanceof we))throw new Error("width must be a number");const Fe=be.at(1)??ve.get("first")??new ke(!1),je=be.at(2)??ve.get("blank")??new ke(!1),qe=B.value.split(`
`),Xe=" ".repeat(Re.value),ut=qe.map((wt,nr)=>!Fe.value&&nr===0||!je.value&&wt.length===0?wt:Xe+wt);return new fe(ut.join(`
`))}}throw new Error(`Unknown StringValue filter: ${de}`)}else throw new Error(`Cannot apply filter "${de}" to type: ${B.type}`)}throw new Error(`Unknown filter: ${D.filter.type}`)}evaluateTestExpression(D,ee){const B=this.evaluate(D.operand,ee),te=ee.tests.get(D.test.value);if(!te)throw new Error(`Unknown test: ${D.test.value}`);const de=te(B);return new ke(D.negate?!de:de)}evaluateUnaryExpression(D,ee){const B=this.evaluate(D.argument,ee);switch(D.operator.value){case"not":return new ke(!B.value);default:throw new SyntaxError(`Unknown operator: ${D.operator.value}`)}}evalProgram(D,ee){return this.evaluateBlock(D.body,ee)}evaluateBlock(D,ee){let B="";for(const te of D){const de=this.evaluate(te,ee);de.type!=="NullValue"&&de.type!=="UndefinedValue"&&(B+=de.value)}return new fe(B)}evaluateIdentifier(D,ee){return ee.lookupVariable(D.value)}evaluateCallExpression(D,ee){const[B,te]=this.evaluateArguments(D.args,ee);te.size>0&&B.push(new Me(te));const de=this.evaluate(D.callee,ee);if(de.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${de.type}`);return de.value(B,ee)}evaluateSliceExpression(D,ee,B){if(!(D instanceof K||D instanceof fe))throw new Error("Slice object must be an array or string");const te=this.evaluate(ee.start,B),de=this.evaluate(ee.stop,B),be=this.evaluate(ee.step,B);if(!(te instanceof we||te instanceof Te))throw new Error("Slice start must be numeric or undefined");if(!(de instanceof we||de instanceof Te))throw new Error("Slice stop must be numeric or undefined");if(!(be instanceof we||be instanceof Te))throw new Error("Slice step must be numeric or undefined");return D instanceof K?new K(G(D.value,te.value,de.value,be.value)):new fe(G(Array.from(D.value),te.value,de.value,be.value).join(""))}evaluateMemberExpression(D,ee){const B=this.evaluate(D.object,ee);let te;if(D.computed){if(D.property.type==="SliceExpression")return this.evaluateSliceExpression(B,D.property,ee);te=this.evaluate(D.property,ee)}else te=new fe(D.property.value);let de;if(B instanceof He){if(!(te instanceof fe))throw new Error(`Cannot access property with non-string: got ${te.type}`);de=B.value.get(te.value)??B.builtins.get(te.value)}else if(B instanceof K||B instanceof fe)if(te instanceof we)de=B.value.at(te.value),B instanceof fe&&(de=new fe(B.value.at(te.value)));else if(te instanceof fe)de=B.builtins.get(te.value);else throw new Error(`Cannot access property with non-string/non-number: got ${te.type}`);else{if(!(te instanceof fe))throw new Error(`Cannot access property with non-string: got ${te.type}`);de=B.builtins.get(te.value)}return de instanceof X?de:new Te}evaluateSet(D,ee){const B=this.evaluate(D.value,ee);if(D.assignee.type==="Identifier"){const te=D.assignee.value;ee.setVariable(te,B)}else if(D.assignee.type==="MemberExpression"){const te=D.assignee,de=this.evaluate(te.object,ee);if(!(de instanceof He))throw new Error("Cannot assign to member of non-object");if(te.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");de.value.set(te.property.value,B)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(D.assignee)}`);return new Pe}evaluateIf(D,ee){const B=this.evaluate(D.test,ee);return this.evaluateBlock(B.__bool__().value?D.body:D.alternate,ee)}evaluateFor(D,ee){const B=new Ae(ee);let te,de;if(D.iterable.type==="SelectExpression"){const je=D.iterable;de=this.evaluate(je.iterable,B),te=je.test}else de=this.evaluate(D.iterable,B);if(!(de instanceof K))throw new Error(`Expected iterable type in for loop: got ${de.type}`);const be=[],ve=[];for(let je=0;je<de.value.length;++je){const qe=new Ae(B),Xe=de.value[je];let ut;if(D.loopvar.type==="Identifier")ut=wt=>wt.setVariable(D.loopvar.value,Xe);else if(D.loopvar.type==="TupleLiteral"){const wt=D.loopvar;if(Xe.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Xe.type}`);const nr=Xe;if(wt.value.length!==nr.value.length)throw new Error(`Too ${wt.value.length>nr.value.length?"few":"many"} items to unpack`);ut=jt=>{for(let dr=0;dr<wt.value.length;++dr){if(wt.value[dr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${wt.value[dr].type}`);jt.setVariable(wt.value[dr].value,nr.value[dr])}}}else throw new Error(`Invalid loop variable(s): ${D.loopvar.type}`);te&&(ut(qe),!this.evaluate(te,qe).__bool__().value)||(be.push(Xe),ve.push(ut))}let Re="",Fe=!0;for(let je=0;je<be.length;++je){const qe=new Map([["index",new we(je+1)],["index0",new we(je)],["revindex",new we(be.length-je)],["revindex0",new we(be.length-je-1)],["first",new ke(je===0)],["last",new ke(je===be.length-1)],["length",new we(be.length)],["previtem",je>0?be[je-1]:new Te],["nextitem",je<be.length-1?be[je+1]:new Te]]);B.setVariable("loop",new He(qe)),ve[je](B);const Xe=this.evaluateBlock(D.body,B);Re+=Xe.value,Fe=!1}if(Fe){const je=this.evaluateBlock(D.defaultBlock,B);Re+=je.value}return new fe(Re)}evaluateMacro(D,ee){return ee.setVariable(D.name.value,new me((B,te)=>{var ve;const de=new Ae(te);B=B.slice();let be;((ve=B.at(-1))==null?void 0:ve.type)==="KeywordArgumentsValue"&&(be=B.pop());for(let Re=0;Re<D.args.length;++Re){const Fe=D.args[Re],je=B[Re];if(Fe.type==="Identifier"){const qe=Fe;if(!je)throw new Error(`Missing positional argument: ${qe.value}`);de.setVariable(qe.value,je)}else if(Fe.type==="KeywordArgumentExpression"){const qe=Fe,Xe=je??(be==null?void 0:be.value.get(qe.key.value))??this.evaluate(qe.value,de);de.setVariable(qe.key.value,Xe)}else throw new Error(`Unknown argument type: ${Fe.type}`)}return this.evaluateBlock(D.body,de)})),new Pe}evaluate(D,ee){if(D===void 0)return new Te;switch(D.type){case"Program":return this.evalProgram(D,ee);case"Set":return this.evaluateSet(D,ee);case"If":return this.evaluateIf(D,ee);case"For":return this.evaluateFor(D,ee);case"Macro":return this.evaluateMacro(D,ee);case"NumericLiteral":return new we(Number(D.value));case"StringLiteral":return new fe(D.value);case"BooleanLiteral":return new ke(D.value);case"NullLiteral":return new Pe(D.value);case"ArrayLiteral":return new K(D.value.map(B=>this.evaluate(B,ee)));case"TupleLiteral":return new j(D.value.map(B=>this.evaluate(B,ee)));case"ObjectLiteral":{const B=new Map;for(const[te,de]of D.value){const be=this.evaluate(te,ee);if(!(be instanceof fe))throw new Error(`Object keys must be strings: got ${be.type}`);B.set(be.value,this.evaluate(de,ee))}return new He(B)}case"Identifier":return this.evaluateIdentifier(D,ee);case"CallExpression":return this.evaluateCallExpression(D,ee);case"MemberExpression":return this.evaluateMemberExpression(D,ee);case"UnaryExpression":return this.evaluateUnaryExpression(D,ee);case"BinaryExpression":return this.evaluateBinaryExpression(D,ee);case"FilterExpression":return this.evaluateFilterExpression(D,ee);case"TestExpression":return this.evaluateTestExpression(D,ee);default:throw new SyntaxError(`Unknown node type: ${D.type}`)}}};function Le(D){switch(typeof D){case"number":return new we(D);case"string":return new fe(D);case"boolean":return new ke(D);case"undefined":return new Te;case"object":return D===null?new Pe:Array.isArray(D)?new K(D.map(Le)):new He(new Map(Object.entries(D).map(([ee,B])=>[ee,Le(B)])));case"function":return new me((ee,B)=>{const te=D(...ee.map(de=>de.value))??null;return Le(te)});default:throw new Error(`Cannot convert to runtime value: ${D}`)}}function Ne(D,ee,B){const te=B??0;switch(D.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(D.value);case"ArrayValue":case"ObjectValue":{const de=ee?" ".repeat(ee):"",be=`
`+de.repeat(te),ve=be+de;if(D.type==="ArrayValue"){const Re=D.value.map(Fe=>Ne(Fe,ee,te+1));return ee?`[${ve}${Re.join(`,${ve}`)}${be}]`:`[${Re.join(", ")}]`}else{const Re=Array.from(D.value.entries()).map(([Fe,je])=>{const qe=`"${Fe}": ${Ne(je,ee,te+1)}`;return ee?`${ve}${qe}`:qe});return ee?`{${Re.join(",")}${be}}`:`{${Re.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${D.type}`)}}var We=class{constructor(D){re(this,"parsed");const ee=u(D,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=N(ee)}render(D){const ee=new Ae;if(ee.set("false",!1),ee.set("true",!0),ee.set("raise_exception",de=>{throw new Error(de)}),ee.set("range",O),D)for(const[de,be]of Object.entries(D))ee.set(de,be);return new Ie(ee).run(this.parsed).value}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>A,deviceToExecutionProviders:()=>f,isONNXProxy:()=>k,isONNXTensor:()=>v});var i=t("./src/env.js"),n=t("?2ce3"),o=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,u;const h=Symbol.for("onnxruntime");if(h in globalThis)u=globalThis[h];else if(i.apis.IS_NODE_ENV){switch(u=n??(s||(s=t.t(n,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else u=o,i.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),i.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const g=u.InferenceSession;function f(E=null){if(!E)return p;switch(E){case"auto":return c;case"gpu":return c.filter(M=>["webgpu","cuda","dml","webnn-gpu"].includes(M))}if(c.includes(E))return[l[E]??E];throw new Error(`Unsupported device: "${E}". Should be one of: ${c.join(", ")}.`)}let P=null;async function A(E,M,w){P&&await P;const T=g.create(E,M);P??(P=T);const $=await T;return $.config=w,$}function v(E){return E instanceof u.Tensor}const y=u==null?void 0:u.env;y!=null&&y.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!y.wasm.wasmPaths&&(y.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${i.env.version}/dist/`),y.wasm.proxy=!1),y!=null&&y.webgpu&&(y.webgpu.powerPreference="high-performance");function k(){var E;return(E=y==null?void 0:y.wasm)==null?void 0:E.proxy}i.env.backends.onnx=y},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>o,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),i=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class o extends i.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p){const u=await(0,n.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(u)}}function a(l,c){var p;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${((p=l==null?void 0:l.constructor)==null?void 0:p.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>E,center_to_corners_format:()=>u,post_process_instance_segmentation:()=>k,post_process_object_detection:()=>h,post_process_panoptic_segmentation:()=>y,post_process_semantic_segmentation:()=>g});var s=t("./src/utils/generic.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/utils/image.js");var o=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(M,w,T=0,$=null){const z=M/w;let R=(0,n.bankers_round)(z)*w;return $!==null&&R>$&&(R=Math.floor(z)*w),R<T&&(R=Math.ceil(z)*w),R}function p([M,w],T){return[Math.max(Math.floor(M/T),1)*T,Math.max(Math.floor(w/T),1)*T]}function u([M,w,T,$]){return[M-T/2,w-$/2,M+T/2,w+$/2]}function h(M,w=.5,T=null,$=!1){const z=M.logits,R=M.pred_boxes,[Q,q,U]=z.dims;if(T!==null&&T.length!==Q)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Z=[];for(let H=0;H<Q;++H){let J=T!==null?T[H]:null,ie={boxes:[],classes:[],scores:[]},ae=z[H],ce=R[H];for(let he=0;he<q;++he){let N=ae[he],O=[],G;if($){G=N.sigmoid().data;for(let se=0;se<G.length;++se)G[se]>w&&O.push(se)}else{let se=(0,n.max)(N.data)[1];if(se===U-1||(G=(0,n.softmax)(N.data),G[se]<w))continue;O.push(se)}for(const se of O){let X=ce[he].data;X=u(X),J!==null&&(X=X.map((we,fe)=>we*J[(fe+1)%2])),ie.boxes.push(X),ie.classes.push(se),ie.scores.push(G[se])}}Z.push(ie)}return Z}function g(M,w=null){const T=M.logits,$=T.dims[0];if(w!==null&&w.length!==$)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const z=[];for(let R=0;R<$;++R){const Q=w!==null?w[R]:null;let q=T[R];Q!==null&&(q=(0,i.interpolate)(q,Q,"bilinear",!1));const[U,Z]=Q??q.dims.slice(-2),H=new i.Tensor("int32",new Int32Array(U*Z),[U,Z]),J=q[0].data,ie=H.data;for(let he=1;he<q.dims[0];++he){const N=q[he].data;for(let O=0;O<N.length;++O)N[O]>J[O]&&(J[O]=N[O],ie[O]=he)}const ae=new Array(q.dims[0]);for(let he=0;he<ie.length;++he){const N=ie[he];ae[N]=N}const ce=ae.filter(he=>he!==void 0);z.push({segmentation:H,labels:ce})}return z}function f(M,w,T,$){const z=[],R=[],Q=[];for(let q=0;q<M.dims[0];++q){const U=M[q],Z=w[q],H=(0,n.max)(U.data)[1];if(H===$)continue;const ie=(0,n.softmax)(U.data)[H];ie>T&&(z.push(Z),R.push(ie),Q.push(H))}return[z,R,Q]}function P(M,w,T,$=.5,z=.8){const R=[];let Q=0,q=0;const U=w[T].data;for(let H=0;H<M.length;++H)M[H]===T&&(R.push(H),++Q),U[H]>=$&&++q;let Z=Q>0&&q>0;return Z&&(Z=Q/q>z),[Z,R]}function A(M,w,T,$,z,R=null,Q=null){const[q,U]=Q??M[0].dims,Z=new i.Tensor("int32",new Int32Array(q*U),[q,U]),H=[];if(Q!==null)for(let he=0;he<M.length;++he)M[he]=(0,i.interpolate)(M[he],Q,"bilinear",!1);const J=new Int32Array(M[0].data.length),ie=new Float32Array(M[0].data.length);for(let he=0;he<M.length;++he){let N=w[he];const O=M[he].data;for(let G=0;G<O.length;++G)O[G]*=N,O[G]>ie[G]&&(J[G]=he,ie[G]=O[G])}let ae=0;const ce=Z.data;for(let he=0;he<T.length;++he){const N=T[he],[O,G]=P(J,M,he,$,z);if(O){++ae;for(const se of G)ce[se]=ae;H.push({id:ae,label_id:N,score:w[he]})}}return[Z,H]}function v(M,w,T=28,$=56*56,z=14*14*4*1280){if(M<T||w<T)throw new Error(`height:${M} or width:${w} must be larger than factor:${T}`);if(Math.max(M,w)/Math.min(M,w)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(M,w)/Math.min(M,w)}`);let R=Math.round(M/T)*T,Q=Math.round(w/T)*T;if(R*Q>z){const q=Math.sqrt(M*w/z);R=Math.floor(M/q/T)*T,Q=Math.floor(w/q/T)*T}else if(R*Q<$){const q=Math.sqrt($/(M*w));R=Math.ceil(M*q/T)*T,Q=Math.ceil(w*q/T)*T}return[R,Q]}function y(M,w=.5,T=.5,$=.8,z=null,R=null){z===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),z=new Set);const Q=M.class_queries_logits??M.logits,U=(M.masks_queries_logits??M.pred_masks).sigmoid();let[Z,H,J]=Q.dims;if(J-=1,R!==null&&R.length!==Z)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let ie=[];for(let ae=0;ae<Z;++ae){let ce=R!==null?R[ae]:null,he=Q[ae],N=U[ae],[O,G,se]=f(he,N,w,J);if(se.length===0){let[fe,ke]=ce??N.dims.slice(-2),He=new i.Tensor("int32",new Int32Array(fe*ke).fill(-1),[fe,ke]);ie.push({segmentation:He,segments_info:[]});continue}let[X,we]=A(O,G,se,T,$,z,ce);ie.push({segmentation:X,segments_info:we})}return ie}function k(M,w=.5,T=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class E extends s.Callable{constructor(w){super(),this.image_mean=w.image_mean??w.mean,this.image_std=w.image_std??w.std,this.resample=w.resample??2,this.do_rescale=w.do_rescale??!0,this.rescale_factor=w.rescale_factor??1/255,this.do_normalize=w.do_normalize,this.do_thumbnail=w.do_thumbnail,this.size=w.size??w.image_size,this.do_resize=w.do_resize??this.size!==void 0,this.size_divisibility=w.size_divisibility??w.size_divisor,this.do_center_crop=w.do_center_crop,this.crop_size=w.crop_size,this.do_convert_rgb=w.do_convert_rgb??!0,this.do_crop_margin=w.do_crop_margin,this.pad_size=w.pad_size,this.do_pad=w.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=w.do_flip_channel_order??!1,this.config=w}async thumbnail(w,T,$=2){const z=w.height,R=w.width,Q=T.height,q=T.width;let U=Math.min(z,Q),Z=Math.min(R,q);return U===z&&Z===R?w:(z>R?Z=Math.floor(R*U/z):R>z&&(U=Math.floor(z*Z/R)),await w.resize(Z,U,{resample:$}))}async crop_margin(w,T=200){const $=w.clone().grayscale(),z=(0,n.min)($.data)[0],Q=(0,n.max)($.data)[0]-z;if(Q===0)return w;const q=T/255;let U=$.width,Z=$.height,H=0,J=0;const ie=$.data;for(let ae=0;ae<$.height;++ae){const ce=ae*$.width;for(let he=0;he<$.width;++he)(ie[ce+he]-z)/Q<q&&(U=Math.min(U,he),Z=Math.min(Z,ae),H=Math.max(H,he),J=Math.max(J,ae))}return w=await w.crop([U,Z,H,J]),w}pad_image(w,T,$,{mode:z="constant",center:R=!1,constant_values:Q=0}={}){const[q,U,Z]=T;let H,J;if(typeof $=="number"?(H=$,J=$):$==="square"?H=J=Math.max(q,U):(H=$.width,J=$.height),H!==U||J!==q){const ie=new Float32Array(H*J*Z);if(Array.isArray(Q))for(let he=0;he<ie.length;++he)ie[he]=Q[he%Z];else Q!==0&&ie.fill(Q);const[ae,ce]=R?[Math.floor((H-U)/2),Math.floor((J-q)/2)]:[0,0];for(let he=0;he<q;++he){const N=(he+ce)*H,O=he*U;for(let G=0;G<U;++G){const se=(N+G+ae)*Z,X=(O+G)*Z;for(let we=0;we<Z;++we)ie[se+we]=w[X+we]}}if(z==="symmetric"){if(R)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const he=q-1,N=U-1;for(let O=0;O<J;++O){const G=O*H,se=(0,o.calculateReflectOffset)(O,he)*U;for(let X=0;X<H;++X){if(O<q&&X<U)continue;const we=(G+X)*Z,fe=(se+(0,o.calculateReflectOffset)(X,N))*Z;for(let ke=0;ke<Z;++ke)ie[we+ke]=w[fe+ke]}}}w=ie,T=[J,H,Z]}return[w,T]}rescale(w){for(let T=0;T<w.length;++T)w[T]=this.rescale_factor*w[T]}get_resize_output_image_size(w,T){const[$,z]=w.size;let R,Q;if(this.do_thumbnail){const{height:q,width:U}=T;R=Math.min(q,U)}else Number.isInteger(T)?(R=T,Q=this.config.max_size??R):T!==void 0&&(R=T.shortest_edge,Q=T.longest_edge);if(R!==void 0||Q!==void 0){const q=R===void 0?1:Math.max(R/$,R/z),U=$*q,Z=z*q,H=Q===void 0?1:Math.min(Q/U,Q/Z);let J=Math.floor(Number((U*H).toFixed(2))),ie=Math.floor(Number((Z*H).toFixed(2)));return this.size_divisibility!==void 0&&([J,ie]=p([J,ie],this.size_divisibility)),[J,ie]}else if(T!==void 0&&T.width!==void 0&&T.height!==void 0){let q=T.width,U=T.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Z=U/z,H=q/$;Math.abs(1-H)<Math.abs(1-Z)?Z=H:H=Z,U=c(Z*z,this.config.ensure_multiple_of),q=c(H*$,this.config.ensure_multiple_of)}return[q,U]}else{if(this.size_divisibility!==void 0)return p([$,z],this.size_divisibility);if(T.min_pixels!==void 0&&T.max_pixels!==void 0){const{min_pixels:q,max_pixels:U}=T,Z=this.config.patch_size*this.config.merge_size;return v(z,$,Z,q,U)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(T)}`)}}async resize(w){const[T,$]=this.get_resize_output_image_size(w,this.size);return await w.resize(T,$,{resample:this.resample})}async preprocess(w,{do_normalize:T=null,do_pad:$=null,do_convert_rgb:z=null,do_convert_grayscale:R=null,do_flip_channel_order:Q=null}={}){this.do_crop_margin&&(w=await this.crop_margin(w));const[q,U]=w.size;if(z??this.do_convert_rgb?w=w.rgb():R&&(w=w.grayscale()),this.do_resize&&(w=await this.resize(w)),this.do_thumbnail&&(w=await this.thumbnail(w,this.size,this.resample)),this.do_center_crop){let ae,ce;Number.isInteger(this.crop_size)?(ae=this.crop_size,ce=this.crop_size):(ae=this.crop_size.width,ce=this.crop_size.height),w=await w.center_crop(ae,ce)}const Z=[w.height,w.width];let H=Float32Array.from(w.data),J=[w.height,w.width,w.channels];if(this.do_rescale&&this.rescale(H),T??this.do_normalize){let ae=this.image_mean;Array.isArray(this.image_mean)||(ae=new Array(w.channels).fill(ae));let ce=this.image_std;if(Array.isArray(this.image_std)||(ce=new Array(w.channels).fill(ae)),ae.length!==w.channels||ce.length!==w.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ae.length}) and \`image_std\` (${ce.length}) must match the number of channels in the image (${w.channels}).`);for(let he=0;he<H.length;he+=w.channels)for(let N=0;N<w.channels;++N)H[he+N]=(H[he+N]-ae[N])/ce[N]}if($??this.do_pad){if(this.pad_size)[H,J]=this.pad_image(H,[w.height,w.width,w.channels],this.pad_size);else if(this.size_divisibility){const[ae,ce]=p([J[1],J[0]],this.size_divisibility);[H,J]=this.pad_image(H,J,{width:ae,height:ce})}}if(Q??this.do_flip_channel_order){if(J[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ae=0;ae<H.length;ae+=3){const ce=H[ae];H[ae]=H[ae+2],H[ae+2]=ce}}const ie=new i.Tensor("float32",H,J).permute(2,0,1);return{original_size:[U,q],reshaped_input_size:Z,pixel_values:ie}}async _call(w,...T){Array.isArray(w)||(w=[w]);const $=await Promise.all(w.map(R=>this.preprocess(R)));return{pixel_values:(0,i.stack)($.map(R=>R.pixel_values),0),original_sizes:$.map(R=>R.original_size),reshaped_input_sizes:$.map(R=>R.reshaped_input_size)}}static async from_pretrained(w,T){const $=await(0,a.getModelJSON)(w,l.IMAGE_PROCESSOR_NAME,!0,T);return new this($)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>o});var s=t("./src/utils/constants.js"),i=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class o extends i.Callable{constructor(l,c){super(),this.config=l,this.components=c}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c){const[p,u]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(h=>h in this).map(async h=>{const g=await this[h].from_pretrained(l,c);return[h.replace(/_class$/,""),g]})).then(Object.fromEntries)]);return new this(p,u)}}re(o,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),re(o,"uses_processor_config",!1)},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>c,PretrainedConfig:()=>l,getKeyValueShapes:()=>a});var s=t("./src/utils/core.js"),i=t("./src/utils/hub.js");async function n(p,u){return await(0,i.getModelJSON)(p,"config.json",!0,u)}function o(p){const u={};let h={};switch(p.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":h=o(p.text_config);break;case"moondream1":h=o(p.phi_config);break;case"musicgen":h=o(p.decoder);break;case"multi_modality":h=o(p.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const f=o(p.decoder),P="num_decoder_layers"in f,A=(0,s.pick)(p,["model_type","is_encoder_decoder"]);return P?(A.num_decoder_layers=f.num_decoder_layers,A.num_decoder_heads=f.num_decoder_heads,A.decoder_hidden_size=f.decoder_hidden_size,A.num_encoder_layers=f.num_encoder_layers,A.num_encoder_heads=f.num_encoder_heads,A.encoder_hidden_size=f.encoder_hidden_size):(A.num_layers=f.num_layers,A.num_heads=f.num_heads,A.hidden_size=f.hidden_size),A}const g={...h,...(0,s.pick)(p,["model_type","multi_query","is_encoder_decoder"])};for(const f in u)g[f]=p[u[f]];return g}function a(p,{prefix:u="past_key_values",batch_size:h=1}={}){const g={},f=p.normalized_config;if(f.is_encoder_decoder&&"num_encoder_heads"in f&&"num_decoder_heads"in f){const P=f.encoder_dim_kv??f.encoder_hidden_size/f.num_encoder_heads,A=f.decoder_dim_kv??f.decoder_hidden_size/f.num_decoder_heads,v=[h,f.num_encoder_heads,0,P],y=[h,f.num_decoder_heads,0,A];for(let k=0;k<f.num_decoder_layers;++k)g[`${u}.${k}.encoder.key`]=v,g[`${u}.${k}.encoder.value`]=v,g[`${u}.${k}.decoder.key`]=y,g[`${u}.${k}.decoder.value`]=y}else{const P=f.num_heads,A=f.num_layers,v=f.dim_kv??f.hidden_size/(f.num_attention_heads??P);if(f.model_type==="falcon"){const y=[h*P,0,v];for(let k=0;k<A;++k)g[`${u}.${k}.key`]=y,g[`${u}.${k}.value`]=y}else if(f.multi_query){const y=[h*P,0,2*v];for(let k=0;k<A;++k)g[`${u}.${k}.key_value`]=y}else if(f.model_type==="bloom"){const y=[h*P,v,0],k=[h*P,0,v];for(let E=0;E<A;++E)g[`${u}.${E}.key`]=y,g[`${u}.${E}.value`]=k}else if(f.model_type==="openelm")for(let y=0;y<A;++y){const k=[h,P[y],0,v];g[`${u}.${y}.key`]=k,g[`${u}.${y}.value`]=k}else{const y=[h,P,0,v];for(let k=0;k<A;++k)g[`${u}.${k}.key`]=y,g[`${u}.${k}.value`]=y}}return g}class l{constructor(u){re(this,"model_type",null);re(this,"is_encoder_decoder",!1);re(this,"max_position_embeddings");re(this,"transformers.js_config");Object.assign(this,u),this.normalized_config=o(this)}static async from_pretrained(u,{progress_callback:h=null,config:g=null,cache_dir:f=null,local_files_only:P=!1,revision:A="main"}={}){g&&!(g instanceof l)&&(g=new l(g));const v=g??await n(u,{progress_callback:h,config:g,cache_dir:f,local_files_only:P,revision:A});return new this(v)}}class c{static async from_pretrained(...u){return l.from_pretrained(...u)}}},"./src/env.js":(e,r,t)=>{var $,z;t.r(r),t.d(r,{apis:()=>A,env:()=>w});var s=t("?569f"),i=t("?3f59"),n=t("?154a");const o="3.4.2",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&(($=self.constructor)==null?void 0:$.name)==="DedicatedWorkerGlobalScope",c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,u=typeof navigator<"u"&&"ml"in navigator,h=typeof process<"u",g=h&&((z=process==null?void 0:process.release)==null?void 0:z.name)==="node",f=!T(s),P=!T(i),A=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:u,IS_PROCESS_AVAILABLE:h,IS_NODE_ENV:g,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:P}),v=f&&P;let y="./";if(v){const R=Object({url:self.location.href}).url;R?y=i.dirname(i.dirname(n.fileURLToPath(R))):typeof __dirname<"u"&&(y=i.dirname(__dirname))}const k=v?i.join(y,"/.cache/"):null,E="/models/",M=v?i.join(y,E):E,w={version:o,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:M,useFS:f,useBrowserCache:c,useFSCache:f,cacheDir:k,useCustomCache:!1,customCache:null};function T(R){return Object.keys(R).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>i});var s=t("./src/utils/core.js");class i{constructor(o){re(this,"max_length",20);re(this,"max_new_tokens",null);re(this,"min_length",0);re(this,"min_new_tokens",null);re(this,"early_stopping",!1);re(this,"max_time",null);re(this,"do_sample",!1);re(this,"num_beams",1);re(this,"num_beam_groups",1);re(this,"penalty_alpha",null);re(this,"use_cache",!0);re(this,"temperature",1);re(this,"top_k",50);re(this,"top_p",1);re(this,"typical_p",1);re(this,"epsilon_cutoff",0);re(this,"eta_cutoff",0);re(this,"diversity_penalty",0);re(this,"repetition_penalty",1);re(this,"encoder_repetition_penalty",1);re(this,"length_penalty",1);re(this,"no_repeat_ngram_size",0);re(this,"bad_words_ids",null);re(this,"force_words_ids",null);re(this,"renormalize_logits",!1);re(this,"constraints",null);re(this,"forced_bos_token_id",null);re(this,"forced_eos_token_id",null);re(this,"remove_invalid_values",!1);re(this,"exponential_decay_length_penalty",null);re(this,"suppress_tokens",null);re(this,"streamer",null);re(this,"begin_suppress_tokens",null);re(this,"forced_decoder_ids",null);re(this,"guidance_scale",null);re(this,"num_return_sequences",1);re(this,"output_attentions",!1);re(this,"output_hidden_states",!1);re(this,"output_scores",!1);re(this,"return_dict_in_generate",!1);re(this,"pad_token_id",null);re(this,"bos_token_id",null);re(this,"eos_token_id",null);re(this,"encoder_no_repeat_ngram_size",0);re(this,"decoder_start_token_id",null);re(this,"generation_kwargs",{});Object.assign(this,(0,s.pick)(o,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>v,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>a,LogitsWarper:()=>o,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>P,NoBadWordsLogitsProcessor:()=>A,NoRepeatNGramLogitsProcessor:()=>h,RepetitionPenaltyLogitsProcessor:()=>g,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>y,TopKLogitsWarper:()=>E,TopPLogitsWarper:()=>k,WhisperTimeStampLogitsProcessor:()=>u});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var i=t("./src/utils/maths.js");class n extends s.Callable{_call(w,T){throw Error("`_call` should be implemented in a subclass")}}class o extends s.Callable{_call(w,T){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(w){this.processors.push(w)}extend(w){this.processors.push(...w)}_call(w,T){let $=T;for(const z of this.processors)$=z(w,$);return $}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(w){super(),this.bos_token_id=w}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length===1){const z=T[$].data;z.fill(-1/0),z[this.bos_token_id]=0}return T}}class c extends n{constructor(w,T){super(),this.max_length=w,this.eos_token_id=Array.isArray(T)?T:[T]}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length===this.max_length-1){const z=T[$].data;z.fill(-1/0);for(const R of this.eos_token_id)z[R]=0}return T}}class p extends n{constructor(w,T){super(),this.begin_suppress_tokens=w,this.begin_index=T}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length===this.begin_index){const z=T[$].data;for(const R of this.begin_suppress_tokens)z[R]=-1/0}return T}}class u extends n{constructor(w,T){super(),this.eos_token_id=Array.isArray(w.eos_token_id)?w.eos_token_id[0]:w.eos_token_id,this.no_timestamps_token_id=w.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=T.length,T.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=w.max_initial_timestamp_index}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data;if(z[this.no_timestamps_token_id]=-1/0,w[$].length===this.begin_index-1){z.fill(-1/0),z[this.timestamp_begin]=0;continue}const R=w[$].slice(this.begin_index),Q=R.length>=1&&R[R.length-1]>=this.timestamp_begin,q=R.length<2||R[R.length-2]>=this.timestamp_begin;if(Q&&(q?z.subarray(this.timestamp_begin).fill(-1/0):z.subarray(0,this.eos_token_id).fill(-1/0)),w[$].length===this.begin_index&&this.max_initial_timestamp_index!==null){const J=this.timestamp_begin+this.max_initial_timestamp_index;z.subarray(J+1).fill(-1/0)}const U=(0,i.log_softmax)(z),Z=Math.log(U.subarray(this.timestamp_begin).map(Math.exp).reduce((J,ie)=>J+ie)),H=(0,i.max)(U.subarray(0,this.timestamp_begin))[0];Z>H&&z.subarray(0,this.timestamp_begin).fill(-1/0)}return T}}class h extends n{constructor(w){super(),this.no_repeat_ngram_size=w}getNgrams(w){const T=w.length,$=[];for(let R=0;R<T+1-this.no_repeat_ngram_size;++R){const Q=[];for(let q=0;q<this.no_repeat_ngram_size;++q)Q.push(w[R+q]);$.push(Q.map(Number))}const z=new Map;for(const R of $){const Q=R.slice(0,R.length-1),q=JSON.stringify(Q),U=z.get(q)??[];U.push(R[R.length-1]),z.set(q,U)}return z}getGeneratedNgrams(w,T){const $=T.slice(T.length+1-this.no_repeat_ngram_size,T.length);return w.get(JSON.stringify($.map(Number)))??[]}calcBannedNgramTokens(w){const T=[];if(w.length+1<this.no_repeat_ngram_size)return T;{const $=this.getNgrams(w);return this.getGeneratedNgrams($,w)}}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data,R=this.calcBannedNgramTokens(w[$]);for(const Q of R)z[Q]=-1/0}return T}}class g extends n{constructor(w){super(),this.penalty=w}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data;for(const R of new Set(w[$])){const Q=Number(R);z[Q]<0?z[Q]*=this.penalty:z[Q]/=this.penalty}}return T}}class f extends n{constructor(w,T){super(),this.min_length=w,this.eos_token_id=Array.isArray(T)?T:[T]}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length<this.min_length){const z=T[$].data;for(const R of this.eos_token_id)z[R]=-1/0}return T}}class P extends n{constructor(w,T,$){super(),this.prompt_length_to_skip=w,this.min_new_tokens=T,this.eos_token_id=Array.isArray($)?$:[$]}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length-this.prompt_length_to_skip<this.min_new_tokens){const R=T[$].data;for(const Q of this.eos_token_id)R[Q]=-1/0}return T}}class A extends n{constructor(w,T){super(),this.bad_words_ids=w,this.eos_token_id=Array.isArray(T)?T:[T]}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data,R=w[$];for(const Q of this.bad_words_ids){let q=!0;for(let U=1;U<=Q.length-1&&Q.length<R.length;++U)if(Q.at(-U-1)!=R.at(-U)){q=!1;break}q&&(z[Q.at(-1)]=-1/0)}}return T}}class v extends n{constructor(w){if(super(),w<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${w}.`);this.guidance_scale=w}_call(w,T){if(T.dims[0]!==2*w.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${T.dims[0]} for the logits and ${w.length} for the input ids.`);const $=w.length,z=T.slice([0,$],null),R=T.slice([$,T.dims[0]],null);for(let Q=0;Q<R.data.length;++Q)R.data[Q]+=(z.data[Q]-R.data[Q])*this.guidance_scale;return R}}class y extends o{constructor(w){super(),this.temperature=w}_call(w,T){const $=T.data;for(let z=0;z<$.length;++z)$[z]/=this.temperature;return T}}class k extends o{constructor(w,{filter_value:T=-1/0,min_tokens_to_keep:$=1}={}){if(super(),w<0||w>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${w}`);if(!Number.isInteger($)||$<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${$}`);this.top_p=w,this.filter_value=T,this.min_tokens_to_keep=$}}class E extends o{constructor(w,{filter_value:T=-1/0,min_tokens_to_keep:$=1}={}){if(super(),!Number.isInteger(w)||w<0)throw new Error(`\`top_k\` must be a positive integer, but is ${w}`);this.top_k=Math.max(w,$),this.filter_value=T}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>o});var s=t("./src/utils/generic.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class o extends s.Callable{constructor(u){super(),this.generation_config=u}async _call(u){return this.sample(u)}async sample(u){throw Error("sample should be implemented in subclasses.")}getLogits(u,h){let g=u.dims.at(-1),f=u.data;if(h===-1)f=f.slice(-g);else{let P=h*g;f=f.slice(P,P+g)}return f}randomSelect(u){let h=0;for(let f=0;f<u.length;++f)h+=u[f];let g=Math.random()*h;for(let f=0;f<u.length;++f)if(g-=u[f],g<=0)return f;return 0}static getSampler(u){if(u.do_sample)return new l(u);if(u.num_beams>1)return new c(u);if(u.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${u.num_return_sequences}.`);return new a(u)}}class a extends o{async sample(u){const h=(0,n.max)(u.data)[1];return[[BigInt(h),0]]}}class l extends o{async sample(u){let h=u.dims.at(-1);this.generation_config.top_k>0&&(h=Math.min(this.generation_config.top_k,h));const[g,f]=await(0,i.topk)(u,h),P=(0,n.softmax)(g.data);return Array.from({length:this.generation_config.num_beams},()=>{const A=this.randomSelect(P);return[f.data[A],Math.log(P[A])]})}}class c extends o{async sample(u){let h=u.dims.at(-1);this.generation_config.top_k>0&&(h=Math.min(this.generation_config.top_k,h));const[g,f]=await(0,i.topk)(u,h),P=(0,n.softmax)(g.data);return Array.from({length:this.generation_config.num_beams},(A,v)=>[f.data[v],Math.log(P[v])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>o,StoppingCriteria:()=>i,StoppingCriteriaList:()=>n});var s=t("./src/utils/generic.js");class i extends s.Callable{_call(p,u){throw Error("StoppingCriteria needs to be subclassed")}}class n extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof n?p=p.criteria:p instanceof i&&(p=[p]),this.criteria.push(...p)}_call(p,u){const h=new Array(p.length).fill(!1);for(const g of this.criteria){const f=g(p,u);for(let P=0;P<h.length;++P)h[P]||(h[P]=f[P])}return h}[Symbol.iterator](){return this.criteria.values()}}class o extends i{constructor(p,u=null){super(),this.max_length=p,this.max_position_embeddings=u}_call(p){return p.map(u=>u.length>=this.max_length)}}class a extends i{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,u){return p.map(h=>{const g=h.at(-1);return this.eos_token_id.some(f=>g==f)})}}class l extends i{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,u){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>o,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),i=t("./src/tokenizers.js"),n=t("./src/env.js");class o{put(u){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=n.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends o{constructor(u,{skip_prompt:h=!1,callback_function:g=null,token_callback_function:f=null,skip_special_tokens:P=!0,decode_kwargs:A={},...v}={}){super(),this.tokenizer=u,this.skip_prompt=h,this.callback_function=g??a,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:P,...A,...v},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(u){var A;if(u.length>1)throw Error("TextStreamer only supports batch size of 1");const h=this.next_tokens_are_prompt;if(h&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const g=u[0];(A=this.token_callback_function)==null||A.call(this,g),this.token_cache=(0,s.mergeArrays)(this.token_cache,g);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let P;h||f.endsWith(`
`)?(P=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,i.is_chinese_char)(f.charCodeAt(f.length-1))?(P=f.slice(this.print_len),this.print_len+=P.length):(P=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=P.length),this.on_finalized_text(P,!1)}end(){let u;this.token_cache.length>0?(u=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):u="",this.next_tokens_are_prompt=!0,this.on_finalized_text(u,!0)}on_finalized_text(u,h){var g,f;u.length>0&&((g=this.callback_function)==null||g.call(this,u)),h&&this.callback_function===a&&n.apis.IS_PROCESS_AVAILABLE&&((f=this.callback_function)==null||f.call(this,`
`))}}class c extends l{constructor(u,{skip_prompt:h=!1,callback_function:g=null,token_callback_function:f=null,on_chunk_start:P=null,on_chunk_end:A=null,on_finalize:v=null,time_precision:y=.02,skip_special_tokens:k=!0,decode_kwargs:E={}}={}){super(u,{skip_prompt:h,skip_special_tokens:k,callback_function:g,token_callback_function:f,decode_kwargs:E}),this.timestamp_begin=u.timestamp_begin,this.on_chunk_start=P,this.on_chunk_end=A,this.on_finalize=v,this.time_precision=y,this.waiting_for_timestamp=!1}put(u){var g,f;if(u.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const h=u[0];if(h.length===1){const P=Number(h[0])-this.timestamp_begin;if(P>=0){const A=P*this.time_precision;this.waiting_for_timestamp?(g=this.on_chunk_end)==null||g.call(this,A):(f=this.on_chunk_start)==null||f.call(this,A),this.waiting_for_timestamp=!this.waiting_for_timestamp,u=[[]]}}return super.put(u)}end(){var u;super.end(),(u=this.on_finalize)==null||u.call(this)}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>Wa,ASTModel:()=>Ua,ASTPreTrainedModel:()=>Gi,AlbertForMaskedLM:()=>V,AlbertForQuestionAnswering:()=>F,AlbertForSequenceClassification:()=>pe,AlbertModel:()=>Sn,AlbertPreTrainedModel:()=>Ss,AutoModel:()=>Pu,AutoModelForAudioClassification:()=>db,AutoModelForAudioFrameClassification:()=>ub,AutoModelForAudioTextToText:()=>Mb,AutoModelForCTC:()=>lb,AutoModelForCausalLM:()=>J0,AutoModelForDepthEstimation:()=>_b,AutoModelForDocumentQuestionAnswering:()=>pb,AutoModelForImageClassification:()=>tb,AutoModelForImageFeatureExtraction:()=>wb,AutoModelForImageMatting:()=>hb,AutoModelForImageSegmentation:()=>rb,AutoModelForImageTextToText:()=>yb,AutoModelForImageToImage:()=>mb,AutoModelForMaskGeneration:()=>ab,AutoModelForMaskedLM:()=>Y0,AutoModelForNormalEstimation:()=>fb,AutoModelForObjectDetection:()=>ib,AutoModelForPoseEstimation:()=>gb,AutoModelForQuestionAnswering:()=>Z0,AutoModelForSemanticSegmentation:()=>sb,AutoModelForSeq2SeqLM:()=>H0,AutoModelForSequenceClassification:()=>G0,AutoModelForSpeechSeq2Seq:()=>q0,AutoModelForTextToSpectrogram:()=>Q0,AutoModelForTextToWaveform:()=>X0,AutoModelForTokenClassification:()=>K0,AutoModelForUniversalSegmentation:()=>nb,AutoModelForVision2Seq:()=>eb,AutoModelForXVector:()=>cb,AutoModelForZeroShotObjectDetection:()=>ob,BartForConditionalGeneration:()=>Wt,BartForSequenceClassification:()=>Ot,BartModel:()=>kt,BartPretrainedModel:()=>Ct,BaseModelOutput:()=>Pe,BeitForImageClassification:()=>Al,BeitModel:()=>Il,BeitPreTrainedModel:()=>na,BertForMaskedLM:()=>Ie,BertForQuestionAnswering:()=>We,BertForSequenceClassification:()=>Le,BertForTokenClassification:()=>Ne,BertModel:()=>Ae,BertPreTrainedModel:()=>Te,BlenderbotForConditionalGeneration:()=>Zt,BlenderbotModel:()=>Gt,BlenderbotPreTrainedModel:()=>gs,BlenderbotSmallForConditionalGeneration:()=>ws,BlenderbotSmallModel:()=>Zr,BlenderbotSmallPreTrainedModel:()=>gr,BloomForCausalLM:()=>No,BloomModel:()=>Ro,BloomPreTrainedModel:()=>gi,CLIPModel:()=>Zi,CLIPPreTrainedModel:()=>Vs,CLIPSegForImageSegmentation:()=>eo,CLIPSegModel:()=>on,CLIPSegPreTrainedModel:()=>nn,CLIPTextModel:()=>Yc,CLIPTextModelWithProjection:()=>Za,CLIPVisionModel:()=>Zc,CLIPVisionModelWithProjection:()=>qn,CamembertForMaskedLM:()=>xs,CamembertForQuestionAnswering:()=>Ls,CamembertForSequenceClassification:()=>Ts,CamembertForTokenClassification:()=>Es,CamembertModel:()=>us,CamembertPreTrainedModel:()=>Vr,CausalLMOutput:()=>On,CausalLMOutputWithPast:()=>Sx,ChineseCLIPModel:()=>nl,ChineseCLIPPreTrainedModel:()=>sl,ClapAudioModelWithProjection:()=>CM,ClapModel:()=>EM,ClapPreTrainedModel:()=>Gl,ClapTextModelWithProjection:()=>PM,CodeGenForCausalLM:()=>Ur,CodeGenModel:()=>An,CodeGenPreTrainedModel:()=>ei,CohereForCausalLM:()=>vo,CohereModel:()=>bo,CoherePreTrainedModel:()=>di,ConvBertForMaskedLM:()=>jt,ConvBertForQuestionAnswering:()=>Os,ConvBertForSequenceClassification:()=>dr,ConvBertForTokenClassification:()=>ds,ConvBertModel:()=>nr,ConvBertPreTrainedModel:()=>wt,ConvNextForImageClassification:()=>by,ConvNextModel:()=>My,ConvNextPreTrainedModel:()=>nu,ConvNextV2ForImageClassification:()=>xy,ConvNextV2Model:()=>vy,ConvNextV2PreTrainedModel:()=>iu,DPTForDepthEstimation:()=>ry,DPTModel:()=>ty,DPTPreTrainedModel:()=>tu,DacDecoderModel:()=>_0,DacDecoderOutput:()=>p0,DacEncoderModel:()=>m0,DacEncoderOutput:()=>u0,DacModel:()=>h0,DacPreTrainedModel:()=>Yl,DebertaForMaskedLM:()=>et,DebertaForQuestionAnswering:()=>zt,DebertaForSequenceClassification:()=>it,DebertaForTokenClassification:()=>rr,DebertaModel:()=>Be,DebertaPreTrainedModel:()=>mr,DebertaV2ForMaskedLM:()=>hs,DebertaV2ForQuestionAnswering:()=>_s,DebertaV2ForSequenceClassification:()=>Er,DebertaV2ForTokenClassification:()=>ms,DebertaV2Model:()=>ps,DebertaV2PreTrainedModel:()=>kr,DecisionTransformerModel:()=>qM,DecisionTransformerPreTrainedModel:()=>HM,DeiTForImageClassification:()=>Ee,DeiTModel:()=>ye,DeiTPreTrainedModel:()=>ne,DepthAnythingForDepthEstimation:()=>ny,DepthAnythingPreTrainedModel:()=>sy,DepthProForDepthEstimation:()=>dy,DepthProPreTrainedModel:()=>ly,DetrForObjectDetection:()=>Ol,DetrForSegmentation:()=>ia,DetrModel:()=>Fl,DetrObjectDetectionOutput:()=>oa,DetrPreTrainedModel:()=>vi,DetrSegmentationOutput:()=>Dl,Dinov2ForImageClassification:()=>Ey,Dinov2Model:()=>Ty,Dinov2PreTrainedModel:()=>ou,Dinov2WithRegistersForImageClassification:()=>Cy,Dinov2WithRegistersModel:()=>Py,Dinov2WithRegistersPreTrainedModel:()=>au,DistilBertForMaskedLM:()=>Ys,DistilBertForQuestionAnswering:()=>Js,DistilBertForSequenceClassification:()=>Qs,DistilBertForTokenClassification:()=>Xs,DistilBertModel:()=>Ps,DistilBertPreTrainedModel:()=>Qr,DonutSwinModel:()=>yy,DonutSwinPreTrainedModel:()=>wy,EfficientNetForImageClassification:()=>OM,EfficientNetModel:()=>FM,EfficientNetPreTrainedModel:()=>gu,ElectraForMaskedLM:()=>Ds,ElectraForQuestionAnswering:()=>qr,ElectraForSequenceClassification:()=>jr,ElectraForTokenClassification:()=>dt,ElectraModel:()=>cs,ElectraPreTrainedModel:()=>Dr,EsmForMaskedLM:()=>en,EsmForSequenceClassification:()=>tn,EsmForTokenClassification:()=>Lr,EsmModel:()=>Zs,EsmPreTrainedModel:()=>fs,ExaoneForCausalLM:()=>mt,ExaoneModel:()=>mo,ExaonePreTrainedModel:()=>Us,FalconForCausalLM:()=>TM,FalconModel:()=>xM,FalconPreTrainedModel:()=>mu,FastViTForImageClassification:()=>Ml,FastViTModel:()=>yl,FastViTPreTrainedModel:()=>Zo,Florence2ForConditionalGeneration:()=>Qi,Florence2PreTrainedModel:()=>Ja,GLPNForDepthEstimation:()=>gy,GLPNModel:()=>fy,GLPNPreTrainedModel:()=>su,GPT2LMHeadModel:()=>Jn,GPT2Model:()=>ll,GPT2PreTrainedModel:()=>to,GPTBigCodeForCausalLM:()=>co,GPTBigCodeModel:()=>cl,GPTBigCodePreTrainedModel:()=>Oe,GPTJForCausalLM:()=>In,GPTJModel:()=>lo,GPTJPreTrainedModel:()=>ao,GPTNeoForCausalLM:()=>io,GPTNeoModel:()=>no,GPTNeoPreTrainedModel:()=>Yn,GPTNeoXForCausalLM:()=>oo,GPTNeoXModel:()=>dl,GPTNeoXPreTrainedModel:()=>Zn,Gemma2ForCausalLM:()=>Po,Gemma2Model:()=>Eo,Gemma2PreTrainedModel:()=>ui,Gemma3ForCausalLM:()=>So,Gemma3Model:()=>Co,Gemma3PreTrainedModel:()=>pi,GemmaForCausalLM:()=>To,GemmaModel:()=>xo,GemmaPreTrainedModel:()=>ci,GlmForCausalLM:()=>gt,GlmModel:()=>ho,GlmPreTrainedModel:()=>ni,GraniteForCausalLM:()=>Mo,GraniteModel:()=>yo,GranitePreTrainedModel:()=>li,GroundingDinoForObjectDetection:()=>$y,GroundingDinoPreTrainedModel:()=>Sy,GroupViTModel:()=>wl,GroupViTPreTrainedModel:()=>gl,HeliumForCausalLM:()=>si,HeliumModel:()=>po,HeliumPreTrainedModel:()=>ri,HieraForImageClassification:()=>ot,HieraModel:()=>Ye,HieraPreTrainedModel:()=>ze,HubertForCTC:()=>iM,HubertForSequenceClassification:()=>oM,HubertModel:()=>nM,HubertPreTrainedModel:()=>mx,IJepaForImageClassification:()=>qo,IJepaModel:()=>Ho,IJepaPreTrainedModel:()=>bi,Idefics3ForConditionalGeneration:()=>Kn,Idefics3PreTrainedModel:()=>Ya,ImageMattingOutput:()=>vb,JAISLMHeadModel:()=>so,JAISModel:()=>ro,JAISPreTrainedModel:()=>kn,JinaCLIPModel:()=>il,JinaCLIPPreTrainedModel:()=>Xn,JinaCLIPTextModel:()=>ol,JinaCLIPVisionModel:()=>al,LiteWhisperForConditionalGeneration:()=>Ka,LlamaForCausalLM:()=>uo,LlamaModel:()=>ti,LlamaPreTrainedModel:()=>an,LlavaForConditionalGeneration:()=>Gn,LlavaOnevisionForConditionalGeneration:()=>Qa,LlavaPreTrainedModel:()=>qa,LongT5ForConditionalGeneration:()=>Qe,LongT5Model:()=>Ue,LongT5PreTrainedModel:()=>Ce,M2M100ForConditionalGeneration:()=>Ry,M2M100Model:()=>By,M2M100PreTrainedModel:()=>cu,MBartForCausalLM:()=>xr,MBartForConditionalGeneration:()=>fr,MBartForSequenceClassification:()=>Yr,MBartModel:()=>vr,MBartPreTrainedModel:()=>Vt,MPNetForMaskedLM:()=>zr,MPNetForQuestionAnswering:()=>Ar,MPNetForSequenceClassification:()=>Pn,MPNetForTokenClassification:()=>Rs,MPNetModel:()=>En,MPNetPreTrainedModel:()=>Xr,MT5ForConditionalGeneration:()=>ht,MT5Model:()=>Ze,MT5PreTrainedModel:()=>Ke,MarianMTModel:()=>zy,MarianModel:()=>Ly,MarianPreTrainedModel:()=>du,MaskFormerForInstanceSegmentation:()=>_y,MaskFormerModel:()=>my,MaskFormerPreTrainedModel:()=>ru,MaskedLMOutput:()=>wr,Metric3DForDepthEstimation:()=>uy,Metric3DPreTrainedModel:()=>cy,Metric3Dv2ForDepthEstimation:()=>hy,Metric3Dv2PreTrainedModel:()=>py,MgpstrForSceneTextRecognition:()=>ZM,MgpstrModelOutput:()=>JM,MgpstrPreTrainedModel:()=>YM,MimiDecoderModel:()=>c0,MimiDecoderOutput:()=>a0,MimiEncoderModel:()=>d0,MimiEncoderOutput:()=>o0,MimiModel:()=>l0,MimiPreTrainedModel:()=>Jl,MistralForCausalLM:()=>MM,MistralModel:()=>yM,MistralPreTrainedModel:()=>pu,MobileBertForMaskedLM:()=>zs,MobileBertForQuestionAnswering:()=>Ir,MobileBertForSequenceClassification:()=>Bs,MobileBertModel:()=>br,MobileBertPreTrainedModel:()=>Cs,MobileLLMForCausalLM:()=>_o,MobileLLMModel:()=>_t,MobileLLMPreTrainedModel:()=>Fn,MobileNetV1ForImageClassification:()=>LM,MobileNetV1ForSemanticSegmentation:()=>zM,MobileNetV1Model:()=>DM,MobileNetV1PreTrainedModel:()=>Hl,MobileNetV2ForImageClassification:()=>RM,MobileNetV2ForSemanticSegmentation:()=>NM,MobileNetV2Model:()=>BM,MobileNetV2PreTrainedModel:()=>ql,MobileNetV3ForImageClassification:()=>VM,MobileNetV3ForSemanticSegmentation:()=>UM,MobileNetV3Model:()=>jM,MobileNetV3PreTrainedModel:()=>Ql,MobileNetV4ForImageClassification:()=>GM,MobileNetV4ForSemanticSegmentation:()=>KM,MobileNetV4Model:()=>WM,MobileNetV4PreTrainedModel:()=>Xl,MobileViTForImageClassification:()=>Tl,MobileViTModel:()=>xl,MobileViTPreTrainedModel:()=>ea,MobileViTV2ForImageClassification:()=>Pl,MobileViTV2Model:()=>El,MobileViTV2PreTrainedModel:()=>ta,ModelOutput:()=>me,ModernBertForMaskedLM:()=>B,ModernBertForSequenceClassification:()=>te,ModernBertForTokenClassification:()=>de,ModernBertModel:()=>ee,ModernBertPreTrainedModel:()=>D,Moondream1ForConditionalGeneration:()=>Xa,MoonshineForConditionalGeneration:()=>Ha,MoonshineModel:()=>Jc,MoonshinePreTrainedModel:()=>Hi,MptForCausalLM:()=>Vo,MptModel:()=>jo,MptPreTrainedModel:()=>wi,MultiModalityCausalLM:()=>XM,MultiModalityPreTrainedModel:()=>QM,MusicgenForCausalLM:()=>wx,MusicgenForConditionalGeneration:()=>yu,MusicgenModel:()=>gx,MusicgenPreTrainedModel:()=>wu,NomicBertModel:()=>ve,NomicBertPreTrainedModel:()=>be,OPTForCausalLM:()=>Wo,OPTModel:()=>Uo,OPTPreTrainedModel:()=>yi,Olmo2ForCausalLM:()=>ai,Olmo2Model:()=>wo,Olmo2PreTrainedModel:()=>oi,OlmoForCausalLM:()=>go,OlmoModel:()=>fo,OlmoPreTrainedModel:()=>ii,OpenELMForCausalLM:()=>ko,OpenELMModel:()=>$o,OpenELMPreTrainedModel:()=>hi,OwlViTForObjectDetection:()=>Sl,OwlViTModel:()=>Cl,OwlViTPreTrainedModel:()=>ra,Owlv2ForObjectDetection:()=>kl,Owlv2Model:()=>$l,Owlv2PreTrainedModel:()=>sa,PaliGemmaForConditionalGeneration:()=>Ji,PaliGemmaPreTrainedModel:()=>Xi,PatchTSMixerForPrediction:()=>s0,PatchTSMixerModel:()=>r0,PatchTSMixerPreTrainedModel:()=>bu,PatchTSTForPrediction:()=>t0,PatchTSTModel:()=>e0,PatchTSTPreTrainedModel:()=>Mu,Phi3ForCausalLM:()=>Bo,Phi3Model:()=>zo,Phi3PreTrainedModel:()=>fi,Phi3VForCausalLM:()=>js,Phi3VPreTrainedModel:()=>Yi,PhiForCausalLM:()=>Lo,PhiModel:()=>Do,PhiPreTrainedModel:()=>_i,PreTrainedModel:()=>j,PretrainedMixin:()=>It,PvtForImageClassification:()=>pl,PvtModel:()=>ul,PvtPreTrainedModel:()=>Jo,PyAnnoteForAudioFrameClassification:()=>Gy,PyAnnoteModel:()=>Wy,PyAnnotePreTrainedModel:()=>uu,QuestionAnsweringModelOutput:()=>Pr,Qwen2ForCausalLM:()=>Ao,Qwen2Model:()=>Io,Qwen2PreTrainedModel:()=>mi,Qwen2VLForConditionalGeneration:()=>Oo,Qwen2VLPreTrainedModel:()=>Fo,RFDetrForObjectDetection:()=>d,RFDetrModel:()=>ca,RFDetrObjectDetectionOutput:()=>m,RFDetrPreTrainedModel:()=>da,RTDetrForObjectDetection:()=>zl,RTDetrModel:()=>Ll,RTDetrObjectDetectionOutput:()=>xi,RTDetrPreTrainedModel:()=>aa,RTDetrV2ForObjectDetection:()=>Rl,RTDetrV2Model:()=>Bl,RTDetrV2ObjectDetectionOutput:()=>Nl,RTDetrV2PreTrainedModel:()=>la,ResNetForImageClassification:()=>Fr,ResNetModel:()=>Bt,ResNetPreTrainedModel:()=>ft,RoFormerForMaskedLM:()=>je,RoFormerForQuestionAnswering:()=>ut,RoFormerForSequenceClassification:()=>qe,RoFormerForTokenClassification:()=>Xe,RoFormerModel:()=>Fe,RoFormerPreTrainedModel:()=>Re,RobertaForMaskedLM:()=>Rt,RobertaForQuestionAnswering:()=>er,RobertaForSequenceClassification:()=>Jt,RobertaForTokenClassification:()=>qt,RobertaModel:()=>ur,RobertaPreTrainedModel:()=>Ht,SamImageSegmentationOutput:()=>Dy,SamModel:()=>Oy,SamPreTrainedModel:()=>Fy,SapiensForDepthEstimation:()=>oy,SapiensForNormalEstimation:()=>ay,SapiensForSemanticSegmentation:()=>iy,SapiensPreTrainedModel:()=>jl,SegformerForImageClassification:()=>$M,SegformerForSemanticSegmentation:()=>kM,SegformerModel:()=>fx,SegformerPreTrainedModel:()=>Kl,Seq2SeqLMOutput:()=>Cx,SequenceClassifierOutput:()=>bt,SiglipModel:()=>el,SiglipPreTrainedModel:()=>Qn,SiglipTextModel:()=>tl,SiglipVisionModel:()=>rl,SmolVLMForConditionalGeneration:()=>Hn,SnacDecoderModel:()=>w0,SnacEncoderModel:()=>g0,SnacModel:()=>f0,SnacPreTrainedModel:()=>Zl,SpeechT5ForSpeechToText:()=>mM,SpeechT5ForTextToSpeech:()=>_M,SpeechT5HifiGan:()=>fM,SpeechT5Model:()=>_x,SpeechT5PreTrainedModel:()=>Wl,SqueezeBertForMaskedLM:()=>_r,SqueezeBertForQuestionAnswering:()=>Cn,SqueezeBertForSequenceClassification:()=>Ns,SqueezeBertModel:()=>cr,SqueezeBertPreTrainedModel:()=>Jr,StableLmForCausalLM:()=>AM,StableLmModel:()=>IM,StableLmPreTrainedModel:()=>fu,Starcoder2ForCausalLM:()=>vM,Starcoder2Model:()=>bM,Starcoder2PreTrainedModel:()=>hu,StyleTextToSpeech2Model:()=>hM,StyleTextToSpeech2PreTrainedModel:()=>pM,Swin2SRForImageSuperResolution:()=>ey,Swin2SRModel:()=>Zw,Swin2SRPreTrainedModel:()=>eu,SwinForImageClassification:()=>Jw,SwinForSemanticSegmentation:()=>Yw,SwinModel:()=>Xw,SwinPreTrainedModel:()=>$s,T5ForConditionalGeneration:()=>ue,T5Model:()=>le,T5PreTrainedModel:()=>Y,TableTransformerForObjectDetection:()=>I,TableTransformerModel:()=>C,TableTransformerObjectDetectionOutput:()=>W,TableTransformerPreTrainedModel:()=>x,TokenClassifierOutput:()=>pr,TrOCRForCausalLM:()=>wM,TrOCRPreTrainedModel:()=>gM,UltravoxModel:()=>i0,UltravoxPreTrainedModel:()=>n0,UniSpeechForCTC:()=>Qy,UniSpeechForSequenceClassification:()=>Xy,UniSpeechModel:()=>qy,UniSpeechPreTrainedModel:()=>Vl,UniSpeechSatForAudioFrameClassification:()=>eM,UniSpeechSatForCTC:()=>Yy,UniSpeechSatForSequenceClassification:()=>Zy,UniSpeechSatModel:()=>Jy,UniSpeechSatPreTrainedModel:()=>ua,ViTForImageClassification:()=>Ko,ViTMAEModel:()=>ml,ViTMAEPreTrainedModel:()=>hl,ViTMSNForImageClassification:()=>fl,ViTMSNModel:()=>_l,ViTMSNPreTrainedModel:()=>Yo,ViTModel:()=>Go,ViTPreTrainedModel:()=>Mi,VisionEncoderDecoderModel:()=>qi,VitMatteForImageMatting:()=>vl,VitMattePreTrainedModel:()=>bl,VitPoseForPoseEstimation:()=>Xo,VitPosePreTrainedModel:()=>Qo,VitsModel:()=>_u,VitsModelOutput:()=>xb,VitsPreTrainedModel:()=>SM,Wav2Vec2BertForCTC:()=>rM,Wav2Vec2BertForSequenceClassification:()=>sM,Wav2Vec2BertModel:()=>tM,Wav2Vec2BertPreTrainedModel:()=>Ul,Wav2Vec2ForAudioFrameClassification:()=>Uy,Wav2Vec2ForCTC:()=>jy,Wav2Vec2ForSequenceClassification:()=>Vy,Wav2Vec2Model:()=>Ny,Wav2Vec2PreTrainedModel:()=>ln,WavLMForAudioFrameClassification:()=>uM,WavLMForCTC:()=>lM,WavLMForSequenceClassification:()=>dM,WavLMForXVector:()=>cM,WavLMModel:()=>aM,WavLMPreTrainedModel:()=>Ti,WeSpeakerResNetModel:()=>Hy,WeSpeakerResNetPreTrainedModel:()=>Ky,WhisperForConditionalGeneration:()=>Ki,WhisperModel:()=>Ga,WhisperPreTrainedModel:()=>Wn,XLMForQuestionAnswering:()=>Ra,XLMForSequenceClassification:()=>Ba,XLMForTokenClassification:()=>Ui,XLMModel:()=>rn,XLMPreTrainedModel:()=>ir,XLMRobertaForMaskedLM:()=>ja,XLMRobertaForQuestionAnswering:()=>Wi,XLMRobertaForSequenceClassification:()=>$n,XLMRobertaForTokenClassification:()=>Va,XLMRobertaModel:()=>Na,XLMRobertaPreTrainedModel:()=>ys,XLMWithLMHeadModel:()=>sn,XVectorOutput:()=>bb,YolosForObjectDetection:()=>Iy,YolosModel:()=>ky,YolosObjectDetectionOutput:()=>Ay,YolosPreTrainedModel:()=>lu});var s=t("./src/configs.js"),i=t("./src/backends/onnx.js"),n=t("./src/utils/dtypes.js"),o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),u=t("./src/generation/configuration_utils.js"),h=t("./src/utils/tensor.js"),g=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),P=t("./src/generation/stopping_criteria.js"),A=t("./src/generation/logits_sampler.js"),v=t("./src/env.js"),y=t("./src/models/whisper/generation_whisper.js"),k=t("./src/models/whisper/common_whisper.js");const E={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},M=new Map,w=new Map,T=new Map;async function $(b,S,L){var yr;const oe=((yr=L.config)==null?void 0:yr["transformers.js_config"])??{};let ge=L.device??oe.device;ge&&typeof ge!="string"&&(ge.hasOwnProperty(S)?ge=ge[S]:(console.warn(`device not specified for "${S}". Using the default device.`),ge=null));const _e=ge??(v.apis.IS_NODE_ENV?"cpu":"wasm"),Se=(0,i.deviceToExecutionProviders)(_e);let De=L.dtype??oe.dtype;if(typeof De!="string"&&(De&&De.hasOwnProperty(S)?De=De[S]:(De=n.DEFAULT_DEVICE_DTYPE_MAPPING[_e]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${S}". Using the default dtype (${De}) for this device (${_e}).`))),De===n.DATA_TYPES.auto){let Pt=oe.dtype;typeof Pt!="string"&&(Pt=Pt[S]),Pt&&Pt!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(Pt)?De=Pt:De=n.DEFAULT_DEVICE_DTYPE_MAPPING[_e]??n.DATA_TYPES.fp32}const Ge=De;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Ge)){if(Ge===n.DATA_TYPES.fp16&&_e==="webgpu"&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${_e}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Ge}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);const Je=oe.kv_cache_dtype?typeof oe.kv_cache_dtype=="string"?oe.kv_cache_dtype:oe.kv_cache_dtype[Ge]??"float32":void 0;if(Je&&!["float32","float16"].includes(Je))throw new Error(`Invalid kv_cache_dtype: ${Je}. Should be one of: float32, float16`);const lt={dtype:Ge,kv_cache_dtype:Je},yt=n.DEFAULT_DTYPE_SUFFIX_MAPPING[Ge],st=`${S}${yt}.onnx`,Et=`${L.subfolder??""}/${st}`,at={...L.session_options};at.executionProviders??(at.executionProviders=Se);const vt=oe.free_dimension_overrides;vt?at.freeDimensionOverrides??(at.freeDimensionOverrides=vt):_e.startsWith("webnn")&&!at.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const ct=(0,l.getModelFile)(b,Et,!0,L,v.apis.IS_NODE_ENV),Tt=L.use_external_data_format??oe.use_external_data_format;let Lt=[];if(Tt){let Pt;typeof Tt=="object"?Tt.hasOwnProperty(st)?Pt=Tt[st]:Tt.hasOwnProperty(S)?Pt=Tt[S]:Pt=!1:Pt=Tt;const Nt=+Pt;if(Nt>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Nt}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let tr=0;tr<Nt;++tr){const sr=`${st}_data${tr===0?"":"_"+tr}`,Wr=`${L.subfolder??""}/${sr}`;Lt.push(new Promise(async(dn,ed)=>{const Cr=await(0,l.getModelFile)(b,Wr,!0,L,v.apis.IS_NODE_ENV);dn(Cr instanceof Uint8Array?{path:sr,data:Cr}:sr)}))}}else at.externalData!==void 0&&(Lt=at.externalData.map(async Pt=>{if(typeof Pt.data=="string"){const Nt=await(0,l.getModelFile)(b,Pt.data,!0,L);return{...Pt,data:Nt}}return Pt}));if(Lt.length>0){const Pt=await Promise.all(Lt);v.apis.IS_NODE_ENV||(at.externalData=Pt)}if(_e==="webgpu"){const Pt=(0,s.getKeyValueShapes)(L.config,{prefix:"present"});if(Object.keys(Pt).length>0&&!(0,i.isONNXProxy)()){const Nt={};for(const tr in Pt)Nt[tr]="gpu-buffer";at.preferredOutputLocation=Nt}}return{buffer_or_path:await ct,session_options:at,session_config:lt}}async function z(b,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async oe=>{const{buffer_or_path:ge,session_options:_e,session_config:Se}=await $(b,S[oe],L),De=await(0,i.createInferenceSession)(ge,_e,Se);return[oe,De]})))}async function R(b,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async oe=>{const ge=await(0,l.getModelJSON)(b,S[oe],!1,L);return[oe,ge]})))}function Q(b,S){const L=Object.create(null),oe=[];for(const Se of b.inputNames){const De=S[Se];if(!(De instanceof h.Tensor)){oe.push(Se);continue}L[Se]=(0,i.isONNXProxy)()?De.clone():De}if(oe.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${oe.join(", ")}.`);const ge=Object.keys(S).length,_e=b.inputNames.length;if(ge>_e){let Se=Object.keys(S).filter(De=>!b.inputNames.includes(De));console.warn(`WARNING: Too many inputs were provided (${ge} > ${_e}). The following inputs will be ignored: "${Se.join(", ")}".`)}return L}async function q(b,S){const L=Q(b,S);try{const oe=Object.fromEntries(Object.entries(L).map(([_e,Se])=>[_e,Se.ort_tensor]));let ge=await b.run(oe);return ge=U(ge),ge}catch(oe){const ge=Object.fromEntries(Object.entries(L).map(([_e,{type:Se,dims:De,data:Ge}])=>[_e,{type:Se,dims:De,data:Ge}]));throw console.error(`An error occurred during model execution: "${oe}".`),console.error("Inputs given to model:",ge),oe}}function U(b){for(let S in b)(0,i.isONNXTensor)(b[S])?b[S]=new h.Tensor(b[S]):typeof b[S]=="object"&&U(b[S]);return b}function Z(b){if(b instanceof h.Tensor)return b;if(b.length===0)throw Error("items must be non-empty");if(Array.isArray(b[0])){if(b.some(S=>S.length!==b[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new h.Tensor("int64",BigInt64Array.from(b.flat().map(S=>BigInt(S))),[b.length,b[0].length])}else return new h.Tensor("int64",BigInt64Array.from(b.map(S=>BigInt(S))),[1,b.length])}function H(b){return new h.Tensor("bool",[b],[1])}async function J(b,S){let{encoder_outputs:L,input_ids:oe,decoder_input_ids:ge,..._e}=S;if(!L){const De=(0,a.pick)(S,b.sessions.model.inputNames);L=(await ie(b,De)).last_hidden_state}return _e.input_ids=ge,_e.encoder_hidden_states=L,b.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(_e.encoder_attention_mask=S.attention_mask),await ce(b,_e,!0)}async function ie(b,S){const L=b.sessions.model,oe=(0,a.pick)(S,L.inputNames);if(L.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds){if(!S.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");oe.inputs_embeds=await b.encode_text({input_ids:S.input_ids})}if(L.inputNames.includes("token_type_ids")&&!oe.token_type_ids){if(!oe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");oe.token_type_ids=(0,h.zeros_like)(oe.input_ids)}if(L.inputNames.includes("pixel_mask")&&!oe.pixel_mask){if(!oe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const ge=oe.pixel_values.dims;oe.pixel_mask=(0,h.ones)([ge[0],ge[2],ge[3]])}return await q(L,oe)}async function ae(b,S){const L=await b.encode(S);return await b.decode(L)}async function ce(b,S,L=!1){const oe=b.sessions[L?"decoder_model_merged":"model"],{past_key_values:ge,..._e}=S;if(oe.inputNames.includes("use_cache_branch")&&(_e.use_cache_branch=H(!!ge)),oe.inputNames.includes("position_ids")&&_e.attention_mask&&!_e.position_ids){const De=["paligemma","gemma3_text","gemma3"].includes(b.config.model_type)?1:0;_e.position_ids=fe(_e,ge,De)}b.addPastKeyValues(_e,ge);const Se=(0,a.pick)(_e,oe.inputNames);return await q(oe,Se)}function he({modality_token_id:b,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge}){const _e=oe.tolist().map(Je=>Je.reduce((lt,yt,st)=>(yt==b&&lt.push(st),lt),[])),Se=_e.reduce((Je,lt)=>Je+lt.length,0),De=L.dims[0];if(Se!==De)throw new Error(`Number of tokens and features do not match: tokens: ${Se}, features ${De}`);let Ge=0;for(let Je=0;Je<_e.length;++Je){const lt=_e[Je],yt=S[Je];for(let st=0;st<lt.length;++st)yt[lt[st]].data.set(L[Ge++].data)}return{inputs_embeds:S,attention_mask:ge}}function N({image_token_id:b,inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){return he({modality_token_id:b,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge})}function O({audio_token_id:b,inputs_embeds:S,audio_features:L,input_ids:oe,attention_mask:ge}){return he({modality_token_id:b,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge})}async function G(b,{encode_function:S,merge_function:L,modality_input_name:oe,modality_output_name:ge,input_ids:_e=null,attention_mask:Se=null,position_ids:De=null,inputs_embeds:Ge=null,past_key_values:Je=null,generation_config:lt=null,logits_processor:yt=null,...st}){const Et=st[oe];if(!Ge){if(Ge=await b.encode_text({input_ids:_e,...st}),Et&&_e.dims[1]!==1){const vt=await S({[oe]:Et,...st});({inputs_embeds:Ge,attention_mask:Se}=L({[ge]:vt,inputs_embeds:Ge,input_ids:_e,attention_mask:Se}))}else if(Je&&Et&&_e.dims[1]===1){const vt=_e.dims[1],ct=Object.values(Je)[0].dims.at(-2);Se=(0,h.cat)([(0,h.ones)([_e.dims[0],ct]),Se.slice(null,[Se.dims[1]-vt,Se.dims[1]])],1)}}if(!De&&b.config.model_type==="qwen2_vl"){const{image_grid_thw:vt,video_grid_thw:ct}=st;[De]=b.get_rope_index(_e,vt,ct,Se)}return await ce(b,{inputs_embeds:Ge,past_key_values:Je,attention_mask:Se,position_ids:De,generation_config:lt,logits_processor:yt},!0)}async function se(b,S){return await G(b,{...S,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:b.encode_audio.bind(b),merge_function:b._merge_input_ids_with_audio_features.bind(b)})}async function X(b,S){return await G(b,{...S,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:b.encode_image.bind(b),merge_function:b._merge_input_ids_with_image_features.bind(b)})}function we(b,S=0){const[L,oe]=b.dims,ge=b.data,_e=new BigInt64Array(ge.length);for(let Se=0;Se<L;++Se){const De=Se*oe;let Ge=BigInt(S);for(let Je=0;Je<oe;++Je){const lt=De+Je;ge[lt]===0n?_e[lt]=BigInt(1):(_e[lt]=Ge,Ge+=ge[lt])}}return{data:_e,dims:b.dims}}function fe(b,S=null,L=0){const{input_ids:oe,inputs_embeds:ge,attention_mask:_e}=b,{data:Se,dims:De}=we(_e,L);let Ge=new h.Tensor("int64",Se,De);if(S){const Je=-(oe??ge).dims.at(1);Ge=Ge.slice(null,[Je,null])}return Ge}function ke(b,S,L,oe){if(L.past_key_values){const ge=Object.values(L.past_key_values)[0].dims.at(-2),{input_ids:_e,attention_mask:Se}=L;if(!(Se&&Se.dims[1]>_e.dims[1])){if(ge<_e.dims[1])L.input_ids=_e.slice(null,[ge,null]);else if(b.config.image_token_index!=null&&_e.data.some(De=>De==b.config.image_token_index)){const De=b.config.num_image_tokens;if(!De)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ge=_e.dims[1]-(ge-De);L.input_ids=_e.slice(null,[-Ge,null]),L.attention_mask=(0,h.ones)([1,ge+Ge])}}}return L}function He(b,S,L,oe){return L.past_key_values&&(S=S.map(ge=>[ge.at(-1)])),{...L,decoder_input_ids:Z(S)}}function Me(b,...S){return b.config.is_encoder_decoder?He(b,...S):ke(b,...S)}function K(b,S,L,oe){const ge=!!L.past_key_values;return oe.guidance_scale!==null&&oe.guidance_scale>1&&(ge?L.input_ids=(0,h.cat)([L.input_ids,L.input_ids],0):(L.input_ids=(0,h.cat)([L.input_ids,(0,h.full_like)(L.input_ids,BigInt(oe.pad_token_id))],0),L.attention_mask=(0,h.cat)([L.attention_mask,(0,h.full_like)(L.attention_mask,0n)],0))),(ge||!L.pixel_values)&&(L.pixel_values=(0,h.full)([0,0,3,384,384],1)),ge&&(L.images_seq_mask=new h.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),L.images_emb_mask=new h.Tensor("bool",new Array(0).fill(!1),[1,1,0])),L}class j extends o.Callable{constructor(L,oe,ge){super();re(this,"main_input_name","input_ids");re(this,"forward_params",["input_ids","attention_mask"]);this.config=L,this.sessions=oe,this.configs=ge;const _e=T.get(this.constructor),Se=M.get(_e);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Se){case E.DecoderOnly:this.can_generate=!0,this._forward=ce,this._prepare_inputs_for_generation=ke;break;case E.Seq2Seq:case E.Vision2Seq:case E.Musicgen:this.can_generate=!0,this._forward=J,this._prepare_inputs_for_generation=He;break;case E.EncoderDecoder:this._forward=J;break;case E.ImageTextToText:this.can_generate=!0,this._forward=X,this._prepare_inputs_for_generation=Me;break;case E.AudioTextToText:this.can_generate=!0,this._forward=se,this._prepare_inputs_for_generation=Me;break;case E.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=Me;break;case E.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=K;break;case E.AutoEncoder:this._forward=ae;break;default:this._forward=ie;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var oe;const L=[];for(const ge of Object.values(this.sessions))(oe=ge==null?void 0:ge.handler)!=null&&oe.dispose&&L.push(ge.handler.dispose());return await Promise.all(L)}static async from_pretrained(L,{progress_callback:oe=null,config:ge=null,cache_dir:_e=null,local_files_only:Se=!1,revision:De="main",model_file_name:Ge=null,subfolder:Je="onnx",device:lt=null,dtype:yt=null,use_external_data_format:st=null,session_options:Et={}}={}){let at={progress_callback:oe,config:ge,cache_dir:_e,local_files_only:Se,revision:De,model_file_name:Ge,subfolder:Je,device:lt,dtype:yt,use_external_data_format:st,session_options:Et};const vt=T.get(this),ct=M.get(vt);ge=at.config=await s.AutoConfig.from_pretrained(L,at);let Tt;if(ct===E.DecoderOnly)Tt=await Promise.all([z(L,{model:at.model_file_name??"model"},at),R(L,{generation_config:"generation_config.json"},at)]);else if(ct===E.Seq2Seq||ct===E.Vision2Seq)Tt=await Promise.all([z(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},at),R(L,{generation_config:"generation_config.json"},at)]);else if(ct===E.MaskGeneration)Tt=await Promise.all([z(L,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},at)]);else if(ct===E.EncoderDecoder)Tt=await Promise.all([z(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},at)]);else if(ct===E.ImageTextToText){const Lt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};ge.is_encoder_decoder&&(Lt.model="encoder_model"),Tt=await Promise.all([z(L,Lt,at),R(L,{generation_config:"generation_config.json"},at)])}else if(ct===E.AudioTextToText){const Lt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};Tt=await Promise.all([z(L,Lt,at),R(L,{generation_config:"generation_config.json"},at)])}else if(ct===E.Musicgen)Tt=await Promise.all([z(L,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},at),R(L,{generation_config:"generation_config.json"},at)]);else if(ct===E.MultiModality)Tt=await Promise.all([z(L,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},at),R(L,{generation_config:"generation_config.json"},at)]);else if(ct===E.Phi3V)Tt=await Promise.all([z(L,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},at),R(L,{generation_config:"generation_config.json"},at)]);else if(ct===E.AutoEncoder)Tt=await Promise.all([z(L,{encoder_model:"encoder_model",decoder_model:"decoder_model"},at)]);else{if(ct!==E.EncoderOnly){const Lt=vt??(ge==null?void 0:ge.model_type);Lt!=="custom"&&console.warn(`Model type for '${Lt}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}Tt=await Promise.all([z(L,{model:at.model_file_name??"model"},at)])}return new this(ge,...Tt)}async _call(L){return await this.forward(L)}async forward(L){return await this._forward(this,L)}get generation_config(){var L;return((L=this.configs)==null?void 0:L.generation_config)??null}_get_logits_warper(L){const oe=new p.LogitsProcessorList;return L.temperature!==null&&L.temperature!==1&&oe.push(new p.TemperatureLogitsWarper(L.temperature)),L.top_k!==null&&L.top_k!==0&&oe.push(new p.TopKLogitsWarper(L.top_k)),L.top_p!==null&&L.top_p<1&&oe.push(new p.TopPLogitsWarper(L.top_p)),oe}_get_logits_processor(L,oe,ge=null){const _e=new p.LogitsProcessorList;if(L.repetition_penalty!==null&&L.repetition_penalty!==1&&_e.push(new p.RepetitionPenaltyLogitsProcessor(L.repetition_penalty)),L.no_repeat_ngram_size!==null&&L.no_repeat_ngram_size>0&&_e.push(new p.NoRepeatNGramLogitsProcessor(L.no_repeat_ngram_size)),L.bad_words_ids!==null&&_e.push(new p.NoBadWordsLogitsProcessor(L.bad_words_ids,L.eos_token_id)),L.min_length!==null&&L.eos_token_id!==null&&L.min_length>0&&_e.push(new p.MinLengthLogitsProcessor(L.min_length,L.eos_token_id)),L.min_new_tokens!==null&&L.eos_token_id!==null&&L.min_new_tokens>0&&_e.push(new p.MinNewTokensLengthLogitsProcessor(oe,L.min_new_tokens,L.eos_token_id)),L.forced_bos_token_id!==null&&_e.push(new p.ForcedBOSTokenLogitsProcessor(L.forced_bos_token_id)),L.forced_eos_token_id!==null&&_e.push(new p.ForcedEOSTokenLogitsProcessor(L.max_length,L.forced_eos_token_id)),L.begin_suppress_tokens!==null){const Se=oe>1||L.forced_bos_token_id===null?oe:oe+1;_e.push(new p.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,Se))}return L.guidance_scale!==null&&L.guidance_scale>1&&_e.push(new p.ClassifierFreeGuidanceLogitsProcessor(L.guidance_scale)),ge!==null&&_e.extend(ge),_e}_prepare_generation_config(L,oe,ge=u.GenerationConfig){const _e={...this.config};for(const De of["decoder","generator","text_config"])De in _e&&Object.assign(_e,_e[De]);const Se=new ge(_e);return Object.assign(Se,this.generation_config??{}),L&&Object.assign(Se,L),oe&&Object.assign(Se,(0,a.pick)(oe,Object.getOwnPropertyNames(Se))),Se}_get_stopping_criteria(L,oe=null){const ge=new P.StoppingCriteriaList;return L.max_length!==null&&ge.push(new P.MaxLengthCriteria(L.max_length,this.config.max_position_embeddings??null)),L.eos_token_id!==null&&ge.push(new P.EosTokenCriteria(L.eos_token_id)),oe&&ge.extend(oe),ge}_validate_model_class(){if(!this.can_generate){const L=[Tu,Eu,xu,vu],oe=T.get(this.constructor),ge=new Set,_e=this.config.model_type;for(const De of L){const Ge=De.get(_e);Ge&&ge.add(Ge[0])}let Se=`The current model class (${oe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw ge.size>0&&(Se+=` Please use the following class instead: ${[...ge].join(", ")}`),Error(Se)}}prepare_inputs_for_generation(...L){return this._prepare_inputs_for_generation(this,...L)}_update_model_kwargs_for_generation({generated_input_ids:L,outputs:oe,model_inputs:ge,is_encoder_decoder:_e}){return ge.past_key_values=this.getPastKeyValues(oe,ge.past_key_values),ge.input_ids=new h.Tensor("int64",L.flat(),[L.length,1]),_e||(ge.attention_mask=(0,h.cat)([ge.attention_mask,(0,h.ones)([ge.attention_mask.dims[0],1])],1)),ge.position_ids=null,ge}_prepare_model_inputs({inputs:L,bos_token_id:oe,model_kwargs:ge}){const _e=(0,a.pick)(ge,this.forward_params),Se=this.main_input_name;if(Se in _e){if(L)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else _e[Se]=L;return{inputs_tensor:_e[Se],model_inputs:_e,model_input_name:Se}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:L,model_inputs:oe,model_input_name:ge,generation_config:_e}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:De,pixel_values:Ge,attention_mask:Je,...lt}=oe,yt=await this._prepare_inputs_embeds(oe);oe={...lt,...(0,a.pick)(yt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Se}=await ie(this,oe);if(_e.guidance_scale!==null&&_e.guidance_scale>1)Se=(0,h.cat)([Se,(0,h.full_like)(Se,0)],0),"attention_mask"in oe&&(oe.attention_mask=(0,h.cat)([oe.attention_mask,(0,h.zeros_like)(oe.attention_mask)],0));else if(oe.decoder_input_ids){const De=Z(oe.decoder_input_ids).dims[0];if(De!==Se.dims[0]){if(Se.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Se.dims[0]}) than the decoder inputs (${De}).`);Se=(0,h.cat)(Array.from({length:De},()=>Se),0)}}return oe.encoder_outputs=Se,oe}_prepare_decoder_input_ids_for_generation({batch_size:L,model_input_name:oe,model_kwargs:ge,decoder_start_token_id:_e,bos_token_id:Se,generation_config:De}){let{decoder_input_ids:Ge,...Je}=ge;if(!(Ge instanceof h.Tensor)){if(Ge)Array.isArray(Ge[0])||(Ge=Array.from({length:L},()=>Ge));else if(_e??(_e=Se),this.config.model_type==="musicgen")Ge=Array.from({length:L*this.config.decoder.num_codebooks},()=>[_e]);else if(Array.isArray(_e)){if(_e.length!==L)throw new Error(`\`decoder_start_token_id\` expcted to have length ${L} but got ${_e.length}`);Ge=_e}else Ge=Array.from({length:L},()=>[_e]);Ge=Z(Ge)}return ge.decoder_attention_mask=(0,h.ones_like)(Ge),{input_ids:Ge,model_inputs:Je}}async generate({inputs:L=null,generation_config:oe=null,logits_processor:ge=null,stopping_criteria:_e=null,streamer:Se=null,...De}){this._validate_model_class(),oe=this._prepare_generation_config(oe,De);let{inputs_tensor:Ge,model_inputs:Je,model_input_name:lt}=this._prepare_model_inputs({inputs:L,model_kwargs:De});const yt=this.config.is_encoder_decoder;yt&&("encoder_outputs"in Je||(Je=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ge,model_inputs:Je,model_input_name:lt,generation_config:oe})));let st;yt?{input_ids:st,model_inputs:Je}=this._prepare_decoder_input_ids_for_generation({batch_size:Je[lt].dims.at(0),model_input_name:lt,model_kwargs:Je,decoder_start_token_id:oe.decoder_start_token_id,bos_token_id:oe.bos_token_id,generation_config:oe}):st=Je[lt];let Et=st.dims.at(-1);oe.max_new_tokens!==null&&(oe.max_length=Et+oe.max_new_tokens);const at=this._get_logits_processor(oe,Et,ge),vt=this._get_stopping_criteria(oe,_e),ct=Je[lt].dims.at(0),Tt=A.LogitsSampler.getSampler(oe),Lt=new Array(ct).fill(0),Qt=st.tolist();Se&&Se.put(Qt);let yr,Pt={};for(;;){if(Je=this.prepare_inputs_for_generation(Qt,Je,oe),yr=await this.forward(Je),oe.output_attentions&&oe.return_dict_in_generate){const Cr=this.getAttentions(yr);for(const ks in Cr)ks in Pt||(Pt[ks]=[]),Pt[ks].push(Cr[ks])}const sr=yr.logits.slice(null,-1,null),Wr=at(Qt,sr),dn=[];for(let Cr=0;Cr<Wr.dims.at(0);++Cr){const ks=Wr[Cr],Cu=await Tt(ks);for(const[td,rd]of Cu){const sd=BigInt(td);Lt[Cr]+=rd,Qt[Cr].push(sd),dn.push([sd]);break}}if(Se&&Se.put(dn),vt(Qt).every(Cr=>Cr))break;Je=this._update_model_kwargs_for_generation({generated_input_ids:dn,outputs:yr,model_inputs:Je,is_encoder_decoder:yt})}Se&&Se.end();const Nt=this.getPastKeyValues(yr,Je.past_key_values,!0),tr=new h.Tensor("int64",Qt.flat(),[Qt.length,Qt[0].length]);if(oe.return_dict_in_generate)return{sequences:tr,past_key_values:Nt,...Pt};for(const sr of Object.values(yr))sr.location==="gpu-buffer"&&sr.dispose();return tr}getPastKeyValues(L,oe,ge=!1){const _e=Object.create(null);for(const Se in L)if(Se.startsWith("present")){const De=Se.replace("present","past_key_values"),Ge=Se.includes("encoder");if(Ge&&oe?_e[De]=oe[De]:_e[De]=L[Se],oe&&(!Ge||ge)){const Je=oe[De];Je.location==="gpu-buffer"&&Je.dispose()}}return _e}getAttentions(L){const oe={};for(const ge of["cross_attentions","encoder_attentions","decoder_attentions"])for(const _e in L)_e.startsWith(ge)&&(ge in oe||(oe[ge]=[]),oe[ge].push(L[_e]));return oe}addPastKeyValues(L,oe){var ge,_e,Se;if(oe)Object.assign(L,oe);else{const De=this.sessions.decoder_model_merged??this.sessions.model,Ge=((ge=De==null?void 0:De.config)==null?void 0:ge.kv_cache_dtype)??"float32",Je=Ge==="float16"?new h.DataTypeMap.float16:[],lt=((Se=(_e=L[this.main_input_name]??L.attention_mask)==null?void 0:_e.dims)==null?void 0:Se[0])??1,yt=(0,s.getKeyValueShapes)(this.config,{batch_size:lt});for(const st in yt)L[st]=new h.Tensor(Ge,Je,yt[st])}}async encode_image({pixel_values:L}){const oe=(await q(this.sessions.vision_encoder,{pixel_values:L})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${oe.dims[1]}).`),this.config.num_image_tokens=oe.dims[1]),oe}async encode_text({input_ids:L}){return(await q(this.sessions.embed_tokens,{input_ids:L})).inputs_embeds}async encode_audio({audio_values:L}){return(await q(this.sessions.audio_encoder,{audio_values:L})).audio_features}}class me{}class Pe extends me{constructor({last_hidden_state:S,hidden_states:L=null,attentions:oe=null}){super(),this.last_hidden_state=S,this.hidden_states=L,this.attentions=oe}}class Te extends j{}class Ae extends Te{}class Ie extends Te{async _call(S){return new wr(await super._call(S))}}class Le extends Te{async _call(S){return new bt(await super._call(S))}}class Ne extends Te{async _call(S){return new pr(await super._call(S))}}class We extends Te{async _call(S){return new Pr(await super._call(S))}}class D extends j{}class ee extends D{}class B extends D{async _call(S){return new wr(await super._call(S))}}class te extends D{async _call(S){return new bt(await super._call(S))}}class de extends D{async _call(S){return new pr(await super._call(S))}}class be extends j{}class ve extends be{}class Re extends j{}class Fe extends Re{}class je extends Re{async _call(S){return new wr(await super._call(S))}}class qe extends Re{async _call(S){return new bt(await super._call(S))}}class Xe extends Re{async _call(S){return new pr(await super._call(S))}}class ut extends Re{async _call(S){return new Pr(await super._call(S))}}class wt extends j{}class nr extends wt{}class jt extends wt{async _call(S){return new wr(await super._call(S))}}class dr extends wt{async _call(S){return new bt(await super._call(S))}}class ds extends wt{async _call(S){return new pr(await super._call(S))}}class Os extends wt{async _call(S){return new Pr(await super._call(S))}}class Dr extends j{}class cs extends Dr{}class Ds extends Dr{async _call(S){return new wr(await super._call(S))}}class jr extends Dr{async _call(S){return new bt(await super._call(S))}}class dt extends Dr{async _call(S){return new pr(await super._call(S))}}class qr extends Dr{async _call(S){return new Pr(await super._call(S))}}class Vr extends j{}class us extends Vr{}class xs extends Vr{async _call(S){return new wr(await super._call(S))}}class Ts extends Vr{async _call(S){return new bt(await super._call(S))}}class Es extends Vr{async _call(S){return new pr(await super._call(S))}}class Ls extends Vr{async _call(S){return new Pr(await super._call(S))}}class mr extends j{}class Be extends mr{}class et extends mr{async _call(S){return new wr(await super._call(S))}}class it extends mr{async _call(S){return new bt(await super._call(S))}}class rr extends mr{async _call(S){return new pr(await super._call(S))}}class zt extends mr{async _call(S){return new Pr(await super._call(S))}}class kr extends j{}class ps extends kr{}class hs extends kr{async _call(S){return new wr(await super._call(S))}}class Er extends kr{async _call(S){return new bt(await super._call(S))}}class ms extends kr{async _call(S){return new pr(await super._call(S))}}class _s extends kr{async _call(S){return new Pr(await super._call(S))}}class Qr extends j{}class Ps extends Qr{}class Qs extends Qr{async _call(S){return new bt(await super._call(S))}}class Xs extends Qr{async _call(S){return new pr(await super._call(S))}}class Js extends Qr{async _call(S){return new Pr(await super._call(S))}}class Ys extends Qr{async _call(S){return new wr(await super._call(S))}}class fs extends j{}class Zs extends fs{}class en extends fs{async _call(S){return new wr(await super._call(S))}}class tn extends fs{async _call(S){return new bt(await super._call(S))}}class Lr extends fs{async _call(S){return new pr(await super._call(S))}}class Cs extends j{}class br extends Cs{}class zs extends Cs{async _call(S){return new wr(await super._call(S))}}class Bs extends Cs{async _call(S){return new bt(await super._call(S))}}class Ir extends Cs{async _call(S){return new Pr(await super._call(S))}}class Xr extends j{}class En extends Xr{}class zr extends Xr{async _call(S){return new wr(await super._call(S))}}class Pn extends Xr{async _call(S){return new bt(await super._call(S))}}class Rs extends Xr{async _call(S){return new pr(await super._call(S))}}class Ar extends Xr{async _call(S){return new Pr(await super._call(S))}}class Jr extends j{}class cr extends Jr{}class _r extends Jr{async _call(S){return new wr(await super._call(S))}}class Ns extends Jr{async _call(S){return new bt(await super._call(S))}}class Cn extends Jr{async _call(S){return new Pr(await super._call(S))}}class Ss extends j{}class Sn extends Ss{}class pe extends Ss{async _call(S){return new bt(await super._call(S))}}class F extends Ss{async _call(S){return new Pr(await super._call(S))}}class V extends Ss{async _call(S){return new wr(await super._call(S))}}class Y extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class le extends Y{}class ue extends Y{}class Ce extends j{}class Ue extends Ce{}class Qe extends Ce{}class Ke extends j{}class Ze extends Ke{}class ht extends Ke{}class Ct extends j{}class kt extends Ct{}class Wt extends Ct{}class Ot extends Ct{async _call(S){return new bt(await super._call(S))}}class Vt extends j{}class vr extends Vt{}class fr extends Vt{}class Yr extends Vt{async _call(S){return new bt(await super._call(S))}}class xr extends Vt{}class gs extends j{}class Gt extends gs{}class Zt extends gs{}class gr extends j{}class Zr extends gr{}class ws extends gr{}class Ht extends j{}class ur extends Ht{}class Rt extends Ht{async _call(S){return new wr(await super._call(S))}}class Jt extends Ht{async _call(S){return new bt(await super._call(S))}}class qt extends Ht{async _call(S){return new pr(await super._call(S))}}class er extends Ht{async _call(S){return new Pr(await super._call(S))}}class ir extends j{}class rn extends ir{}class sn extends ir{async _call(S){return new wr(await super._call(S))}}class Ba extends ir{async _call(S){return new bt(await super._call(S))}}class Ui extends ir{async _call(S){return new pr(await super._call(S))}}class Ra extends ir{async _call(S){return new Pr(await super._call(S))}}class ys extends j{}class Na extends ys{}class ja extends ys{async _call(S){return new wr(await super._call(S))}}class $n extends ys{async _call(S){return new bt(await super._call(S))}}class Va extends ys{async _call(S){return new pr(await super._call(S))}}class Wi extends ys{async _call(S){return new Pr(await super._call(S))}}class Gi extends j{}class Ua extends Gi{}class Wa extends Gi{}class Wn extends j{constructor(){super(...arguments);re(this,"requires_attention_mask",!1);re(this,"main_input_name","input_features");re(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Ga extends Wn{}class Ki extends Wn{_prepare_generation_config(S,L){return super._prepare_generation_config(S,L,y.WhisperGenerationConfig)}_retrieve_init_tokens(S){const L=[S.decoder_start_token_id];let oe=S.language;const ge=S.task;if(S.is_multilingual){oe||(console.warn("No language specified - defaulting to English (en)."),oe="en");const Se=`<|${(0,k.whisper_language_to_code)(oe)}|>`;L.push(S.lang_to_id[Se]),L.push(S.task_to_id[ge??"transcribe"])}else if(oe||ge)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!S.return_timestamps&&S.no_timestamps_token_id&&L.at(-1)!==S.no_timestamps_token_id?L.push(S.no_timestamps_token_id):S.return_timestamps&&L.at(-1)===S.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),L.pop()),L.filter(_e=>_e!=null)}async generate({inputs:S=null,generation_config:L=null,logits_processor:oe=null,stopping_criteria:ge=null,..._e}){L=this._prepare_generation_config(L,_e);const Se=_e.decoder_input_ids??this._retrieve_init_tokens(L);if(L.return_timestamps&&(oe??(oe=new p.LogitsProcessorList),oe.push(new p.WhisperTimeStampLogitsProcessor(L,Se))),L.begin_suppress_tokens&&(oe??(oe=new p.LogitsProcessorList),oe.push(new p.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,Se.length))),L.return_token_timestamps){if(!L.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");L.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),L.output_attentions=!0,L.return_dict_in_generate=!0}const De=await super.generate({inputs:S,generation_config:L,logits_processor:oe,decoder_input_ids:Se,..._e});return L.return_token_timestamps&&(De.token_timestamps=this._extract_token_timestamps(De,L.alignment_heads,L.num_frames)),De}_extract_token_timestamps(S,L,oe=null,ge=.02){if(!S.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");oe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let _e=this.config.median_filter_width;_e===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),_e=7);const Se=S.cross_attentions,De=Array.from({length:this.config.decoder_layers},(vt,ct)=>(0,h.cat)(Se.map(Tt=>Tt[ct]),2)),Ge=(0,h.stack)(L.map(([vt,ct])=>{if(vt>=De.length)throw new Error(`Layer index ${vt} is out of bounds for cross attentions (length ${De.length}).`);return oe?De[vt].slice(null,ct,null,[0,oe]):De[vt].slice(null,ct)})).transpose(1,0,2,3),[Je,lt]=(0,h.std_mean)(Ge,-2,0,!0),yt=Ge.clone();for(let vt=0;vt<yt.dims[0];++vt){const ct=yt[vt];for(let Tt=0;Tt<ct.dims[0];++Tt){const Lt=ct[Tt],Qt=Je[vt][Tt][0].data,yr=lt[vt][Tt][0].data;for(let Pt=0;Pt<Lt.dims[0];++Pt){let Nt=Lt[Pt].data;for(let tr=0;tr<Nt.length;++tr)Nt[tr]=(Nt[tr]-yr[tr])/Qt[tr];Nt.set((0,f.medianFilter)(Nt,_e))}}}const st=[(0,h.mean)(yt,1)],Et=S.sequences.dims,at=new h.Tensor("float32",new Float32Array(Et[0]*Et[1]),Et);for(let vt=0;vt<Et[0];++vt){const ct=st[vt].neg().squeeze_(0),[Tt,Lt]=(0,f.dynamic_time_warping)(ct.tolist()),Qt=Array.from({length:Tt.length-1},(Nt,tr)=>Tt[tr+1]-Tt[tr]),yr=(0,a.mergeArrays)([1],Qt).map(Nt=>!!Nt),Pt=[];for(let Nt=0;Nt<yr.length;++Nt)yr[Nt]&&Pt.push(Lt[Nt]*ge);at[vt].data.set(Pt,1)}return at}}class Ka extends Ki{}class Hi extends j{constructor(){super(...arguments);re(this,"requires_attention_mask",!1);re(this,"main_input_name","input_values");re(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Jc extends Hi{}class Ha extends Hi{}class qi extends j{constructor(){super(...arguments);re(this,"main_input_name","pixel_values");re(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class qa extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Gn extends qa{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){const _e=this.config.image_token_index,De=oe.tolist().map(st=>st.findIndex(Et=>Et==_e)),Ge=De.every(st=>st===-1),Je=De.every(st=>st!==-1);if(!Ge&&!Je)throw new Error("Every input should contain either 0 or 1 image token.");if(Ge)return{inputs_embeds:S,attention_mask:ge};const lt=[],yt=[];for(let st=0;st<De.length;++st){const Et=De[st],at=S[st],vt=L[st],ct=ge[st];lt.push((0,h.cat)([at.slice([0,Et]),vt,at.slice([Et+1,at.dims[0]])],0)),yt.push((0,h.cat)([ct.slice([0,Et]),(0,h.ones)([vt.dims[0]]),ct.slice([Et+1,ct.dims[0]])],0))}return{inputs_embeds:(0,h.stack)(lt,0),attention_mask:(0,h.stack)(yt,0)}}}class Qa extends Gn{}class Xa extends Gn{}class Ja extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);re(this,"main_input_name","inputs_embeds")}}class Qi extends Ja{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){return{inputs_embeds:(0,h.cat)([L,S],1),attention_mask:(0,h.cat)([(0,h.ones)(L.dims.slice(0,2)),ge],1)}}async _prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:oe,attention_mask:ge}){if(!S&&!L)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let _e,Se;return S&&(_e=await this.encode_text({input_ids:S})),L&&(Se=await this.encode_image({pixel_values:L})),_e&&Se?{inputs_embeds:oe,attention_mask:ge}=this._merge_input_ids_with_image_features({inputs_embeds:_e,image_features:Se,input_ids:S,attention_mask:ge}):oe=_e||Se,{inputs_embeds:oe,attention_mask:ge}}async forward({input_ids:S,pixel_values:L,attention_mask:oe,decoder_input_ids:ge,decoder_attention_mask:_e,encoder_outputs:Se,past_key_values:De,inputs_embeds:Ge,decoder_inputs_embeds:Je}){if(Ge||({inputs_embeds:Ge,attention_mask:oe}=await this._prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:Ge,attention_mask:oe})),!Se){let{last_hidden_state:st}=await ie(this,{inputs_embeds:Ge,attention_mask:oe});Se=st}if(!Je){if(!ge)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Je=await this.encode_text({input_ids:ge})}return await ce(this,{inputs_embeds:Je,attention_mask:_e,encoder_attention_mask:oe,encoder_hidden_states:Se,past_key_values:De},!0)}}class Xi extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Ji extends Xi{_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return N({image_token_id:this.config.image_token_index,...S,image_features:oe})}}class Ya extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Kn extends Ya{async encode_image({pixel_values:S,pixel_attention_mask:L}){return(await q(this.sessions.vision_encoder,{pixel_values:S,pixel_attention_mask:L})).image_features}_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return N({image_token_id:this.config.image_token_id,...S,image_features:oe})}}class Hn extends Kn{}class Yi extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class js extends Yi{async forward({input_ids:S=null,attention_mask:L=null,pixel_values:oe=null,image_sizes:ge=null,position_ids:_e=null,inputs_embeds:Se=null,past_key_values:De=null,generation_config:Ge=null,logits_processor:Je=null,...lt}){if(!Se){let st;if(oe&&S.dims[1]!==1){if(!ge)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:st}=await q(this.sessions.vision_encoder,{pixel_values:oe,image_sizes:ge}))}else{const Et=this.config.normalized_config.hidden_size;st=new h.Tensor("float32",[],[0,Et])}({inputs_embeds:Se}=await q(this.sessions.prepare_inputs_embeds,{input_ids:S,image_features:st}))}return await ce(this,{inputs_embeds:Se,past_key_values:De,attention_mask:L,position_ids:_e,generation_config:Ge,logits_processor:Je},!1)}}class Vs extends j{}class Zi extends Vs{}class Yc extends Vs{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class Za extends Vs{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class Zc extends Vs{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class qn extends Vs{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class Qn extends j{}class el extends Qn{}class tl extends Qn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class rl extends Vs{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class sl extends j{}class nl extends sl{}class Xn extends j{}class il extends Xn{async forward(S){const L=!S.input_ids,oe=!S.pixel_values;if(L&&oe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(L&&(S.input_ids=(0,h.ones)([S.pixel_values.dims[0],1])),oe){const{image_size:Je}=this.config.vision_config;S.pixel_values=(0,h.full)([0,3,Je,Je],0)}const{text_embeddings:ge,image_embeddings:_e,l2norm_text_embeddings:Se,l2norm_image_embeddings:De}=await super.forward(S),Ge={};return L||(Ge.text_embeddings=ge,Ge.l2norm_text_embeddings=Se),oe||(Ge.image_embeddings=_e,Ge.l2norm_image_embeddings=De),Ge}}class ol extends Xn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class al extends Xn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class nn extends j{}class on extends nn{}class eo extends nn{}class to extends j{}class ll extends to{}class Jn extends to{}class kn extends j{}class ro extends kn{}class so extends kn{}class Yn extends j{}class no extends Yn{}class io extends Yn{}class Zn extends j{}class dl extends Zn{}class oo extends Zn{}class ao extends j{}class lo extends ao{}class In extends ao{}class Oe extends j{}class cl extends Oe{}class co extends Oe{}class ei extends j{}class An extends ei{}class Ur extends ei{}class an extends j{}class ti extends an{}class uo extends an{}class ri extends j{}class po extends ri{}class si extends ri{}class ni extends j{}class ho extends ni{}class gt extends ni{}class Us extends j{}class mo extends Us{}class mt extends Us{}class Fn extends j{}class _t extends Fn{}class _o extends Fn{}class ii extends j{}class fo extends ii{}class go extends ii{}class oi extends j{}class wo extends oi{}class ai extends oi{}class li extends j{}class yo extends li{}class Mo extends li{}class di extends j{}class bo extends di{}class vo extends di{}class ci extends j{}class xo extends ci{}class To extends ci{}class ui extends j{}class Eo extends ui{}class Po extends ui{}class pi extends j{}class Co extends pi{}class So extends pi{}class hi extends j{}class $o extends hi{}class ko extends hi{}class mi extends j{}class Io extends mi{}class Ao extends mi{}class Fo extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Oo extends Fo{get_rope_index(S,L,oe,ge){const{vision_config:_e,image_token_id:Se,video_token_id:De,vision_start_token_id:Ge}=this.config,Je=_e.spatial_merge_size??2,lt=[];if(L||oe){let yt=S.tolist();ge||(ge=(0,h.ones_like)(S));const st=ge.tolist(),Et=Array.from({length:3},Lt=>Array.from({length:S.dims[0]},Qt=>Array.from({length:S.dims[1]},yr=>1))),at=L?L.tolist():[],vt=oe?oe.tolist():[];let ct=0,Tt=0;for(let Lt=0;Lt<yt.length;++Lt){const Qt=yt[Lt].filter((Kt,or)=>st[Lt][or]==1),Pt=Qt.reduce((Kt,or,cn)=>(or==Ge&&Kt.push(cn),Kt),[]).map(Kt=>Qt[Kt+1]),Nt=Pt.filter(Kt=>Kt==Se).length,tr=Pt.filter(Kt=>Kt==De).length;let sr=[],Wr=0,dn=Nt,ed=tr;for(let Kt=0;Kt<Pt.length;++Kt){const or=Qt.findIndex((Ln,Ms)=>Ms>Wr&&Ln==Se),cn=Qt.findIndex((Ln,Ms)=>Ms>Wr&&Ln==De),Dn=dn>0&&or!==-1?or:Qt.length+1,Pi=ed>0&&cn!==-1?cn:Qt.length+1;let nd,Su,$u,ku;Dn<Pi?([Su,$u,ku]=at[ct],++ct,--dn,nd=Dn):([Su,$u,ku]=vt[Tt],++Tt,--ed,nd=Pi);const[$x,Iu,id]=[Number(Su),Math.floor(Number($u)/Je),Math.floor(Number(ku)/Je)],Au=nd-Wr,Tb=sr.length>0?(0,f.max)(sr.at(-1))[0]+1:0;sr.push(Array.from({length:3*Au},(Ln,Ms)=>Tb+Ms%Au));const Fu=Au+Tb,od=$x*Iu*id,kx=Array.from({length:od},(Ln,Ms)=>Fu+Math.floor(Ms/(Iu*id))),Ix=Array.from({length:od},(Ln,Ms)=>Fu+Math.floor(Ms/id)%Iu),Ax=Array.from({length:od},(Ln,Ms)=>Fu+Ms%id);sr.push([kx,Ix,Ax].flat()),Wr=nd+od}if(Wr<Qt.length){const Kt=sr.length>0?(0,f.max)(sr.at(-1))[0]+1:0,or=Qt.length-Wr;sr.push(Array.from({length:3*or},(cn,Dn)=>Kt+Dn%or))}const Cr=sr.reduce((Kt,or)=>Kt+or.length,0),ks=new Array(Cr);let Cu=0;for(let Kt=0;Kt<3;++Kt)for(let or=0;or<sr.length;++or){const cn=sr[or],Dn=cn.length/3;for(let Pi=Kt*Dn;Pi<(Kt+1)*Dn;++Pi)ks[Cu++]=cn[Pi]}let td=0;const rd=st[Lt];for(let Kt=0;Kt<rd.length;++Kt)if(rd[Kt]==1){for(let or=0;or<3;++or)Et[or][Lt][Kt]=ks[or*Cr/3+td];++td}const sd=(0,f.max)(ks)[0];lt.push(sd+1-yt[Lt].length)}return[new h.Tensor("int64",Et.flat(1/0),[3,S.dims[0],S.dims[1]]),new h.Tensor("int64",lt,[lt.length,1])]}else if(ge){const{data:yt,dims:st}=we(ge),Et=BigInt64Array.from({length:3*yt.length},(vt,ct)=>yt[ct%yt.length]),at=Array.from({length:st[0]},(vt,ct)=>(0,f.max)(yt.subarray(st[1]*ct,st[1]*(ct+1)))[0]+1n+BigInt(st[1]));return[new h.Tensor("int64",Et,[3,...st]),new h.Tensor("int64",at,[at.length,1])]}else{const[yt,st]=S.dims,Et=BigInt64Array.from({length:3*yt*st},(at,vt)=>BigInt(Math.floor(vt%st/yt)));return[new h.Tensor("int64",Et,[3,...S.dims]),(0,h.zeros)([yt,1])]}}async encode_image({pixel_values:S,image_grid_thw:L}){return(await q(this.sessions.vision_encoder,{pixel_values:S,grid_thw:L})).image_features}_merge_input_ids_with_image_features(S){return N({image_token_id:this.config.image_token_id,...S})}prepare_inputs_for_generation(S,L,oe){if(L.attention_mask&&!L.position_ids)if(!L.past_key_values)[L.position_ids,L.rope_deltas]=this.get_rope_index(L.input_ids,L.image_grid_thw,L.video_grid_thw,L.attention_mask);else{L.pixel_values=null;const ge=BigInt(Object.values(L.past_key_values)[0].dims.at(-2)),_e=L.rope_deltas.map(Se=>ge+Se);L.position_ids=(0,h.stack)([_e,_e,_e],0)}return L}}class _i extends j{}class Do extends _i{}class Lo extends _i{}class fi extends j{}class zo extends fi{}class Bo extends fi{}class gi extends j{}class Ro extends gi{}class No extends gi{}class wi extends j{}class jo extends wi{}class Vo extends wi{}class yi extends j{}class Uo extends yi{}class Wo extends yi{}class Mi extends j{}class Go extends Mi{}class Ko extends Mi{async _call(S){return new bt(await super._call(S))}}class bi extends j{}class Ho extends bi{}class qo extends bi{async _call(S){return new bt(await super._call(S))}}class Qo extends j{}class Xo extends Qo{}class Jo extends j{}class ul extends Jo{}class pl extends Jo{async _call(S){return new bt(await super._call(S))}}class hl extends j{}class ml extends hl{}class Yo extends j{}class _l extends Yo{}class fl extends Yo{async _call(S){return new bt(await super._call(S))}}class gl extends j{}class wl extends gl{}class Zo extends j{}class yl extends Zo{}class Ml extends Zo{async _call(S){return new bt(await super._call(S))}}class bl extends j{}class vl extends bl{async _call(S){return new vb(await super._call(S))}}class ea extends j{}class xl extends ea{}class Tl extends ea{async _call(S){return new bt(await super._call(S))}}class ta extends j{}class El extends ta{}class Pl extends ta{async _call(S){return new bt(await super._call(S))}}class ra extends j{}class Cl extends ra{}class Sl extends ra{}class sa extends j{}class $l extends sa{}class kl extends sa{}class na extends j{}class Il extends na{}class Al extends na{async _call(S){return new bt(await super._call(S))}}class vi extends j{}class Fl extends vi{}class Ol extends vi{async _call(S){return new oa(await super._call(S))}}class ia extends vi{async _call(S){return new Dl(await super._call(S))}}class oa extends me{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class Dl extends me{constructor({logits:S,pred_boxes:L,pred_masks:oe}){super(),this.logits=S,this.pred_boxes=L,this.pred_masks=oe}}class aa extends j{}class Ll extends aa{}class zl extends aa{async _call(S){return new xi(await super._call(S))}}class xi extends me{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class la extends j{}class Bl extends la{}class Rl extends la{async _call(S){return new Nl(await super._call(S))}}class Nl extends xi{}class da extends j{}class ca extends da{}class d extends da{async _call(S){return new m(await super._call(S))}}class m extends xi{}class x extends j{}class C extends x{}class I extends x{async _call(S){return new W(await super._call(S))}}class W extends oa{}class ne extends j{}class ye extends ne{}class Ee extends ne{async _call(S){return new bt(await super._call(S))}}class ze extends j{}class Ye extends ze{}class ot extends ze{async _call(S){return new bt(await super._call(S))}}class ft extends j{}class Bt extends ft{}class Fr extends ft{async _call(S){return new bt(await super._call(S))}}class $s extends j{}class Xw extends $s{}class Jw extends $s{async _call(S){return new bt(await super._call(S))}}class Yw extends $s{}class eu extends j{}class Zw extends eu{}class ey extends eu{}class tu extends j{}class ty extends tu{}class ry extends tu{}class sy extends j{}class ny extends sy{}class jl extends j{}class iy extends jl{}class oy extends jl{}class ay extends jl{}class ly extends j{}class dy extends ly{}class cy extends j{}class uy extends cy{}class py extends j{}class hy extends py{}class ru extends j{}class my extends ru{}class _y extends ru{}class su extends j{}class fy extends su{}class gy extends su{}class wy extends j{}class yy extends wy{}class nu extends j{}class My extends nu{}class by extends nu{async _call(S){return new bt(await super._call(S))}}class iu extends j{}class vy extends iu{}class xy extends iu{async _call(S){return new bt(await super._call(S))}}class ou extends j{}class Ty extends ou{}class Ey extends ou{async _call(S){return new bt(await super._call(S))}}class au extends j{}class Py extends au{}class Cy extends au{async _call(S){return new bt(await super._call(S))}}class Sy extends j{}class $y extends Sy{}class lu extends j{}class ky extends lu{}class Iy extends lu{async _call(S){return new Ay(await super._call(S))}}class Ay extends me{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class Fy extends j{}class Oy extends Fy{async get_image_embeddings({pixel_values:S}){return await ie(this,{pixel_values:S})}async forward(S){if((!S.image_embeddings||!S.image_positional_embeddings)&&(S={...S,...await this.get_image_embeddings(S)}),!S.input_labels&&S.input_points){const oe=S.input_points.dims.slice(0,-1),ge=oe.reduce((_e,Se)=>_e*Se,1);S.input_labels=new h.Tensor("int64",new BigInt64Array(ge).fill(1n),oe)}const L={image_embeddings:S.image_embeddings,image_positional_embeddings:S.image_positional_embeddings};return S.input_points&&(L.input_points=S.input_points),S.input_labels&&(L.input_labels=S.input_labels),S.input_boxes&&(L.input_boxes=S.input_boxes),await q(this.sessions.prompt_encoder_mask_decoder,L)}async _call(S){return new Dy(await super._call(S))}}class Dy extends me{constructor({iou_scores:S,pred_masks:L}){super(),this.iou_scores=S,this.pred_masks=L}}class du extends j{}class Ly extends du{}class zy extends du{}class cu extends j{}class By extends cu{}class Ry extends cu{}class ln extends j{}class Ny extends ln{}class jy extends ln{async _call(S){return new On(await super._call(S))}}class Vy extends ln{async _call(S){return new bt(await super._call(S))}}class Uy extends ln{async _call(S){return new pr(await super._call(S))}}class uu extends j{}class Wy extends uu{}class Gy extends uu{async _call(S){return new pr(await super._call(S))}}class Ky extends j{}class Hy extends Ky{}class Vl extends j{}class qy extends Vl{}class Qy extends Vl{async _call(S){return new On(await super._call(S))}}class Xy extends Vl{async _call(S){return new bt(await super._call(S))}}class ua extends j{}class Jy extends ua{}class Yy extends ua{async _call(S){return new On(await super._call(S))}}class Zy extends ua{async _call(S){return new bt(await super._call(S))}}class eM extends ua{async _call(S){return new pr(await super._call(S))}}class Ul extends j{}class tM extends Ul{}class rM extends Ul{async _call(S){return new On(await super._call(S))}}class sM extends Ul{async _call(S){return new bt(await super._call(S))}}class mx extends j{}class nM extends ln{}class iM extends ln{async _call(S){return new On(await super._call(S))}}class oM extends ln{async _call(S){return new bt(await super._call(S))}}class Ti extends j{}class aM extends Ti{}class lM extends Ti{async _call(S){return new On(await super._call(S))}}class dM extends Ti{async _call(S){return new bt(await super._call(S))}}class cM extends Ti{async _call(S){return new bb(await super._call(S))}}class uM extends Ti{async _call(S){return new pr(await super._call(S))}}class pM extends j{}class hM extends pM{}class Wl extends j{}class _x extends Wl{}class mM extends Wl{}class _M extends Wl{async generate_speech(S,L,{threshold:oe=.5,minlenratio:ge=0,maxlenratio:_e=20,vocoder:Se=null}={}){const De={input_ids:S},{encoder_outputs:Ge,encoder_attention_mask:Je}=await ie(this,De),lt=Ge.dims[1]/this.config.reduction_factor,yt=Math.floor(lt*_e),st=Math.floor(lt*ge),Et=this.config.num_mel_bins;let at=[],vt=null,ct=null,Tt=0;for(;;){++Tt;const yr=H(!!ct);let Pt;ct?Pt=ct.output_sequence_out:Pt=new h.Tensor("float32",new Float32Array(Et),[1,1,Et]);let Nt={use_cache_branch:yr,output_sequence:Pt,encoder_attention_mask:Je,speaker_embeddings:L,encoder_hidden_states:Ge};this.addPastKeyValues(Nt,vt),ct=await q(this.sessions.decoder_model_merged,Nt),vt=this.getPastKeyValues(ct,vt);const{prob:tr,spectrum:sr}=ct;if(at.push(sr),Tt>=st&&(Array.from(tr.data).filter(Wr=>Wr>=oe).length>0||Tt>=yt))break}const Lt=(0,h.cat)(at),{waveform:Qt}=await q(Se.sessions.model,{spectrogram:Lt});return{spectrogram:Lt,waveform:Qt}}}class fM extends j{constructor(){super(...arguments);re(this,"main_input_name","spectrogram")}}class gM extends j{}class wM extends gM{}class pu extends j{}class yM extends pu{}class MM extends pu{}class hu extends j{}class bM extends hu{}class vM extends hu{}class mu extends j{}class xM extends mu{}class TM extends mu{}class Gl extends j{}class EM extends Gl{}class PM extends Gl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class CM extends Gl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"audio_model"})}}class SM extends j{}class _u extends SM{async _call(S){return new xb(await super._call(S))}}class Kl extends j{}class fx extends Kl{}class $M extends Kl{}class kM extends Kl{}class fu extends j{}class IM extends fu{}class AM extends fu{}class gu extends j{}class FM extends gu{}class OM extends gu{async _call(S){return new bt(await super._call(S))}}class wu extends j{}class gx extends wu{}class wx extends wu{}class yu extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(L){const[oe,ge]=L.dims,_e=this.config.decoder.num_codebooks,Se=ge-_e;let De=0;for(let lt=0;lt<L.size;++lt){if(L.data[lt]===this.config.decoder.pad_token_id)continue;const yt=lt%ge,st=Math.floor(lt/ge)%_e,Et=yt-st;Et>0&&Et<=Se&&(L.data[De++]=L.data[lt])}const Ge=Math.floor(oe/_e),Je=De/(Ge*_e);return new h.Tensor(L.type,L.data.slice(0,De),[Ge,_e,Je])}prepare_inputs_for_generation(L,oe,ge){let _e=structuredClone(L);for(let De=0;De<_e.length;++De)for(let Ge=0;Ge<_e[De].length;++Ge)De%this.config.decoder.num_codebooks>=Ge&&(_e[De][Ge]=BigInt(this.config.decoder.pad_token_id));return ge.guidance_scale!==null&&ge.guidance_scale>1&&(_e=_e.concat(_e)),super.prepare_inputs_for_generation(_e,oe,ge)}async generate(L){const oe=await super.generate(L),ge=this._apply_and_filter_by_delay_pattern_mask(oe).unsqueeze_(0),{audio_values:_e}=await q(this.sessions.encodec_decode,{audio_codes:ge});return _e}}class Hl extends j{}class DM extends Hl{}class LM extends Hl{async _call(S){return new bt(await super._call(S))}}class zM extends Hl{}class ql extends j{}class BM extends ql{}class RM extends ql{async _call(S){return new bt(await super._call(S))}}class NM extends ql{}class Ql extends j{}class jM extends Ql{}class VM extends Ql{async _call(S){return new bt(await super._call(S))}}class UM extends Ql{}class Xl extends j{}class WM extends Xl{}class GM extends Xl{async _call(S){return new bt(await super._call(S))}}class KM extends Xl{}class HM extends j{}class qM extends HM{}class QM extends j{}class XM extends QM{constructor(...L){super(...L);re(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(L){const oe=this._generation_mode??"text";let ge;if(oe==="text"||!L.past_key_values){const Je=this.sessions.prepare_inputs_embeds,lt=(0,a.pick)(L,Je.inputNames);ge=await q(Je,lt)}else{const Je=this.sessions.gen_img_embeds,lt=(0,a.pick)({image_ids:L.input_ids},Je.inputNames);ge=await q(Je,lt)}const _e={...L,...ge},Se=await ce(this,_e),De=this.sessions[oe==="text"?"lm_head":"gen_head"];if(!De)throw new Error(`Unable to find "${De}" generation head`);const Ge=await q(De,(0,a.pick)(Se,De.inputNames));return{...ge,...Se,...Ge}}async generate(L){return this._generation_mode="text",super.generate(L)}async generate_images(L){this._generation_mode="image";const oe=(L.inputs??L[this.main_input_name]).dims[1],_e=(await super.generate(L)).slice(null,[oe,null]),Se=this.sessions.image_decode,{decoded_image:De}=await q(Se,{generated_tokens:_e}),Ge=De.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Je=[];for(const lt of Ge){const yt=g.RawImage.fromTensor(lt);Je.push(yt)}return Je}}class JM extends me{constructor({char_logits:S,bpe_logits:L,wp_logits:oe}){super(),this.char_logits=S,this.bpe_logits=L,this.wp_logits=oe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class YM extends j{}class ZM extends YM{async _call(S){return new JM(await super._call(S))}}class Mu extends j{}class e0 extends Mu{}class t0 extends Mu{}class bu extends j{}class r0 extends bu{}class s0 extends bu{}class n0 extends j{constructor(){super(...arguments);re(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class i0 extends n0{_merge_input_ids_with_audio_features(S){const L=S.audio_features.dims.at(-1),oe=S.audio_features.view(-1,L);return O({audio_token_id:this.config.ignore_index,...S,audio_features:oe})}}class Jl extends j{constructor(){super(...arguments);re(this,"main_input_name","input_values");re(this,"forward_params",["input_values"])}}class o0 extends me{constructor({audio_codes:S}){super(),this.audio_codes=S}}class a0 extends me{constructor({audio_values:S}){super(),this.audio_values=S}}class l0 extends Jl{async encode(S){return new o0(await q(this.sessions.encoder_model,S))}async decode(S){return new a0(await q(this.sessions.decoder_model,S))}}class d0 extends Jl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class c0 extends Jl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class Yl extends j{constructor(){super(...arguments);re(this,"main_input_name","input_values");re(this,"forward_params",["input_values"])}}class u0 extends me{constructor({audio_codes:S}){super(),this.audio_codes=S}}class p0 extends me{constructor({audio_values:S}){super(),this.audio_values=S}}class h0 extends Yl{async encode(S){return new u0(await q(this.sessions.encoder_model,S))}async decode(S){return new p0(await q(this.sessions.decoder_model,S))}}class m0 extends Yl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class _0 extends Yl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class Zl extends j{constructor(){super(...arguments);re(this,"main_input_name","input_values");re(this,"forward_params",["input_values"])}}class f0 extends Zl{async encode(S){return await q(this.sessions.encoder_model,S)}async decode(S){return await q(this.sessions.decoder_model,S)}}class g0 extends Zl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class w0 extends Zl{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class It{static async from_pretrained(S,{progress_callback:L=null,config:oe=null,cache_dir:ge=null,local_files_only:_e=!1,revision:Se="main",model_file_name:De=null,subfolder:Ge="onnx",device:Je=null,dtype:lt=null,use_external_data_format:yt=null,session_options:st={}}={}){const Et={progress_callback:L,config:oe,cache_dir:ge,local_files_only:_e,revision:Se,model_file_name:De,subfolder:Ge,device:Je,dtype:lt,use_external_data_format:yt,session_options:st};if(Et.config=await s.AutoConfig.from_pretrained(S,Et),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const at=Et.config.model_type;for(const vt of this.MODEL_CLASS_MAPPINGS){let ct=vt.get(at);if(!ct){for(const Tt of vt.values())if(Tt[0]===at){ct=Tt;break}if(!ct)continue}return await ct[1].from_pretrained(S,Et)}if(this.BASE_IF_FAIL)return W0.has(at)||console.warn(`Unknown model class "${at}", attempting to construct from base class.`),await j.from_pretrained(S,Et);throw Error(`Unsupported model type: ${at}`)}}re(It,"MODEL_CLASS_MAPPINGS",null),re(It,"BASE_IF_FAIL",!1);const yx=new Map([["bert",["BertModel",Ae]],["modernbert",["ModernBertModel",ee]],["nomic_bert",["NomicBertModel",ve]],["roformer",["RoFormerModel",Fe]],["electra",["ElectraModel",cs]],["esm",["EsmModel",Zs]],["convbert",["ConvBertModel",nr]],["camembert",["CamembertModel",us]],["deberta",["DebertaModel",Be]],["deberta-v2",["DebertaV2Model",ps]],["mpnet",["MPNetModel",En]],["albert",["AlbertModel",Sn]],["distilbert",["DistilBertModel",Ps]],["roberta",["RobertaModel",ur]],["xlm",["XLMModel",rn]],["xlm-roberta",["XLMRobertaModel",Na]],["clap",["ClapModel",EM]],["clip",["CLIPModel",Zi]],["clipseg",["CLIPSegModel",on]],["chinese_clip",["ChineseCLIPModel",nl]],["siglip",["SiglipModel",el]],["jina_clip",["JinaCLIPModel",il]],["mobilebert",["MobileBertModel",br]],["squeezebert",["SqueezeBertModel",cr]],["wav2vec2",["Wav2Vec2Model",Ny]],["wav2vec2-bert",["Wav2Vec2BertModel",tM]],["unispeech",["UniSpeechModel",qy]],["unispeech-sat",["UniSpeechSatModel",Jy]],["hubert",["HubertModel",nM]],["wavlm",["WavLMModel",aM]],["audio-spectrogram-transformer",["ASTModel",Ua]],["vits",["VitsModel",_u]],["pyannote",["PyAnnoteModel",Wy]],["wespeaker-resnet",["WeSpeakerResNetModel",Hy]],["detr",["DetrModel",Fl]],["rt_detr",["RTDetrModel",Ll]],["rt_detr_v2",["RTDetrV2Model",Bl]],["rf_detr",["RFDetrModel",ca]],["table-transformer",["TableTransformerModel",C]],["vit",["ViTModel",Go]],["ijepa",["IJepaModel",Ho]],["pvt",["PvtModel",ul]],["vit_msn",["ViTMSNModel",_l]],["vit_mae",["ViTMAEModel",ml]],["groupvit",["GroupViTModel",wl]],["fastvit",["FastViTModel",yl]],["mobilevit",["MobileViTModel",xl]],["mobilevitv2",["MobileViTV2Model",El]],["owlvit",["OwlViTModel",Cl]],["owlv2",["Owlv2Model",$l]],["beit",["BeitModel",Il]],["deit",["DeiTModel",ye]],["hiera",["HieraModel",Ye]],["convnext",["ConvNextModel",My]],["convnextv2",["ConvNextV2Model",vy]],["dinov2",["Dinov2Model",Ty]],["dinov2_with_registers",["Dinov2WithRegistersModel",Py]],["resnet",["ResNetModel",Bt]],["swin",["SwinModel",Xw]],["swin2sr",["Swin2SRModel",Zw]],["donut-swin",["DonutSwinModel",yy]],["yolos",["YolosModel",ky]],["dpt",["DPTModel",ty]],["glpn",["GLPNModel",fy]],["hifigan",["SpeechT5HifiGan",fM]],["efficientnet",["EfficientNetModel",FM]],["decision_transformer",["DecisionTransformerModel",qM]],["patchtst",["PatchTSTForPrediction",e0]],["patchtsmixer",["PatchTSMixerForPrediction",r0]],["mobilenet_v1",["MobileNetV1Model",DM]],["mobilenet_v2",["MobileNetV2Model",BM]],["mobilenet_v3",["MobileNetV3Model",jM]],["mobilenet_v4",["MobileNetV4Model",WM]],["maskformer",["MaskFormerModel",my]],["mgp-str",["MgpstrForSceneTextRecognition",ZM]],["style_text_to_speech_2",["StyleTextToSpeech2Model",hM]]]),Mx=new Map([["t5",["T5Model",le]],["longt5",["LongT5Model",Ue]],["mt5",["MT5Model",Ze]],["bart",["BartModel",kt]],["mbart",["MBartModel",vr]],["marian",["MarianModel",Ly]],["whisper",["WhisperModel",Ga]],["m2m_100",["M2M100Model",By]],["blenderbot",["BlenderbotModel",Gt]],["blenderbot-small",["BlenderbotSmallModel",Zr]]]),bx=new Map([["mimi",["MimiModel",l0]],["dac",["DacModel",h0]],["snac",["SnacModel",f0]]]),vx=new Map([["bloom",["BloomModel",Ro]],["jais",["JAISModel",ro]],["gpt2",["GPT2Model",ll]],["gptj",["GPTJModel",lo]],["gpt_bigcode",["GPTBigCodeModel",cl]],["gpt_neo",["GPTNeoModel",no]],["gpt_neox",["GPTNeoXModel",dl]],["codegen",["CodeGenModel",An]],["llama",["LlamaModel",ti]],["exaone",["ExaoneModel",mo]],["olmo",["OlmoModel",fo]],["olmo2",["Olmo2Model",wo]],["mobilellm",["MobileLLMModel",_t]],["granite",["GraniteModel",yo]],["cohere",["CohereModel",bo]],["gemma",["GemmaModel",xo]],["gemma2",["Gemma2Model",Eo]],["gemma3_text",["Gemma3Model",Co]],["helium",["HeliumModel",po]],["glm",["GlmModel",ho]],["openelm",["OpenELMModel",$o]],["qwen2",["Qwen2Model",Io]],["phi",["PhiModel",Do]],["phi3",["Phi3Model",zo]],["mpt",["MptModel",jo]],["opt",["OPTModel",Uo]],["mistral",["MistralModel",yM]],["starcoder2",["Starcoder2Model",bM]],["falcon",["FalconModel",xM]],["stablelm",["StableLmModel",IM]]]),vu=new Map([["speecht5",["SpeechT5ForSpeechToText",mM]],["whisper",["WhisperForConditionalGeneration",Ki]],["lite-whisper",["LiteWhisperForConditionalGeneration",Ka]],["moonshine",["MoonshineForConditionalGeneration",Ha]]]),y0=new Map([["speecht5",["SpeechT5ForTextToSpeech",_M]]]),M0=new Map([["vits",["VitsModel",_u]],["musicgen",["MusicgenForConditionalGeneration",yu]]]),b0=new Map([["bert",["BertForSequenceClassification",Le]],["modernbert",["ModernBertForSequenceClassification",te]],["roformer",["RoFormerForSequenceClassification",qe]],["electra",["ElectraForSequenceClassification",jr]],["esm",["EsmForSequenceClassification",tn]],["convbert",["ConvBertForSequenceClassification",dr]],["camembert",["CamembertForSequenceClassification",Ts]],["deberta",["DebertaForSequenceClassification",it]],["deberta-v2",["DebertaV2ForSequenceClassification",Er]],["mpnet",["MPNetForSequenceClassification",Pn]],["albert",["AlbertForSequenceClassification",pe]],["distilbert",["DistilBertForSequenceClassification",Qs]],["roberta",["RobertaForSequenceClassification",Jt]],["xlm",["XLMForSequenceClassification",Ba]],["xlm-roberta",["XLMRobertaForSequenceClassification",$n]],["bart",["BartForSequenceClassification",Ot]],["mbart",["MBartForSequenceClassification",Yr]],["mobilebert",["MobileBertForSequenceClassification",Bs]],["squeezebert",["SqueezeBertForSequenceClassification",Ns]]]),v0=new Map([["bert",["BertForTokenClassification",Ne]],["modernbert",["ModernBertForTokenClassification",de]],["roformer",["RoFormerForTokenClassification",Xe]],["electra",["ElectraForTokenClassification",dt]],["esm",["EsmForTokenClassification",Lr]],["convbert",["ConvBertForTokenClassification",ds]],["camembert",["CamembertForTokenClassification",Es]],["deberta",["DebertaForTokenClassification",rr]],["deberta-v2",["DebertaV2ForTokenClassification",ms]],["mpnet",["MPNetForTokenClassification",Rs]],["distilbert",["DistilBertForTokenClassification",Xs]],["roberta",["RobertaForTokenClassification",qt]],["xlm",["XLMForTokenClassification",Ui]],["xlm-roberta",["XLMRobertaForTokenClassification",Va]]]),xu=new Map([["t5",["T5ForConditionalGeneration",ue]],["longt5",["LongT5ForConditionalGeneration",Qe]],["mt5",["MT5ForConditionalGeneration",ht]],["bart",["BartForConditionalGeneration",Wt]],["mbart",["MBartForConditionalGeneration",fr]],["marian",["MarianMTModel",zy]],["m2m_100",["M2M100ForConditionalGeneration",Ry]],["blenderbot",["BlenderbotForConditionalGeneration",Zt]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",ws]]]),Tu=new Map([["bloom",["BloomForCausalLM",No]],["gpt2",["GPT2LMHeadModel",Jn]],["jais",["JAISLMHeadModel",so]],["gptj",["GPTJForCausalLM",In]],["gpt_bigcode",["GPTBigCodeForCausalLM",co]],["gpt_neo",["GPTNeoForCausalLM",io]],["gpt_neox",["GPTNeoXForCausalLM",oo]],["codegen",["CodeGenForCausalLM",Ur]],["llama",["LlamaForCausalLM",uo]],["exaone",["ExaoneForCausalLM",mt]],["olmo",["OlmoForCausalLM",go]],["olmo2",["Olmo2ForCausalLM",ai]],["mobilellm",["MobileLLMForCausalLM",_o]],["granite",["GraniteForCausalLM",Mo]],["cohere",["CohereForCausalLM",vo]],["gemma",["GemmaForCausalLM",To]],["gemma2",["Gemma2ForCausalLM",Po]],["gemma3_text",["Gemma3ForCausalLM",So]],["helium",["HeliumForCausalLM",si]],["glm",["GlmForCausalLM",gt]],["openelm",["OpenELMForCausalLM",ko]],["qwen2",["Qwen2ForCausalLM",Ao]],["phi",["PhiForCausalLM",Lo]],["phi3",["Phi3ForCausalLM",Bo]],["mpt",["MptForCausalLM",Vo]],["opt",["OPTForCausalLM",Wo]],["mbart",["MBartForCausalLM",xr]],["mistral",["MistralForCausalLM",MM]],["starcoder2",["Starcoder2ForCausalLM",vM]],["falcon",["FalconForCausalLM",TM]],["trocr",["TrOCRForCausalLM",wM]],["stablelm",["StableLmForCausalLM",AM]],["phi3_v",["Phi3VForCausalLM",js]]]),xx=new Map([["multi_modality",["MultiModalityCausalLM",XM]]]),x0=new Map([["bert",["BertForMaskedLM",Ie]],["modernbert",["ModernBertForMaskedLM",B]],["roformer",["RoFormerForMaskedLM",je]],["electra",["ElectraForMaskedLM",Ds]],["esm",["EsmForMaskedLM",en]],["convbert",["ConvBertForMaskedLM",jt]],["camembert",["CamembertForMaskedLM",xs]],["deberta",["DebertaForMaskedLM",et]],["deberta-v2",["DebertaV2ForMaskedLM",hs]],["mpnet",["MPNetForMaskedLM",zr]],["albert",["AlbertForMaskedLM",V]],["distilbert",["DistilBertForMaskedLM",Ys]],["roberta",["RobertaForMaskedLM",Rt]],["xlm",["XLMWithLMHeadModel",sn]],["xlm-roberta",["XLMRobertaForMaskedLM",ja]],["mobilebert",["MobileBertForMaskedLM",zs]],["squeezebert",["SqueezeBertForMaskedLM",_r]]]),T0=new Map([["bert",["BertForQuestionAnswering",We]],["roformer",["RoFormerForQuestionAnswering",ut]],["electra",["ElectraForQuestionAnswering",qr]],["convbert",["ConvBertForQuestionAnswering",Os]],["camembert",["CamembertForQuestionAnswering",Ls]],["deberta",["DebertaForQuestionAnswering",zt]],["deberta-v2",["DebertaV2ForQuestionAnswering",_s]],["mpnet",["MPNetForQuestionAnswering",Ar]],["albert",["AlbertForQuestionAnswering",F]],["distilbert",["DistilBertForQuestionAnswering",Js]],["roberta",["RobertaForQuestionAnswering",er]],["xlm",["XLMForQuestionAnswering",Ra]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Wi]],["mobilebert",["MobileBertForQuestionAnswering",Ir]],["squeezebert",["SqueezeBertForQuestionAnswering",Cn]]]),Eu=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",qi]],["idefics3",["Idefics3ForConditionalGeneration",Kn]],["smolvlm",["SmolVLMForConditionalGeneration",Hn]]]),E0=new Map([["llava",["LlavaForConditionalGeneration",Gn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Qa]],["moondream1",["Moondream1ForConditionalGeneration",Xa]],["florence2",["Florence2ForConditionalGeneration",Qi]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Oo]],["idefics3",["Idefics3ForConditionalGeneration",Kn]],["smolvlm",["SmolVLMForConditionalGeneration",Hn]],["paligemma",["PaliGemmaForConditionalGeneration",Ji]]]),P0=new Map([["ultravox",["UltravoxModel",i0]]]),Tx=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",qi]]]),C0=new Map([["vit",["ViTForImageClassification",Ko]],["ijepa",["IJepaForImageClassification",qo]],["pvt",["PvtForImageClassification",pl]],["vit_msn",["ViTMSNForImageClassification",fl]],["fastvit",["FastViTForImageClassification",Ml]],["mobilevit",["MobileViTForImageClassification",Tl]],["mobilevitv2",["MobileViTV2ForImageClassification",Pl]],["beit",["BeitForImageClassification",Al]],["deit",["DeiTForImageClassification",Ee]],["hiera",["HieraForImageClassification",ot]],["convnext",["ConvNextForImageClassification",by]],["convnextv2",["ConvNextV2ForImageClassification",xy]],["dinov2",["Dinov2ForImageClassification",Ey]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Cy]],["resnet",["ResNetForImageClassification",Fr]],["swin",["SwinForImageClassification",Jw]],["segformer",["SegformerForImageClassification",$M]],["efficientnet",["EfficientNetForImageClassification",OM]],["mobilenet_v1",["MobileNetV1ForImageClassification",LM]],["mobilenet_v2",["MobileNetV2ForImageClassification",RM]],["mobilenet_v3",["MobileNetV3ForImageClassification",VM]],["mobilenet_v4",["MobileNetV4ForImageClassification",GM]]]),S0=new Map([["detr",["DetrForObjectDetection",Ol]],["rt_detr",["RTDetrForObjectDetection",zl]],["rt_detr_v2",["RTDetrV2ForObjectDetection",Rl]],["rf_detr",["RFDetrForObjectDetection",d]],["table-transformer",["TableTransformerForObjectDetection",I]],["yolos",["YolosForObjectDetection",Iy]]]),$0=new Map([["owlvit",["OwlViTForObjectDetection",Sl]],["owlv2",["Owlv2ForObjectDetection",kl]],["grounding-dino",["GroundingDinoForObjectDetection",$y]]]),Ei=new Map([["detr",["DetrForSegmentation",ia]],["clipseg",["CLIPSegForImageSegmentation",eo]]]),k0=new Map([["segformer",["SegformerForSemanticSegmentation",kM]],["sapiens",["SapiensForSemanticSegmentation",iy]],["swin",["SwinForSemanticSegmentation",Yw]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",zM]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",NM]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",UM]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",KM]]]),I0=new Map([["detr",["DetrForSegmentation",ia]],["maskformer",["MaskFormerForInstanceSegmentation",_y]]]),A0=new Map([["sam",["SamModel",Oy]]]),F0=new Map([["wav2vec2",["Wav2Vec2ForCTC",jy]],["wav2vec2-bert",["Wav2Vec2BertForCTC",rM]],["unispeech",["UniSpeechForCTC",Qy]],["unispeech-sat",["UniSpeechSatForCTC",Yy]],["wavlm",["WavLMForCTC",lM]],["hubert",["HubertForCTC",iM]]]),O0=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Vy]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",sM]],["unispeech",["UniSpeechForSequenceClassification",Xy]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Zy]],["wavlm",["WavLMForSequenceClassification",dM]],["hubert",["HubertForSequenceClassification",oM]],["audio-spectrogram-transformer",["ASTForAudioClassification",Wa]]]),D0=new Map([["wavlm",["WavLMForXVector",cM]]]),L0=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",eM]],["wavlm",["WavLMForAudioFrameClassification",uM]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Uy]],["pyannote",["PyAnnoteForAudioFrameClassification",Gy]]]),z0=new Map([["vitmatte",["VitMatteForImageMatting",vl]]]),Ex=new Map([["patchtst",["PatchTSTForPrediction",t0]],["patchtsmixer",["PatchTSMixerForPrediction",s0]]]),B0=new Map([["swin2sr",["Swin2SRForImageSuperResolution",ey]]]),R0=new Map([["dpt",["DPTForDepthEstimation",ry]],["depth_anything",["DepthAnythingForDepthEstimation",ny]],["glpn",["GLPNForDepthEstimation",gy]],["sapiens",["SapiensForDepthEstimation",oy]],["depth_pro",["DepthProForDepthEstimation",dy]],["metric3d",["Metric3DForDepthEstimation",uy]],["metric3dv2",["Metric3Dv2ForDepthEstimation",hy]]]),N0=new Map([["sapiens",["SapiensForNormalEstimation",ay]]]),j0=new Map([["vitpose",["VitPoseForPoseEstimation",Xo]]]),V0=new Map([["clip",["CLIPVisionModelWithProjection",qn]],["siglip",["SiglipVisionModel",rl]],["jina_clip",["JinaCLIPVisionModel",al]]]),U0=[[yx,E.EncoderOnly],[Mx,E.EncoderDecoder],[vx,E.DecoderOnly],[bx,E.AutoEncoder],[b0,E.EncoderOnly],[v0,E.EncoderOnly],[xu,E.Seq2Seq],[vu,E.Seq2Seq],[Tu,E.DecoderOnly],[xx,E.MultiModality],[x0,E.EncoderOnly],[T0,E.EncoderOnly],[Eu,E.Vision2Seq],[E0,E.ImageTextToText],[P0,E.AudioTextToText],[C0,E.EncoderOnly],[Ei,E.EncoderOnly],[I0,E.EncoderOnly],[k0,E.EncoderOnly],[z0,E.EncoderOnly],[Ex,E.EncoderOnly],[B0,E.EncoderOnly],[R0,E.EncoderOnly],[N0,E.EncoderOnly],[j0,E.EncoderOnly],[S0,E.EncoderOnly],[$0,E.EncoderOnly],[A0,E.MaskGeneration],[F0,E.EncoderOnly],[O0,E.EncoderOnly],[y0,E.Seq2Seq],[M0,E.EncoderOnly],[D0,E.EncoderOnly],[L0,E.EncoderOnly],[V0,E.EncoderOnly]];for(const[b,S]of U0)for(const[L,oe]of b.values())M.set(L,S),T.set(oe,L),w.set(L,oe);const Px=[["MusicgenForConditionalGeneration",yu,E.Musicgen],["Phi3VForCausalLM",js,E.Phi3V],["CLIPTextModelWithProjection",Za,E.EncoderOnly],["SiglipTextModel",tl,E.EncoderOnly],["JinaCLIPTextModel",ol,E.EncoderOnly],["ClapTextModelWithProjection",PM,E.EncoderOnly],["ClapAudioModelWithProjection",CM,E.EncoderOnly],["DacEncoderModel",m0,E.EncoderOnly],["DacDecoderModel",_0,E.EncoderOnly],["MimiEncoderModel",d0,E.EncoderOnly],["MimiDecoderModel",c0,E.EncoderOnly],["SnacEncoderModel",g0,E.EncoderOnly],["SnacDecoderModel",w0,E.EncoderOnly]];for(const[b,S,L]of Px)M.set(b,L),T.set(S,b),w.set(b,S);const W0=new Map([["modnet",Ei],["birefnet",Ei],["isnet",Ei],["ben",Ei]]);for(const[b,S]of W0.entries())S.set(b,["PreTrainedModel",j]),M.set(b,E.EncoderOnly),T.set(j,b),w.set(b,j);class Pu extends It{}re(Pu,"MODEL_CLASS_MAPPINGS",U0.map(S=>S[0])),re(Pu,"BASE_IF_FAIL",!0);class G0 extends It{}re(G0,"MODEL_CLASS_MAPPINGS",[b0]);class K0 extends It{}re(K0,"MODEL_CLASS_MAPPINGS",[v0]);class H0 extends It{}re(H0,"MODEL_CLASS_MAPPINGS",[xu]);class q0 extends It{}re(q0,"MODEL_CLASS_MAPPINGS",[vu]);class Q0 extends It{}re(Q0,"MODEL_CLASS_MAPPINGS",[y0]);class X0 extends It{}re(X0,"MODEL_CLASS_MAPPINGS",[M0]);class J0 extends It{}re(J0,"MODEL_CLASS_MAPPINGS",[Tu]);class Y0 extends It{}re(Y0,"MODEL_CLASS_MAPPINGS",[x0]);class Z0 extends It{}re(Z0,"MODEL_CLASS_MAPPINGS",[T0]);class eb extends It{}re(eb,"MODEL_CLASS_MAPPINGS",[Eu]);class tb extends It{}re(tb,"MODEL_CLASS_MAPPINGS",[C0]);class rb extends It{}re(rb,"MODEL_CLASS_MAPPINGS",[Ei]);class sb extends It{}re(sb,"MODEL_CLASS_MAPPINGS",[k0]);class nb extends It{}re(nb,"MODEL_CLASS_MAPPINGS",[I0]);class ib extends It{}re(ib,"MODEL_CLASS_MAPPINGS",[S0]);class ob extends It{}re(ob,"MODEL_CLASS_MAPPINGS",[$0]);class ab extends It{}re(ab,"MODEL_CLASS_MAPPINGS",[A0]);class lb extends It{}re(lb,"MODEL_CLASS_MAPPINGS",[F0]);class db extends It{}re(db,"MODEL_CLASS_MAPPINGS",[O0]);class cb extends It{}re(cb,"MODEL_CLASS_MAPPINGS",[D0]);class ub extends It{}re(ub,"MODEL_CLASS_MAPPINGS",[L0]);class pb extends It{}re(pb,"MODEL_CLASS_MAPPINGS",[Tx]);class hb extends It{}re(hb,"MODEL_CLASS_MAPPINGS",[z0]);class mb extends It{}re(mb,"MODEL_CLASS_MAPPINGS",[B0]);class _b extends It{}re(_b,"MODEL_CLASS_MAPPINGS",[R0]);class fb extends It{}re(fb,"MODEL_CLASS_MAPPINGS",[N0]);class gb extends It{}re(gb,"MODEL_CLASS_MAPPINGS",[j0]);class wb extends It{}re(wb,"MODEL_CLASS_MAPPINGS",[V0]);class yb extends It{}re(yb,"MODEL_CLASS_MAPPINGS",[E0]);class Mb extends It{}re(Mb,"MODEL_CLASS_MAPPINGS",[P0]);class Cx extends me{constructor({logits:S,past_key_values:L,encoder_outputs:oe,decoder_attentions:ge=null,cross_attentions:_e=null}){super(),this.logits=S,this.past_key_values=L,this.encoder_outputs=oe,this.decoder_attentions=ge,this.cross_attentions=_e}}class bt extends me{constructor({logits:S,...L}){super(),this.logits=S;const oe=Object.values(L);oe.length>0&&(this.attentions=oe)}}class bb extends me{constructor({logits:S,embeddings:L}){super(),this.logits=S,this.embeddings=L}}class pr extends me{constructor({logits:S}){super(),this.logits=S}}class wr extends me{constructor({logits:S}){super(),this.logits=S}}class Pr extends me{constructor({start_logits:S,end_logits:L}){super(),this.start_logits=S,this.end_logits=L}}class On extends me{constructor({logits:S}){super(),this.logits=S}}class Sx extends me{constructor({logits:S,past_key_values:L}){super(),this.logits=S,this.past_key_values=L}}class vb extends me{constructor({alphas:S}){super(),this.alphas=S}}class xb extends me{constructor({waveform:S,spectrogram:L}){super(),this.waveform=S,this.spectrogram=L}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,i.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);for(let p=0;p<c.length;++p)c[p].push(0);this.mel_filters=c,this.window=(0,i.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,i.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let u=0;u<p.length;++u)p[u]=(p[u]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>o});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var n=t("./src/models/feature_extractors.js");class o{static async from_pretrained(l,c={}){const p=await(0,i.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),u=p.feature_extractor_type,h=n[u];if(!h)throw new Error(`Unknown feature_extractor_type: '${u}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new h(p)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js"),n=t("./src/base/image_processors_utils.js"),o=t("./src/models/image_processors.js");class a{static async from_pretrained(c,p={}){const u=await(0,i.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,p),h=u.image_processor_type??u.feature_extractor_type;let g=o[h];return g||(h!==void 0&&console.warn(`Image processor type '${h}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),g=n.ImageProcessor),new g(u)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js"),n=t("./src/base/processing_utils.js"),o=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(u,h={}){const g=await(0,i.getModelJSON)(u,s.IMAGE_PROCESSOR_NAME,!0,h),{image_processor_type:f,feature_extractor_type:P,processor_class:A}=g;if(A&&o[A])return o[A].from_pretrained(u,h);if(!f&&!P)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const v={};if(f){const k=a[f];if(!k)throw new Error(`Unknown image_processor_type: '${f}'.`);v.image_processor=new k(g)}if(P){const k=a[P];if(k)v.image_processor=new k(g);else{const E=l[P];if(!E)throw new Error(`Unknown feature_extractor_type: '${P}'.`);v.feature_extractor=new E(g)}}const y={};return new n.Processor(y,v)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,i.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,i.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,i.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,c,p){let u;const h=a.length-l;if(h>0)if(c==="rand_trunc"){const g=Math.floor(Math.random()*(h+1));a=a.subarray(g,g+l),u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(h<0){let g=new Float64Array(l);if(g.set(a),p==="repeat")for(let f=a.length;f<l;f+=a.length)g.set(a.subarray(0,Math.min(a.length,l-f)),f);else if(p==="repeatpad")for(let f=a.length;f<-h;f+=a.length)g.set(a,f);a=g}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return u.unsqueeze_(0)}async _extract_fbank_features(a,l,c=null){return(0,i.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){var c;const l=(c=this.size)==null?void 0:c.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const p=Math.floor(l/this.crop_pct),[u,h]=this.get_resize_output_image_size(a,{shortest_edge:p});a=await a.resize(u,h,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class n extends i{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>i});var s=t("./src/models/encodec/feature_extraction_encodec.js");class i extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>o,DetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],u=(0,i.full)(p,1n);return{...c,pixel_mask:u}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class o extends n{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{pad_image(a,l,c,p={}){const[u,h,g]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(g).fill(f));let P=this.image_std;Array.isArray(P)||(P=new Array(g).fill(f));const A=f.map((v,y)=>-v/P[y]);return super.pad_image(a,l,c,{center:!0,constant_values:A,...p})}}class n extends i{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(o){super(o),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,a.length/l];return{input_values:new i.Tensor("float32",a,c)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>o.DacFeatureExtractor,EncodecFeatureExtractor:()=>i.EncodecFeatureExtractor,ImageFeatureExtractor:()=>P.ImageProcessor,MoonshineFeatureExtractor:()=>a.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>l.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>p.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>h.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>g.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>f.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),i=t("./src/models/encodec/feature_extraction_encodec.js"),n=t("./src/models/clap/feature_extraction_clap.js"),o=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/moonshine/feature_extraction_moonshine.js"),l=t("./src/models/pyannote/feature_extraction_pyannote.js"),c=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),p=t("./src/models/snac/feature_extraction_snac.js"),u=t("./src/models/speecht5/feature_extraction_speecht5.js"),h=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),g=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),f=t("./src/models/whisper/feature_extraction_whisper.js"),P=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class o extends s.Processor{constructor(l,c){super(l,c);const{tasks_answer_post_processing_type:p,task_prompts_without_inputs:u,task_prompts_with_input:h}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(p??{})),this.task_prompts_without_inputs=new Map(Object.entries(u??{})),this.task_prompts_with_input=new Map(Object.entries(h??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[u,h]of this.task_prompts_with_input)if(p.includes(u)){c.push(h.replaceAll("{input}",p).replaceAll(u,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const u=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let h;switch(u){case"pure_text":h=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const g=u==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[g]),P=[],A=[];for(const[v,y,...k]of f)P.push(y?y.trim():P.at(-1)??""),A.push(k.map((E,M)=>(Number(E)+.5)/this.size_per_bin*p[M%2]));h={labels:P,[g]:A};break;default:throw new Error(`Task "${c}" (of type "${u}") not yet implemented.`)}return{[c]:h}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const u=await this.image_processor(l,p),h=c?this.tokenizer(c,p):{};return{...u,...h}}}re(o,"tokenizer_class",n.AutoTokenizer),re(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a){const l=await super._call(a),c=l.pixel_values.dims,p=(0,i.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/image_processors_utils.js");function a(c,p){const h=c.dims.at(-1)-1,g=c.tolist();g.fill(!1,0,1),g.fill(!1,h);const f=p.tolist();return g.map((P,A)=>P?A:null).filter(P=>P!==null).map(P=>f[P])}class l extends s.Processor{async _call(p,u,h={}){const g=p?await this.image_processor(p,h):{};return{...u?this.tokenizer(u,h):{},...g}}post_process_grounded_object_detection(p,u,{box_threshold:h=.25,text_threshold:g=.25,target_sizes:f=null}={}){const{logits:P,pred_boxes:A}=p,v=P.dims[0];if(f!==null&&f.length!==v)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const y=P.dims.at(1),k=P.sigmoid(),E=k.max(-1).tolist(),M=A.tolist().map(T=>T.map($=>(0,o.center_to_corners_format)($))),w=[];for(let T=0;T<v;++T){const $=f!==null?f[T]:null;$!==null&&(M[T]=M[T].map(U=>U.map((Z,H)=>Z*$[(H+1)%2])));const z=E[T],R=[],Q=[],q=[];for(let U=0;U<y;++U){const Z=z[U];if(Z<=h)continue;const H=M[T][U],J=k[T][U];R.push(Z),q.push(H);const ie=a(J.gt(g),u[T]);Q.push(ie)}w.push({scores:R,boxes:q,labels:this.batch_decode(Q)})}return w}}re(l,"tokenizer_class",n.AutoTokenizer),re(l,"image_processor_class",i.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[c,p]=a.dims.slice(-2);const u=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/u),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*u),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(a,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(a))p=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?p=a:p=[a]}let u=[],h=[],g=[];const f=[],P=[];for(const T of p){let $=await Promise.all(T.map(Q=>this.preprocess(Q)));f.push(...$.map(Q=>Q.original_size)),P.push(...$.map(Q=>Q.reshaped_input_size)),$.forEach(Q=>Q.pixel_values.unsqueeze_(0));const{longest_edge:z}=this.max_image_size;let R;if(l??this.do_image_splitting){let Q=new Array($.length),q=new Array($.length);R=await Promise.all($.map(async(U,Z)=>{const H=this.get_resize_for_vision_encoder(U.pixel_values,z),J=await(0,i.interpolate_4d)(U.pixel_values,{size:[H.height,H.width]}),{frames:ie,num_splits_h:ae,num_splits_w:ce}=await this.split_image(J,this.max_image_size);return Q[Z]=ae,q[Z]=ce,(0,i.cat)(ie,0)})),h.push(Q),g.push(q)}else{const Q=[z,z];R=await Promise.all($.map(q=>(0,i.interpolate_4d)(q.pixel_values,{size:Q}))),h.push(new Array($.length).fill(0)),g.push(new Array($.length).fill(0))}u.push((0,i.cat)(R,0))}const A=u.length,[v,y,k,E]=u[0].dims;let M,w;if(A===1)M=u[0].unsqueeze_(0),w=(0,i.full)([A,v,k,E],!0);else{const T=Math.max(...u.map(R=>R.dims.at(0)));w=(0,i.full)([A,T,k,E],!0);const $=w.data,z=T*k*E;for(let R=0;R<A;++R){const Q=u[R].dims[0];if(Q<T){u[R]=(0,i.cat)([u[R],(0,i.full)([T-Q,y,k,E],0)],0);const q=R*z+Q*k*E,U=(R+1)*z;$.fill(!1,q,U)}}M=(0,i.stack)(u,0)}return{pixel_values:M,pixel_attention_mask:w,original_sizes:f,reshaped_input_sizes:P,...c?{rows:h,cols:g}:{}}}async split_image(a,{longest_edge:l}){const c=l,p=l,u=[],[h,g]=a.dims.slice(-2);let f=0,P=0;if(h>c||g>p){f=Math.ceil(h/c),P=Math.ceil(g/p);const A=Math.ceil(h/f),v=Math.ceil(g/P);for(let E=0;E<f;++E)for(let M=0;M<P;++M){let w,T,$,z;E===f-1?(T=h-A,z=h):(T=E*A,z=(E+1)*A),M===P-1?(w=g-v,$=g):(w=M*v,$=(M+1)*v);const R=[T,w],Q=[z,$],q=await(0,i.slice)(a,R,Q,[2,3]);u.push(q)}const y=c,k=p;(h!==y||g!==k)&&(a=await(0,i.interpolate_4d)(a,{size:[y,k]}))}return u.push(a),{frames:u,num_splits_h:f,num_splits_w:P}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");var o=t("./src/utils/core.js");function a(u,h,g,f,P,A){let v="";for(let y=0;y<h;++y){for(let k=0;k<g;++k)v+=f+`<row_${y+1}_col_${k+1}>`+P.repeat(u);v+=`
`}return v+=`
${f}${A}`+P.repeat(u)+`${f}`,v}function l(u,h,g,f){return`${h}${f}`+g.repeat(u)+`${h}`}function c(u,h,g,f,P,A){return u===0&&h===0?l(g,f,P,A):a(g,u,h,f,P,A)}class p extends s.Processor{constructor(){super(...arguments);re(this,"fake_image_token","<fake_token_around_image>");re(this,"image_token","<image>");re(this,"global_img_token","<global-img>")}async _call(g,f=null,P={}){P.return_row_col_info??(P.return_row_col_info=!0);let A;f&&(A=await this.image_processor(f,P)),Array.isArray(g)||(g=[g]);const v=A.rows??[new Array(g.length).fill(0)],y=A.cols??[new Array(g.length).fill(0)],k=this.config.image_seq_len,E=[],M=[];for(let T=0;T<g.length;++T){const $=g[T],z=v[T],R=y[T];E.push((0,o.count)($,this.image_token));const Q=z.map((Z,H)=>c(Z,R[H],k,this.fake_image_token,this.image_token,this.global_img_token)),q=$.split(this.image_token);if(q.length===0)throw new Error("The image token should be present in the text.");let U=q[0];for(let Z=0;Z<Q.length;++Z)U+=Q[Z]+q[Z+1];M.push(U)}return{...this.tokenizer(M),...A}}}re(p,"image_processor_class",i.AutoImageProcessor),re(p,"tokenizer_class",n.AutoTokenizer),re(p,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>i.BitImageProcessor,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPImageProcessor:()=>o.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>h.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>g.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>P.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>v.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>y.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>k.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>E.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>E.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>M.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>M.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>w.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>w.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>T.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>T.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>$.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>$.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>z.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>z.MobileViTImageProcessor,NougatImageProcessor:()=>R.NougatImageProcessor,OwlViTFeatureExtractor:()=>q.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>q.OwlViTImageProcessor,Owlv2ImageProcessor:()=>Q.Owlv2ImageProcessor,Phi3VImageProcessor:()=>U.Phi3VImageProcessor,PvtImageProcessor:()=>Z.PvtImageProcessor,Qwen2VLImageProcessor:()=>H.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>J.RTDetrImageProcessor,SamImageProcessor:()=>ie.SamImageProcessor,SegformerFeatureExtractor:()=>ae.SegformerFeatureExtractor,SegformerImageProcessor:()=>ae.SegformerImageProcessor,SiglipImageProcessor:()=>ce.SiglipImageProcessor,SmolVLMImageProcessor:()=>he.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>N.Swin2SRImageProcessor,VLMImageProcessor:()=>A.VLMImageProcessor,ViTFeatureExtractor:()=>O.ViTFeatureExtractor,ViTImageProcessor:()=>O.ViTImageProcessor,VitMatteImageProcessor:()=>G.VitMatteImageProcessor,VitPoseImageProcessor:()=>se.VitPoseImageProcessor,YolosFeatureExtractor:()=>X.YolosFeatureExtractor,YolosImageProcessor:()=>X.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),i=t("./src/models/bit/image_processing_bit.js"),n=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),o=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),u=t("./src/models/dpt/image_processing_dpt.js"),h=t("./src/models/efficientnet/image_processing_efficientnet.js"),g=t("./src/models/glpn/image_processing_glpn.js"),f=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),P=t("./src/models/idefics3/image_processing_idefics3.js"),A=t("./src/models/janus/image_processing_janus.js"),v=t("./src/models/jina_clip/image_processing_jina_clip.js"),y=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),k=t("./src/models/mask2former/image_processing_mask2former.js"),E=t("./src/models/maskformer/image_processing_maskformer.js"),M=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),w=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),T=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),$=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),z=t("./src/models/mobilevit/image_processing_mobilevit.js"),R=t("./src/models/nougat/image_processing_nougat.js"),Q=t("./src/models/owlv2/image_processing_owlv2.js"),q=t("./src/models/owlvit/image_processing_owlvit.js"),U=t("./src/models/phi3_v/image_processing_phi3_v.js"),Z=t("./src/models/pvt/image_processing_pvt.js"),H=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),J=t("./src/models/rt_detr/image_processing_rt_detr.js"),ie=t("./src/models/sam/image_processing_sam.js"),ae=t("./src/models/segformer/image_processing_segformer.js"),ce=t("./src/models/siglip/image_processing_siglip.js"),he=t("./src/models/smolvlm/image_processing_smolvlm.js"),N=t("./src/models/swin2sr/image_processing_swin2sr.js"),O=t("./src/models/vit/image_processing_vit.js"),G=t("./src/models/vitmatte/image_processing_vitmatte.js"),se=t("./src/models/vitpose/image_processing_vitpose.js"),X=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(o){super({do_pad:!0,pad_size:{width:o.image_size,height:o.image_size},...o}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(o,a,l,c){return super.pad_image(o,a,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{constructor(u,h){super(u,h),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(u,{images:h=null,chat_template:g="default"}={}){h?Array.isArray(h)||(h=[h]):h=await Promise.all(u.filter(R=>R.images).flatMap(R=>R.images).map(R=>l.RawImage.read(R)));const f=this.tokenizer,P=f.apply_chat_template(u,{tokenize:!1,add_generation_prompt:!0,chat_template:g}),A=R=>f.encode(R,{add_special_tokens:!1}),v=P.split(this.image_tag),y=v.length-1;if(h.length!==y)throw new Error(`Number of images provided (${h.length}) does not match number of "${this.image_tag}" image tags (${y})`);const[k,E,M]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let w=A(v[0]),T=new Array(w.length).fill(!1);for(let R=1;R<v.length;++R){const Q=new Array(this.num_image_tokens).fill(k),q=A(v[R]);w=(0,o.mergeArrays)(w,[E],Q,[M],q);const U=new Array(this.num_image_tokens).fill(!0);T=(0,o.mergeArrays)(T,[!1],U,[!1],new Array(q.length).fill(!1))}const $=[1,w.length],z={input_ids:new a.Tensor("int64",w,$),attention_mask:new a.Tensor("int64",new Array(w.length).fill(1),$),images_seq_mask:new a.Tensor("bool",T,$),images_emb_mask:new a.Tensor("bool",new Array(y*this.num_image_tokens).fill(!0),[1,y,this.num_image_tokens])};if(h&&h.length>0){const R=await this.image_processor(h);return R.pixel_values.unsqueeze_(0),{...z,...R}}return z}}re(c,"image_processor_class",i.AutoImageProcessor),re(c,"tokenizer_class",n.AutoTokenizer),re(c,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(o){const{resize_mode:a,fill_color:l,interpolation:c,size:p,...u}=o,h=a==="squash"?{width:p,height:p}:a==="shortest"?{shortest_edge:p}:{longest_edge:p},g=c==="bicubic"?3:2;super({...u,size:h,resample:g,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class o extends s.Processor{async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const u=l?this.tokenizer(l,p):{},h=c?await this.image_processor(c,p):{};return{...u,...h}}}re(o,"tokenizer_class",n.AutoTokenizer),re(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>i});var s=t("./src/models/maskformer/image_processing_maskformer.js");class i extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class n extends i{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,u){if(!a.hasOwnProperty(u))throw new Error(`Format ${u} is not supported.`);const[h,g]=a[u],f=this[h].bind(this),[P,A]=p.dims,v=[],y=[],k=p.tolist();for(let M=0;M<P;++M){const w=k[M],T=[],$=[];for(let R=1;R<A;++R){const[Q,q]=(0,o.max)((0,o.softmax)(w[R]));if($.push(Q),q==g)break;T.push(q)}const z=$.length>0?$.reduce((R,Q)=>R*Q,1):0;y.push(T),v.push(z)}return[f(y),v]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(u=>u.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(u=>u.replaceAll(" ",""))}batch_decode([p,u,h]){const[g,f]=this._decode_helper(p,"char"),[P,A]=this._decode_helper(u,"bpe"),[v,y]=this._decode_helper(h,"wp"),k=[],E=[];for(let M=0;M<g.length;++M){const[w,T]=(0,o.max)([f[M],A[M],y[M]]);k.push([g[M],P[M],v[M]][T]),E.push(w)}return{generated_text:k,scores:E,char_preds:g,bpe_preds:P,wp_preds:v}}static async from_pretrained(...p){const u=await super.from_pretrained(...p),h=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),g=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return u.components={image_processor:u.image_processor,char_tokenizer:u.tokenizer,bpe_tokenizer:h,wp_tokenizer:g},u}async _call(p,u=null){const h=await this.image_processor(p);return u&&(h.labels=this.tokenizer(u).input_ids),h}}re(l,"tokenizer_class",n.AutoTokenizer),re(l,"image_processor_class",i.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new i.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}re(o,"tokenizer_class",i.AutoTokenizer),re(o,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>i});var s=t("./src/models/donut/image_processing_donut.js");class i extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>i});var s=t("./src/models/owlvit/image_processing_owlvit.js");class i extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends i{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class o extends s.Processor{}re(o,"tokenizer_class",n.AutoTokenizer),re(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");const o="<image>";function a(c,p,u,h,g){return`${h.repeat(u*g)}${p}${c}
`}class l extends s.Processor{async _call(p,u=null,h={}){u||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),u=""),Array.isArray(p)||(p=[p]),Array.isArray(u)||(u=[u]);const g=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let P;u.some(y=>y.includes(o))?P=u.map(y=>{const k=y.replaceAll(o,o.repeat(f)),E=k.lastIndexOf(o),M=E===-1?0:E+o.length;return k.slice(0,M)+g+k.slice(M)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),P=u.map(y=>a(y,g,f,o,p.length)));const A=this.tokenizer(P,h);return{...await this.image_processor(p,h),...A}}}re(l,"tokenizer_class",n.AutoTokenizer),re(l,"image_processor_class",i.AutoImageProcessor),re(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");const n=336,o=[2,3],{ceil:a,floor:l,sqrt:c}=Math;class p extends s.ImageProcessor{constructor(h){super({...h,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=h.num_crops}calc_num_image_tokens_from_image_size(h,g){const{num_img_tokens:f}=this.config;return l((l(g/n)*l(h/n)+1)*f+1+(l(g/n)+1)*c(f))}get_resize_output_image_size(h,g){const f=this._num_crops,[P,A]=h.size;let v=P/A,y=1;for(;y*Math.ceil(y/v)<=f;)y+=1;y-=1;const k=Math.floor(y*336),E=Math.floor(k/v);return[k,E]}pad_image(h,g,f,P={}){const[A,v]=g,y=n*a(A/n),k=n*a(v/n),E=[1,1,1].map((M,w)=>(M-this.image_mean[w])/this.image_std[w]);return super.pad_image(h,g,{width:k,height:y},{center:!0,constant_values:E,...P})}async _call(h,{num_crops:g=null}={}){if(this._num_crops=g??(g=this.config.num_crops),g<4||c(g)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(h)||(h=[h]);const f=h.length,P=await Promise.all(h.map(T=>this.preprocess(T))),A=P.map(T=>T.original_size),v=P.map(T=>T.reshaped_input_size),y=[];for(const{pixel_values:T}of P){T.unsqueeze_(0);const[$,z]=T.dims.slice(-2),R=await(0,i.interpolate_4d)(T,{size:[n,n],mode:"bicubic"});if(g>0){const Q=[],q=c(g),U=l(z/q),Z=l($/q);for(let J=0;J<q;++J)for(let ie=0;ie<q;++ie){let ae,ce,he,N;J===q-1?(ce=$-Z,N=$):(ce=J*Z,N=(J+1)*Z),ie===q-1?(ae=z-U,he=z):(ae=ie*U,he=(ie+1)*U);const O=[ce,ae],G=[N,he],se=await(0,i.slice)(T,O,G,o);Q.push(se)}const H=await(0,i.interpolate_4d)((0,i.cat)(Q,0),{size:[n,n],mode:"bicubic"});y.push((0,i.cat)([R,H],0))}else y.push(R)}const k=(0,i.stack)(y,0),E=v.map(T=>T.map($=>n*a($/n))),M=new i.Tensor("int64",E.flat(),[f,2]),w=E.map(([T,$])=>this.calc_num_image_tokens_from_image_size($,T));return{pixel_values:k,original_sizes:A,reshaped_input_sizes:v,image_sizes:M,num_img_tokens:w}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");const o="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{async _call(p,u=null,{padding:h=!0,truncation:g=!0,num_crops:f=null}={}){Array.isArray(p)||(p=[p]);let P,A;if(u){A=await this.image_processor(u,{num_crops:f});const{num_img_tokens:v}=A,y=p.map((E,M)=>E.split(a).join(o.repeat(v[M])));P=this.tokenizer(y,{padding:h,truncation:g});const k=this.tokenizer.model.convert_tokens_to_ids([o])[0];P.input_ids.map_(E=>E==k?-E:E)}else P=this.tokenizer(p);return{...P,...A}}}re(l,"image_processor_class",i.AutoImageProcessor),re(l,"tokenizer_class",n.AutoTokenizer)},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,GroundingDinoProcessor:()=>i.GroundingDinoProcessor,Idefics3Processor:()=>n.Idefics3Processor,JinaCLIPProcessor:()=>a.JinaCLIPProcessor,MgpstrProcessor:()=>l.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>h.PaliGemmaProcessor,Phi3VProcessor:()=>u.Phi3VProcessor,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,Qwen2VLProcessor:()=>f.Qwen2VLProcessor,SamProcessor:()=>P.SamProcessor,SmolVLMProcessor:()=>A.SmolVLMProcessor,SpeechT5Processor:()=>v.SpeechT5Processor,UltravoxProcessor:()=>y.UltravoxProcessor,VLChatProcessor:()=>o.VLChatProcessor,Wav2Vec2Processor:()=>k.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>E.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>M.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),i=t("./src/models/grounding_dino/processing_grounding_dino.js"),n=t("./src/models/idefics3/processing_idefics3.js"),o=t("./src/models/janus/processing_janus.js"),a=t("./src/models/jina_clip/processing_jina_clip.js"),l=t("./src/models/mgp_str/processing_mgp_str.js"),c=t("./src/models/moonshine/processing_moonshine.js"),p=t("./src/models/owlvit/processing_owlvit.js"),u=t("./src/models/phi3_v/processing_phi3_v.js"),h=t("./src/models/paligemma/processing_paligemma.js"),g=t("./src/models/pyannote/processing_pyannote.js"),f=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),P=t("./src/models/sam/processing_sam.js"),A=t("./src/models/smolvlm/processing_smolvlm.js"),v=t("./src/models/speecht5/processing_speecht5.js"),y=t("./src/models/ultravox/processing_ultravox.js"),k=t("./src/models/wav2vec2/processing_wav2vec2.js"),E=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),M=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");class o extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new i.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,u=[];for(const h of l.tolist()){const g=[];let f=-1;for(let P=0;P<h.length;++P){const A=(0,n.softmax)(h[P]),[v,y]=(0,n.max)(A),[k,E]=[P,P+1];y!==f?(f=y,g.push({id:y,start:k,end:E,score:v})):(g.at(-1).end=E,g.at(-1).score+=v)}u.push(g.map(({id:P,start:A,end:v,score:y})=>({id:P,start:A*p,end:v*p,confidence:y/(v-A)})))}return u}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>n});var s=t("./src/base/processing_utils.js"),i=t("./src/models/pyannote/feature_extraction_pyannote.js");class n extends s.Processor{async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}re(n,"feature_extractor_class",i.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:u}=await super._call(a,...l);let h=c;const{temporal_patch_size:g,merge_size:f,patch_size:P}=this.config;h.dims[0]===1&&(h=(0,i.cat)(Array.from({length:g},()=>h),0));const A=h.dims[0]/g,v=h.dims[1],y=Math.floor(h.dims[2]/P),k=Math.floor(h.dims[3]/P),E=h.view(A,g,v,Math.floor(y/f),f,P,Math.floor(k/f),f,P).permute(0,3,6,4,7,2,1,5,8).view(A*y*k,v*g*P*P),M=new i.Tensor("int64",[A,y,k],[1,3]);return{pixel_values:E,image_grid_thw:M,original_sizes:p,reshaped_input_sizes:u}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");class o extends s.Processor{async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let u,h;if(c&&(u=await this.image_processor(c),h=u.image_grid_thw),h){let f=this.image_processor.config.merge_size**2,P=0;const A=h.tolist();l=l.map(v=>{for(;v.includes("<|image_pad|>");){const y=Number(A[P++].reduce((k,E)=>k*E,1n));v=v.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(y/f)))}return v.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...u}}}re(o,"image_processor_class",i.AutoImageProcessor),re(o,"tokenizer_class",n.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/core.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{reshape_input_points(l,c,p,u=!1){l=structuredClone(l);let h=(0,i.calculateDimensions)(l);if(h.length===3)u||(h=[1,...h]),l=[l];else if(h.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let g=0;g<l.length;++g){let f=c[g],P=p[g],A=[P[0]/f[0],P[1]/f[1]];for(let v=0;v<l[g].length;++v)for(let y=0;y<l[g][v].length;++y)for(let k=0;k<l[g][v][y].length;++k)l[g][v][y][k]*=A[k%2]}return new n.Tensor("float32",Float32Array.from(l.flat(1/0)),h)}add_input_labels(l,c){let p=(0,i.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((u,h)=>u!==c.dims[h]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:u=null}={}){const h=await super._call(l);if(c&&(h.input_points=this.reshape_input_points(c,h.original_sizes,h.reshaped_input_sizes)),p){if(!h.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");h.input_labels=this.add_input_labels(p,h.input_points)}return u&&(h.input_boxes=this.reshape_input_points(u,h.original_sizes,h.reshaped_input_sizes,!0)),h}async post_process_masks(l,c,p,{mask_threshold:u=0,binarize:h=!0,pad_size:g=null}={}){const f=[];g=g??this.pad_size;const P=[g.height,g.width];for(let A=0;A<c.length;++A){const v=c[A],y=p[A];let k=await(0,n.interpolate_4d)(l[A],{mode:"bilinear",size:P});if(k=k.slice(null,null,[0,y[0]],[0,y[1]]),k=await(0,n.interpolate_4d)(k,{mode:"bilinear",size:v}),h){const E=k.data,M=new Uint8Array(E.length);for(let w=0;w<E.length;++w)E[w]>u&&(M[w]=1);k=new n.Tensor("bool",M,k.dims)}f.push(k)}return f}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:u=512/1500,points_per_crop:h=32,crop_n_points_downscale_factor:g=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>n});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js");class n extends s.Processor{async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}re(n,"image_processor_class",i.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,n.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);for(let u=0;u<p.length;++u)p[u].push(0);this.mel_filters=p,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,n.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:u=!0,return_attention_mask:h=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let g=await this._extract_fbank_features(l,this.config.max_length);if(u){const[M,w]=g.dims,T=g.data;for(let $=0;$<w;++$){let z=0;for(let U=0;U<M;++U)z+=T[U*w+$];const R=z/M;let Q=0;for(let U=0;U<M;++U)Q+=(T[U*w+$]-R)**2;Q/=M-1;const q=Math.sqrt(Q+1e-7);for(let U=0;U<M;++U){const Z=U*w+$;T[Z]=(T[Z]-R)/q}}}let f;if(c){const[M,w]=g.dims,T=g.data,$=M%p;if($>0){const z=new Float32Array(w*(M+$));z.set(T),z.fill(this.config.padding_value,T.length);const R=M+$;g=new i.Tensor(g.type,z,[R,w]),h&&(f=new i.Tensor("int64",new BigInt64Array(R),[1,R]),f.data.fill(1n,0,M))}}const[P,A]=g.dims,v=this.config.stride;if(P%v!==0)throw new Error(`The number of frames (${P}) must be a multiple of the stride (${v}).`);const k=g.view(1,Math.floor(P/v),A*v),E={input_features:k};if(h){const M=k.dims[1],w=new BigInt64Array(M);if(f){const T=f.data;for(let $=1,z=0;$<P;$+=v,++z)w[z]=T[$]}else w.fill(1n);E.attention_mask=new i.Tensor("int64",w,[1,M])}return E}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class n extends i{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>i});var s=t("./src/models/dac/feature_extraction_dac.js");class i extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");class i extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js");class o extends s.Processor{async _call(l){return await this.feature_extractor(l)}}re(o,"tokenizer_class",i.AutoTokenizer),re(o,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{pad_image(o,a,l,c={}){const[p,u,h]=a;return super.pad_image(o,a,{width:u+(l-u%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let u={};if(c){const g=c.length,{input_features:f}=await this.feature_extractor(c,{...p,max_length:g}),P=Math.round(g/this.config.encoder_ds_factor+1e-4),A=1+Math.ceil(P/this.config.stack_factor);u.audio_token_len=[A],u.audio_values=f;const v=this.config.audio_placeholder;if(!l.includes(v))throw new Error(`The input text does not contain the image token ${v}.`);l=l.replaceAll(v,v.repeat(A))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...u}}}re(o,"tokenizer_class",i.AutoTokenizer),re(o,"feature_extractor_class",s.AutoFeatureExtractor),re(o,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const c=await Promise.all(a.map(h=>this.preprocess(h))),p=await Promise.all(l.map(h=>this.preprocess(h,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,i.stack)(c.map((h,g)=>(0,i.cat)([h.pixel_values,p[g].pixel_values],0)),0),original_sizes:c.map(h=>h.original_size),reshaped_input_sizes:c.map(h=>h.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_pose_estimation(o,a,{threshold:l=null}={}){const c=o.tolist(),[p,u,h,g]=o.dims,f=[];for(let P=0;P<p;++P){const A=c[P],v=a[P],y=[];for(let k=0;k<v.length;++k){const E=v[k],M=[],w=[],T=[],$=E.at(-2)/g,z=E.at(-1)/h;for(let R=0;R<A.length;++R){let[Q,q]=[0,0],U=0,Z=-1/0;const H=A[R];for(let ie=0;ie<H.length;++ie){const ae=H[ie];for(let ce=0;ce<ae.length;++ce){const he=ae[ce];U+=he,Z=Math.max(Z,he),Q+=(ce+.5)*he,q+=ie*he}}if(l!=null&&Z<l)continue;const J=[$*Q/U,z*q/U];M.push(J),T.push(R),w.push(Z)}y.push({bbox:E,scores:w,labels:T,keypoints:M})}f.push(y)}return f}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const c=a.reduce((u,h)=>u+h,0)/a.length,p=a.reduce((u,h)=>u+(h-c)**2,0)/a.length;return a.map(u=>(u-c)/Math.sqrt(p+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new i.Tensor("float32",l,c),attention_mask:new i.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>o});var s=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}re(o,"tokenizer_class",s.AutoTokenizer),re(o,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>o});var s=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}re(o,"tokenizer_class",s.AutoTokenizer),re(o,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,i.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);for(let p=0;p<c.length;++p)c[p].push(0);this.mel_filters=c,this.window=(0,i.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,i.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[u,h,g]=l.dims;for(let f=0;f<u;++f){const P=f*h*g,A=f*g;for(let v=0;v<h;++v){const y=P+v*g;for(let k=0;k<g;++k)p[y+k]-=c[A+k]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>i,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>o});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],i=new Map(s),n=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function o(a){a=a.toLowerCase();let l=n.get(a);if(l===void 0){const c=a.match(/^<\|([a-z]{2})\|>$/);if(c&&(a=c[1]),i.has(a))l=a;else{const u=a.length===2?i.keys():i.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(u))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js"),n=t("./src/utils/maths.js");class o extends s.FeatureExtractor{constructor(l){var c;super(l),(c=this.config).mel_filters??(c.mel_filters=(0,i.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,i.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,i.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,u=(0,n.max)(p)[0];for(let h=0;h<p.length;++h)p[h]=(Math.max(p[h],u-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const u=c??this.config.n_samples;return l.length>u?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,u)):(p=new Float32Array(u),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>i});var s=t("./src/generation/configuration_utils.js");class i extends s.GenerationConfig{constructor(){super(...arguments);re(this,"return_timestamps",null);re(this,"return_token_timestamps",null);re(this,"num_frames",null);re(this,"alignment_heads",null);re(this,"task",null);re(this,"language",null);re(this,"no_timestamps_token_id",null);re(this,"prompt_ids",null);re(this,"is_multilingual",null);re(this,"lang_to_id",null);re(this,"task_to_id",null);re(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}re(o,"tokenizer_class",i.AutoTokenizer),re(o,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends i{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),i=t("./src/utils/tensor.js"),n=t("./src/env.js");const o=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,a=async(c,p,u)=>{const h=await(0,s.createInferenceSession)(new Uint8Array(c),p);let g=Promise.resolve();return async f=>{const P=(0,s.isONNXProxy)(),A=Object.fromEntries(Object.entries(f).map(([y,k])=>[y,(P?k.clone():k).ort_tensor])),v=await(g=o?g.then(()=>h.run(A)):h.run(A));return Array.isArray(u)?u.map(y=>new i.Tensor(v[y])):new i.Tensor(v[u])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}re(l,"session_options",{})},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>q,AutomaticSpeechRecognitionPipeline:()=>Z,BackgroundRemovalPipeline:()=>ae,DepthEstimationPipeline:()=>X,DocumentQuestionAnsweringPipeline:()=>O,FeatureExtractionPipeline:()=>R,FillMaskPipeline:()=>k,ImageClassificationPipeline:()=>J,ImageFeatureExtractionPipeline:()=>Q,ImageSegmentationPipeline:()=>ie,ImageToImagePipeline:()=>se,ImageToTextPipeline:()=>H,ObjectDetectionPipeline:()=>he,Pipeline:()=>P,QuestionAnsweringPipeline:()=>y,SummarizationPipeline:()=>M,Text2TextGenerationPipeline:()=>E,TextClassificationPipeline:()=>A,TextGenerationPipeline:()=>$,TextToAudioPipeline:()=>G,TokenClassificationPipeline:()=>v,TranslationPipeline:()=>w,ZeroShotAudioClassificationPipeline:()=>U,ZeroShotClassificationPipeline:()=>z,ZeroShotImageClassificationPipeline:()=>ce,ZeroShotObjectDetectionPipeline:()=>N,pipeline:()=>ke});var s=t("./src/tokenizers.js"),i=t("./src/models.js"),n=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),u=t("./src/utils/image.js");async function h(Me){return Array.isArray(Me)||(Me=[Me]),await Promise.all(Me.map(K=>u.RawImage.read(K)))}async function g(Me,K){return Array.isArray(Me)||(Me=[Me]),await Promise.all(Me.map(j=>typeof j=="string"||j instanceof URL?(0,c.read_audio)(j,K):j instanceof Float64Array?new Float32Array(j):j))}function f(Me,K){K&&(Me=Me.map(Ae=>Ae|0));const[j,me,Pe,Te]=Me;return{xmin:j,ymin:me,xmax:Pe,ymax:Te}}class P extends o.Callable{constructor({task:K,model:j,tokenizer:me=null,processor:Pe=null}){super(),this.task=K,this.model=j,this.tokenizer=me,this.processor=Pe}async dispose(){await this.model.dispose()}}class A extends P{constructor(K){super(K)}async _call(K,{top_k:j=1}={}){const me=this.tokenizer(K,{padding:!0,truncation:!0}),Pe=await this.model(me),Te=this.model.config.problem_type==="multi_label_classification"?Le=>Le.sigmoid():Le=>new p.Tensor("float32",(0,l.softmax)(Le.data),Le.dims),Ae=this.model.config.id2label,Ie=[];for(const Le of Pe.logits){const Ne=Te(Le),We=await(0,p.topk)(Ne,j),D=We[0].tolist(),B=We[1].tolist().map((te,de)=>({label:Ae?Ae[te]:`LABEL_${te}`,score:D[de]}));j===1?Ie.push(...B):Ie.push(B)}return Array.isArray(K)||j===1?Ie:Ie[0]}}class v extends P{constructor(K){super(K)}async _call(K,{ignore_labels:j=["O"]}={}){const me=Array.isArray(K),Pe=this.tokenizer(me?K:[K],{padding:!0,truncation:!0}),Ae=(await this.model(Pe)).logits,Ie=this.model.config.id2label,Le=[];for(let Ne=0;Ne<Ae.dims[0];++Ne){const We=Pe.input_ids[Ne],D=Ae[Ne],ee=[];for(let B=0;B<D.dims[0];++B){const te=D[B],de=(0,l.max)(te.data)[1],be=Ie?Ie[de]:`LABEL_${de}`;if(j.includes(be))continue;const ve=this.tokenizer.decode([We[B].item()],{skip_special_tokens:!0});if(ve==="")continue;const Re=(0,l.softmax)(te.data);ee.push({entity:be,score:Re[de],index:B,word:ve})}Le.push(ee)}return me?Le:Le[0]}}class y extends P{constructor(K){super(K)}async _call(K,j,{top_k:me=1}={}){const Pe=this.tokenizer(K,{text_pair:j,padding:!0,truncation:!0}),{start_logits:Te,end_logits:Ae}=await this.model(Pe),Ie=Pe.input_ids.tolist(),Le=Pe.attention_mask.tolist(),Ne=this.tokenizer.all_special_ids,We=[];for(let D=0;D<Te.dims[0];++D){const ee=Ie[D],B=ee.findIndex(Fe=>Fe==this.tokenizer.sep_token_id);Le[D].map((Fe,je)=>Fe==1&&(je===0||je>B&&Ne.findIndex(qe=>qe==ee[je])===-1));const te=Te[D].tolist(),de=Ae[D].tolist();for(let Fe=1;Fe<te.length;++Fe)(Le[D]==0||Fe<=B||Ne.findIndex(je=>je==ee[Fe])!==-1)&&(te[Fe]=-1/0,de[Fe]=-1/0);const be=(0,l.softmax)(te).map((Fe,je)=>[Fe,je]),ve=(0,l.softmax)(de).map((Fe,je)=>[Fe,je]);be[0][0]=0,ve[0][0]=0;const Re=(0,a.product)(be,ve).filter(Fe=>Fe[0][1]<=Fe[1][1]).map(Fe=>[Fe[0][1],Fe[1][1],Fe[0][0]*Fe[1][0]]).sort((Fe,je)=>je[2]-Fe[2]);for(let Fe=0;Fe<Math.min(Re.length,me);++Fe){const[je,qe,Xe]=Re[Fe],ut=ee.slice(je,qe+1),wt=this.tokenizer.decode(ut,{skip_special_tokens:!0});We.push({answer:wt,score:Xe})}}return me===1?We[0]:We}}class k extends P{constructor(K){super(K)}async _call(K,{top_k:j=5}={}){const me=this.tokenizer(K,{padding:!0,truncation:!0}),{logits:Pe}=await this.model(me),Te=[],Ae=me.input_ids.tolist();for(let Ie=0;Ie<Ae.length;++Ie){const Le=Ae[Ie],Ne=Le.findIndex(te=>te==this.tokenizer.mask_token_id);if(Ne===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const We=Pe[Ie][Ne],D=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(We.data),We.dims),j),ee=D[0].tolist(),B=D[1].tolist();Te.push(B.map((te,de)=>{const be=Le.slice();return be[Ne]=te,{score:ee[de],token:Number(te),token_str:this.tokenizer.decode([te]),sequence:this.tokenizer.decode(be,{skip_special_tokens:!0})}}))}return Array.isArray(K)?Te:Te[0]}}class E extends P{constructor(j){super(j);re(this,"_key","generated_text")}async _call(j,me={}){Array.isArray(j)||(j=[j]),this.model.config.prefix&&(j=j.map(Ne=>this.model.config.prefix+Ne));const Pe=this.model.config.task_specific_params;Pe&&Pe[this.task]&&Pe[this.task].prefix&&(j=j.map(Ne=>Pe[this.task].prefix+Ne));const Te=this.tokenizer,Ae={padding:!0,truncation:!0};let Ie;this instanceof w&&"_build_translation_inputs"in Te?Ie=Te._build_translation_inputs(j,Ae,me):Ie=Te(j,Ae);const Le=await this.model.generate({...Ie,...me});return Te.batch_decode(Le,{skip_special_tokens:!0}).map(Ne=>({[this._key]:Ne}))}}class M extends E{constructor(j){super(j);re(this,"_key","summary_text")}}class w extends E{constructor(j){super(j);re(this,"_key","translation_text")}}function T(Me){return Array.isArray(Me)&&Me.every(K=>"role"in K&&"content"in K)}class $ extends P{constructor(K){super(K)}async _call(K,j={}){let me=!1,Pe=!1,Te;if(typeof K=="string")Te=K=[K];else if(Array.isArray(K)&&K.every(B=>typeof B=="string"))me=!0,Te=K;else{if(T(K))K=[K];else if(Array.isArray(K)&&K.every(T))me=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Pe=!0,Te=K.map(B=>this.tokenizer.apply_chat_template(B,{tokenize:!1,add_generation_prompt:!0}))}const Ae=j.add_special_tokens??!1,Ie=Pe?!1:j.return_full_text??!0;this.tokenizer.padding_side="left";const Le=this.tokenizer(Te,{add_special_tokens:Ae,padding:!0,truncation:!0}),Ne=await this.model.generate({...Le,...j}),We=this.tokenizer.batch_decode(Ne,{skip_special_tokens:!0});let D;!Ie&&Le.input_ids.dims.at(-1)>0&&(D=this.tokenizer.batch_decode(Le.input_ids,{skip_special_tokens:!0}).map(B=>B.length));const ee=Array.from({length:K.length},B=>[]);for(let B=0;B<We.length;++B){const te=Math.floor(B/Ne.dims[0]*K.length);D&&(We[B]=We[B].slice(D[te])),ee[te].push({generated_text:Pe?[...K[te],{role:"assistant",content:We[B]}]:We[B]})}return!me&&ee.length===1?ee[0]:ee}}class z extends P{constructor(K){super(K),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([j,me])=>[j.toLowerCase(),me])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(K,j,{hypothesis_template:me="This example is {}.",multi_label:Pe=!1}={}){const Te=Array.isArray(K);Te||(K=[K]),Array.isArray(j)||(j=[j]);const Ae=j.map(Ne=>me.replace("{}",Ne)),Ie=Pe||j.length===1,Le=[];for(const Ne of K){const We=[];for(const B of Ae){const te=this.tokenizer(Ne,{text_pair:B,padding:!0,truncation:!0}),de=await this.model(te);Ie?We.push([de.logits.data[this.contradiction_id],de.logits.data[this.entailment_id]]):We.push(de.logits.data[this.entailment_id])}const ee=(Ie?We.map(B=>(0,l.softmax)(B)[1]):(0,l.softmax)(We)).map((B,te)=>[B,te]).sort((B,te)=>te[0]-B[0]);Le.push({sequence:Ne,labels:ee.map(B=>j[B[1]]),scores:ee.map(B=>B[0])})}return Te?Le:Le[0]}}class R extends P{constructor(K){super(K)}async _call(K,{pooling:j="none",normalize:me=!1,quantize:Pe=!1,precision:Te="binary"}={}){const Ae=this.tokenizer(K,{padding:!0,truncation:!0}),Ie=await this.model(Ae);let Le=Ie.last_hidden_state??Ie.logits??Ie.token_embeddings;if(j!=="none")if(j==="mean")Le=(0,p.mean_pooling)(Le,Ae.attention_mask);else if(j==="cls")Le=Le.slice(null,0);else throw Error(`Pooling method '${j}' not supported.`);return me&&(Le=Le.normalize(2,-1)),Pe&&(Le=(0,p.quantize_embeddings)(Le,Te)),Le}}class Q extends P{constructor(K){super(K)}async _call(K,{pool:j=null}={}){const me=await h(K),{pixel_values:Pe}=await this.processor(me),Te=await this.model({pixel_values:Pe});let Ae;if(j){if(!("pooler_output"in Te))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ae=Te.pooler_output}else Ae=Te.last_hidden_state??Te.logits??Te.image_embeds;return Ae}}class q extends P{constructor(K){super(K)}async _call(K,{top_k:j=5}={}){const me=this.processor.feature_extractor.config.sampling_rate,Pe=await g(K,me),Te=this.model.config.id2label,Ae=[];for(const Ie of Pe){const Le=await this.processor(Ie),We=(await this.model(Le)).logits[0],D=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(We.data),We.dims),j),ee=D[0].tolist(),te=D[1].tolist().map((de,be)=>({label:Te?Te[de]:`LABEL_${de}`,score:ee[be]}));Ae.push(te)}return Array.isArray(K)?Ae:Ae[0]}}class U extends P{constructor(K){super(K)}async _call(K,j,{hypothesis_template:me="This is a sound of {}."}={}){const Pe=!Array.isArray(K);Pe&&(K=[K]);const Te=j.map(We=>me.replace("{}",We)),Ae=this.tokenizer(Te,{padding:!0,truncation:!0}),Ie=this.processor.feature_extractor.config.sampling_rate,Le=await g(K,Ie),Ne=[];for(const We of Le){const D=await this.processor(We),ee=await this.model({...Ae,...D}),B=(0,l.softmax)(ee.logits_per_audio.data);Ne.push([...B].map((te,de)=>({score:te,label:j[de]})))}return Pe?Ne[0]:Ne}}class Z extends P{constructor(K){super(K)}async _call(K,j={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(K,j);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(K,j);case"moonshine":return this._call_moonshine(K,j);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(K,j){j.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),j.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const me=!Array.isArray(K);me&&(K=[K]);const Pe=this.processor.feature_extractor.config.sampling_rate,Te=await g(K,Pe),Ae=[];for(const Ie of Te){const Le=await this.processor(Ie),We=(await this.model(Le)).logits[0],D=[];for(const B of We)D.push((0,l.max)(B.data)[1]);const ee=this.tokenizer.decode(D);Ae.push({text:ee})}return me?Ae[0]:Ae}async _call_whisper(K,j){const me=j.return_timestamps??!1,Pe=j.chunk_length_s??0,Te=j.force_full_sequences??!1;let Ae=j.stride_length_s??null;const Ie={...j};me==="word"&&(Ie.return_token_timestamps=!0,Ie.return_timestamps=!1);const Le=!Array.isArray(K);Le&&(K=[K]);const Ne=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,We=this.processor.feature_extractor.config.hop_length,D=this.processor.feature_extractor.config.sampling_rate,ee=await g(K,D),B=[];for(const te of ee){let de=[];if(Pe>0){if(Ae===null)Ae=Pe/6;else if(Pe<=Ae)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Re=D*Pe,Fe=D*Ae,je=Re-2*Fe;let qe=0;for(;;){const Xe=qe+Re,ut=te.subarray(qe,Xe),wt=await this.processor(ut),nr=qe===0,jt=Xe>=te.length;if(de.push({stride:[ut.length,nr?0:Fe,jt?0:Fe],input_features:wt.input_features,is_last:jt}),jt)break;qe+=je}}else de=[{stride:[te.length,0,0],input_features:(await this.processor(te)).input_features,is_last:!0}];for(const Re of de){Ie.num_frames=Math.floor(Re.stride[0]/We);const Fe=await this.model.generate({inputs:Re.input_features,...Ie});me==="word"?(Re.tokens=Fe.sequences.tolist()[0],Re.token_timestamps=Fe.token_timestamps.tolist()[0].map(je=>(0,l.round)(je,2))):Re.tokens=Fe[0].tolist(),Re.stride=Re.stride.map(je=>je/D)}const[be,ve]=this.tokenizer._decode_asr(de,{time_precision:Ne,return_timestamps:me,force_full_sequences:Te});B.push({text:be,...ve})}return Le?B[0]:B}async _call_moonshine(K,j){const me=!Array.isArray(K);me&&(K=[K]);const Pe=this.processor.feature_extractor.config.sampling_rate,Te=await g(K,Pe),Ae=[];for(const Ie of Te){const Le=await this.processor(Ie),Ne=Math.floor(Ie.length/Pe)*6,We=await this.model.generate({max_new_tokens:Ne,...j,...Le}),D=this.processor.batch_decode(We,{skip_special_tokens:!0})[0];Ae.push({text:D})}return me?Ae[0]:Ae}}class H extends P{constructor(K){super(K)}async _call(K,j={}){const me=Array.isArray(K),Pe=await h(K),{pixel_values:Te}=await this.processor(Pe),Ae=[];for(const Ie of Te){Ie.dims=[1,...Ie.dims];const Le=await this.model.generate({inputs:Ie,...j}),Ne=this.tokenizer.batch_decode(Le,{skip_special_tokens:!0}).map(We=>({generated_text:We.trim()}));Ae.push(Ne)}return me?Ae:Ae[0]}}class J extends P{constructor(K){super(K)}async _call(K,{top_k:j=5}={}){const me=await h(K),{pixel_values:Pe}=await this.processor(me),Te=await this.model({pixel_values:Pe}),Ae=this.model.config.id2label,Ie=[];for(const Le of Te.logits){const Ne=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Le.data),Le.dims),j),We=Ne[0].tolist(),ee=Ne[1].tolist().map((B,te)=>({label:Ae?Ae[B]:`LABEL_${B}`,score:We[te]}));Ie.push(ee)}return Array.isArray(K)?Ie:Ie[0]}}class ie extends P{constructor(K){super(K),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(K,{threshold:j=.5,mask_threshold:me=.5,overlap_mask_area_threshold:Pe=.8,label_ids_to_fuse:Te=null,target_sizes:Ae=null,subtask:Ie=null}={}){if(Array.isArray(K)&&K.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Ne=await h(K),We=Ne.map(Re=>[Re.height,Re.width]),D=await this.processor(Ne),{inputNames:ee,outputNames:B}=this.model.sessions.model;if(!ee.includes("pixel_values")){if(ee.length!==1)throw Error(`Expected a single input name, but got ${ee.length} inputs: ${ee}.`);const Re=ee[0];if(Re in D)throw Error(`Input name ${Re} already exists in the inputs.`);D[Re]=D.pixel_values}const te=await this.model(D);let de=null;if(Ie!==null)de=this.subtasks_mapping[Ie];else if(this.processor.image_processor){for(const[Re,Fe]of Object.entries(this.subtasks_mapping))if(Fe in this.processor.image_processor){de=this.processor.image_processor[Fe].bind(this.processor.image_processor),Ie=Re;break}}const be=this.model.config.id2label,ve=[];if(Ie)if(Ie==="panoptic"||Ie==="instance"){const Re=de(te,j,me,Pe,Te,Ae??We)[0],Fe=Re.segmentation;for(const je of Re.segments_info){const qe=new Uint8ClampedArray(Fe.data.length);for(let ut=0;ut<Fe.data.length;++ut)Fe.data[ut]===je.id&&(qe[ut]=255);const Xe=new u.RawImage(qe,Fe.dims[1],Fe.dims[0],1);ve.push({score:je.score,label:be[je.label_id],mask:Xe})}}else if(Ie==="semantic"){const{segmentation:Re,labels:Fe}=de(te,Ae??We)[0];for(const je of Fe){const qe=new Uint8ClampedArray(Re.data.length);for(let ut=0;ut<Re.data.length;++ut)Re.data[ut]===je&&(qe[ut]=255);const Xe=new u.RawImage(qe,Re.dims[1],Re.dims[0],1);ve.push({score:null,label:be[je],mask:Xe})}}else throw Error(`Subtask ${Ie} not supported.`);else{const Fe=te[B[0]];for(let je=0;je<We.length;++je){const qe=We[je],Xe=Fe[je];Xe.data.some(wt=>wt<-1e-5||wt>1+1e-5)&&Xe.sigmoid_();const ut=await u.RawImage.fromTensor(Xe.mul_(255).to("uint8")).resize(qe[1],qe[0]);ve.push({label:null,score:null,mask:ut})}}return ve}}class ae extends ie{constructor(K){super(K)}async _call(K,j={}){if(Array.isArray(K)&&K.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const Pe=await h(K),Te=await super._call(K,j);return Pe.map((Ie,Le)=>{const Ne=Ie.clone();return Ne.putAlpha(Te[Le].mask),Ne})}}class ce extends P{constructor(K){super(K)}async _call(K,j,{hypothesis_template:me="This is a photo of {}"}={}){const Pe=Array.isArray(K),Te=await h(K),Ae=j.map(ee=>me.replace("{}",ee)),Ie=this.tokenizer(Ae,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Le}=await this.processor(Te),Ne=await this.model({...Ie,pixel_values:Le}),We=this.model.config.model_type==="siglip"?ee=>ee.sigmoid().data:ee=>(0,l.softmax)(ee.data),D=[];for(const ee of Ne.logits_per_image){const te=[...We(ee)].map((de,be)=>({score:de,label:j[be]}));te.sort((de,be)=>be.score-de.score),D.push(te)}return Pe?D:D[0]}}class he extends P{constructor(K){super(K)}async _call(K,{threshold:j=.9,percentage:me=!1}={}){const Pe=Array.isArray(K);if(Pe&&K.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Te=await h(K),Ae=me?null:Te.map(B=>[B.height,B.width]),{pixel_values:Ie,pixel_mask:Le}=await this.processor(Te),Ne=await this.model({pixel_values:Ie,pixel_mask:Le}),We=this.processor.image_processor.post_process_object_detection(Ne,j,Ae),D=this.model.config.id2label,ee=We.map(B=>B.boxes.map((te,de)=>({score:B.scores[de],label:D[B.classes[de]],box:f(te,!me)})));return Pe?ee:ee[0]}}class N extends P{constructor(K){super(K)}async _call(K,j,{threshold:me=.1,top_k:Pe=null,percentage:Te=!1}={}){const Ae=Array.isArray(K),Ie=await h(K),Le=this.tokenizer(j,{padding:!0,truncation:!0}),Ne=await this.processor(Ie),We=[];for(let D=0;D<Ie.length;++D){const ee=Ie[D],B=Te?null:[[ee.height,ee.width]],te=Ne.pixel_values[D].unsqueeze_(0),de=await this.model({...Le,pixel_values:te});let be;if("post_process_grounded_object_detection"in this.processor){const ve=this.processor.post_process_grounded_object_detection(de,Le.input_ids,{box_threshold:me,text_threshold:me,target_sizes:B})[0];be=ve.boxes.map((Re,Fe)=>({score:ve.scores[Fe],label:ve.labels[Fe],box:f(Re,!Te)}))}else{const ve=this.processor.image_processor.post_process_object_detection(de,me,B,!0)[0];be=ve.boxes.map((Re,Fe)=>({score:ve.scores[Fe],label:j[ve.classes[Fe]],box:f(Re,!Te)}))}be.sort((ve,Re)=>Re.score-ve.score),Pe!==null&&(be=be.slice(0,Pe)),We.push(be)}return Ae?We:We[0]}}class O extends P{constructor(K){super(K)}async _call(K,j,me={}){const Pe=(await h(K))[0],{pixel_values:Te}=await this.processor(Pe),Ae=`<s_docvqa><s_question>${j}</s_question><s_answer>`,Ie=this.tokenizer(Ae,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Le=await this.model.generate({inputs:Te,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Ie,...me}),We=this.tokenizer.batch_decode(Le)[0].match(/<s_answer>(.*?)<\/s_answer>/);let D=null;return We&&We.length>=2&&(D=We[1].trim()),[{answer:D}]}}class G extends P{constructor(j){super(j);re(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=j.vocoder??null}async _call(j,{speaker_embeddings:me=null}={}){return this.processor?this._call_text_to_spectrogram(j,{speaker_embeddings:me}):this._call_text_to_waveform(j)}async _call_text_to_waveform(j){const me=this.tokenizer(j,{padding:!0,truncation:!0}),{waveform:Pe}=await this.model(me),Te=this.model.config.sampling_rate;return new c.RawAudio(Pe.data,Te)}async _call_text_to_spectrogram(j,{speaker_embeddings:me}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await i.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof me=="string"||me instanceof URL)&&(me=new Float32Array(await(await fetch(me)).arrayBuffer())),me instanceof Float32Array)me=new p.Tensor("float32",me,[1,me.length]);else if(!(me instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Pe}=this.tokenizer(j,{padding:!0,truncation:!0}),{waveform:Te}=await this.model.generate_speech(Pe,me,{vocoder:this.vocoder}),Ae=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(Te.data,Ae)}}class se extends P{constructor(K){super(K)}async _call(K){const j=await h(K),me=await this.processor(j),Pe=await this.model(me),Te=[];for(const Ae of Pe.reconstruction){const Ie=Ae.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Te.push(u.RawImage.fromTensor(Ie))}return Te.length>1?Te:Te[0]}}class X extends P{constructor(K){super(K)}async _call(K){const j=await h(K),me=await this.processor(j),{predicted_depth:Pe}=await this.model(me),Te=[];for(let Ae=0;Ae<j.length;++Ae){const Ie=Pe[Ae],[Le,Ne]=Ie.dims.slice(-2),[We,D]=j[Ae].size,ee=(await(0,p.interpolate_4d)(Ie.view(1,1,Le,Ne),{size:[D,We],mode:"bilinear"})).view(D,We),B=ee.min().item(),te=ee.max().item(),de=ee.sub(B).div_(te-B).mul_(255).to("uint8").unsqueeze(0),be=u.RawImage.fromTensor(de);Te.push({predicted_depth:ee,depth:be})}return Te.length>1?Te:Te[0]}}const we=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:A,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:v,model:i.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:y,model:i.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:k,model:i.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:M,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:w,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:E,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:$,model:i.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:z,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:q,model:i.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:U,model:i.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:Z,model:[i.AutoModelForSpeechSeq2Seq,i.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:G,model:[i.AutoModelForTextToWaveform,i.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:H,model:i.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:J,model:i.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:ie,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ae,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:ce,model:i.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:he,model:i.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:N,model:i.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:O,model:i.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:se,model:i.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:X,model:i.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:R,model:i.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:Q,model:[i.AutoModelForImageFeatureExtraction,i.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),fe=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function ke(Me,K=null,{progress_callback:j=null,config:me=null,cache_dir:Pe=null,local_files_only:Te=!1,revision:Ae="main",device:Ie=null,dtype:Le=null,subfolder:Ne="onnx",use_external_data_format:We=null,model_file_name:D=null,session_options:ee={}}={}){Me=fe[Me]??Me;const B=we[Me.split("_",1)[0]];if(!B)throw Error(`Unsupported pipeline: ${Me}. Must be one of [${Object.keys(we)}]`);K||(K=B.default.model,console.log(`No model specified. Using default model: "${K}".`));const te={progress_callback:j,config:me,cache_dir:Pe,local_files_only:Te,revision:Ae,device:Ie,dtype:Le,subfolder:Ne,use_external_data_format:We,model_file_name:D,session_options:ee},de=new Map([["tokenizer",B.tokenizer],["model",B.model],["processor",B.processor]]),be=await He(de,K,te);be.task=Me,(0,a.dispatchCallback)(j,{status:"ready",task:Me,model:K});const ve=B.pipeline;return new ve(be)}async function He(Me,K,j){const me=Object.create(null),Pe=[];for(const[Te,Ae]of Me.entries()){if(!Ae)continue;let Ie;Array.isArray(Ae)?Ie=new Promise(async(Le,Ne)=>{var D,ee;let We;for(const B of Ae){if(B===null){Le(null);return}try{Le(await B.from_pretrained(K,j));return}catch(te){if((D=te.message)!=null&&D.includes("Unsupported model type"))We=te;else if((ee=te.message)!=null&&ee.includes("Could not locate file"))We=te;else{Ne(te);return}}}Ne(We)}):Ie=Ae.from_pretrained(K,j),me[Te]=Ie,Pe.push(Ie)}await Promise.all(Pe);for(const[Te,Ae]of Object.entries(me))me[Te]=await Ae;return me}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>Vr,AutoTokenizer:()=>Sn,BartTokenizer:()=>hs,BertTokenizer:()=>qr,BlenderbotSmallTokenizer:()=>Jr,BlenderbotTokenizer:()=>Ar,BloomTokenizer:()=>Qr,CLIPTokenizer:()=>En,CamembertTokenizer:()=>it,CodeGenTokenizer:()=>Xr,CodeLlamaTokenizer:()=>Xs,CohereTokenizer:()=>Cn,ConvBertTokenizer:()=>mr,DebertaTokenizer:()=>Ts,DebertaV2Tokenizer:()=>Es,DistilBertTokenizer:()=>et,ElectraTokenizer:()=>zt,EsmTokenizer:()=>en,FalconTokenizer:()=>fs,GPT2Tokenizer:()=>ps,GPTNeoXTokenizer:()=>Zs,GemmaTokenizer:()=>Lr,Grok1Tokenizer:()=>Cs,HerbertTokenizer:()=>Ls,LlamaTokenizer:()=>Qs,M2M100Tokenizer:()=>Bs,MBart50Tokenizer:()=>ms,MBartTokenizer:()=>Er,MPNetTokenizer:()=>Ys,MarianTokenizer:()=>Pn,MgpstrTokenizer:()=>Ss,MobileBertTokenizer:()=>us,NllbTokenizer:()=>zs,NougatTokenizer:()=>_r,PreTrainedTokenizer:()=>dt,Qwen2Tokenizer:()=>tn,RoFormerTokenizer:()=>Be,RobertaTokenizer:()=>_s,SiglipTokenizer:()=>zr,SpeechT5Tokenizer:()=>cr,SqueezeBertTokenizer:()=>xs,T5Tokenizer:()=>kr,TokenizerModel:()=>Q,VitsTokenizer:()=>Ns,Wav2Vec2CTCTokenizer:()=>Rs,WhisperTokenizer:()=>Ir,XLMRobertaTokenizer:()=>Js,XLMTokenizer:()=>rr,is_chinese_char:()=>k});var s=t("./src/utils/generic.js"),i=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),o=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function u(pe,F){const V=await Promise.all([(0,n.getModelJSON)(pe,"tokenizer.json",!0,F),(0,n.getModelJSON)(pe,"tokenizer_config.json",!0,F)]);return F.legacy!==null&&(V[1].legacy=F.legacy),V}function h(pe,F){const V=[];let Y=0;for(const le of pe.matchAll(F)){const ue=le[0];Y<le.index&&V.push(pe.slice(Y,le.index)),ue.length>0&&V.push(ue),Y=le.index+ue.length}return Y<pe.length&&V.push(pe.slice(Y)),V}function g(pe,F=!0){if(pe.Regex!==void 0){let V=pe.Regex.replace(/\\([#&~])/g,"$1");for(const[Y,le]of z)V=V.replaceAll(Y,le);return new RegExp(V,"gu")}else if(pe.String!==void 0){const V=(0,i.escapeRegExp)(pe.String);return new RegExp(F?V:`(${V})`,"gu")}else return console.warn("Unknown pattern type:",pe),null}function f(pe){return new Map(Object.entries(pe))}function P(pe){const F=pe.dims;switch(F.length){case 1:return pe.tolist();case 2:if(F[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return pe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${F.length}.`)}}function A(pe){return pe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function v(pe){return pe.replace(new RegExp("\\p{M}","gu"),"")}function y(pe){return v(pe.toLowerCase())}function k(pe){return pe>=19968&&pe<=40959||pe>=13312&&pe<=19903||pe>=131072&&pe<=173791||pe>=173824&&pe<=177983||pe>=177984&&pe<=178207||pe>=178208&&pe<=183983||pe>=63744&&pe<=64255||pe>=194560&&pe<=195103}function E(pe,F,V){const Y=[];let le=0;for(;le<pe.length;){if(Y.push(pe[le]),(F.get(pe[le])??V)!==V){++le;continue}for(;++le<pe.length&&(F.get(pe[le])??V)===V;)F.get(Y.at(-1))!==V&&(Y[Y.length-1]+=pe[le])}return Y}function M(pe){return pe.match(/\S+/g)||[]}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",T=new RegExp(`^[${w}]+$`,"gu"),$=".,!?…。，、।۔،",z=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${$}])]+`,` ?[^\\s${$}]+`]]);class R{constructor(F){this.content=F.content,this.id=F.id,this.single_word=F.single_word??!1,this.lstrip=F.lstrip??!1,this.rstrip=F.rstrip??!1,this.special=F.special??!1,this.normalized=F.normalized??null}}class Q extends s.Callable{constructor(F){super(),this.config=F,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(F,...V){switch(F.type){case"WordPiece":return new q(F);case"Unigram":return new U(F,...V);case"BPE":return new J(F);default:if(F.vocab)return Array.isArray(F.vocab)?new U(F,...V):typeof F.vocab=="object"&&F.continuing_subword_prefix&&F.unk_token?new q(F):new ie(F,...V);throw new Error(`Unknown TokenizerModel type: ${F.type}`)}}_call(F){return F=this.encode(F),this.fuse_unk&&(F=E(F,this.tokens_to_ids,this.unk_token_id)),F}encode(F){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(F){return F.map(V=>this.tokens_to_ids.get(V)??this.unk_token_id)}convert_ids_to_tokens(F){return F.map(V=>this.vocab[V]??this.unk_token)}}class q extends Q{constructor(F){super(F),this.tokens_to_ids=f(F.vocab),this.unk_token_id=this.tokens_to_ids.get(F.unk_token),this.unk_token=F.unk_token,this.max_input_chars_per_word=F.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[V,Y]of this.tokens_to_ids)this.vocab[Y]=V}encode(F){const V=[];for(const Y of F){const le=[...Y];if(le.length>this.max_input_chars_per_word){V.push(this.unk_token);continue}let ue=!1,Ce=0;const Ue=[];for(;Ce<le.length;){let Qe=le.length,Ke=null;for(;Ce<Qe;){let Ze=le.slice(Ce,Qe).join("");if(Ce>0&&(Ze=this.config.continuing_subword_prefix+Ze),this.tokens_to_ids.has(Ze)){Ke=Ze;break}--Qe}if(Ke===null){ue=!0;break}Ue.push(Ke),Ce=Qe}ue?V.push(this.unk_token):V.push(...Ue)}return V}}class U extends Q{constructor(F,V){super(F);const Y=F.vocab.length;this.vocab=new Array(Y),this.scores=new Array(Y);for(let le=0;le<Y;++le)[this.vocab[le],this.scores[le]]=F.vocab[le];this.unk_token_id=F.unk_id,this.unk_token=this.vocab[F.unk_id],this.tokens_to_ids=new Map(this.vocab.map((le,ue)=>[le,ue])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,o.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(F){const V=F.chars,Y=1;let le=0;for(;le<V.length;){let ue=!1;const Ce=V.slice(le).join(""),Ue=this.trie.commonPrefixSearch(Ce);for(const Qe of Ue){const Ke=this.tokens_to_ids.get(Qe),Ze=this.scores[Ke],ht=(0,i.len)(Qe);F.insert(le,ht,Ze,Ke),!ue&&ht===Y&&(ue=!0)}ue||F.insert(le,Y,this.unk_score,this.unk_token_id),le+=Y}}tokenize(F){const V=new l.TokenLattice(F,this.bos_token_id,this.eos_token_id);return this.populateNodes(V),V.tokens()}encode(F){const V=[];for(const Y of F){const le=this.tokenize(Y);V.push(...le)}return V}}const Z=(()=>{const pe=[...Array.from({length:94},(le,ue)=>ue+33),...Array.from({length:12},(le,ue)=>ue+161),...Array.from({length:82},(le,ue)=>ue+174)],F=pe.slice();let V=0;for(let le=0;le<256;++le)pe.includes(le)||(pe.push(le),F.push(256+V),V+=1);const Y=F.map(le=>String.fromCharCode(le));return Object.fromEntries(pe.map((le,ue)=>[le,Y[ue]]))})(),H=(0,i.reverseDictionary)(Z);class J extends Q{constructor(F){super(F),this.tokens_to_ids=f(F.vocab),this.unk_token_id=this.tokens_to_ids.get(F.unk_token),this.unk_token=F.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,le]of this.tokens_to_ids)this.vocab[le]=Y;const V=Array.isArray(F.merges[0]);this.merges=V?F.merges:F.merges.map(Y=>Y.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((Y,le)=>[JSON.stringify(Y),le])),this.end_of_word_suffix=F.end_of_word_suffix,this.continuing_subword_suffix=F.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(F){if(F.length===0)return[];const V=this.cache.get(F);if(V!==void 0)return V;const Y=Array.from(F);this.end_of_word_suffix&&(Y[Y.length-1]+=this.end_of_word_suffix);let le=[];if(Y.length>1){const ue=new l.PriorityQueue((Qe,Ke)=>Qe.score<Ke.score);let Ce={token:Y[0],bias:0,prev:null,next:null},Ue=Ce;for(let Qe=1;Qe<Y.length;++Qe){const Ke={bias:Qe/Y.length,token:Y[Qe],prev:Ue,next:null};Ue.next=Ke,this._add_node(ue,Ue),Ue=Ke}for(;!ue.isEmpty();){const Qe=ue.pop();if(Qe.deleted||!Qe.next||Qe.next.deleted)continue;if(Qe.deleted=!0,Qe.next.deleted=!0,Qe.prev){const Ze={...Qe.prev};Qe.prev.deleted=!0,Qe.prev=Ze,Ze.prev?Ze.prev.next=Ze:Ce=Ze}const Ke={token:Qe.token+Qe.next.token,bias:Qe.bias,prev:Qe.prev,next:Qe.next.next};Ke.prev?(Ke.prev.next=Ke,this._add_node(ue,Ke.prev)):Ce=Ke,Ke.next&&(Ke.next.prev=Ke,this._add_node(ue,Ke))}for(let Qe=Ce;Qe!==null;Qe=Qe.next)le.push(Qe.token)}else le=Y;if(this.continuing_subword_suffix)for(let ue=0;ue<le.length-1;++ue)le[ue]+=this.continuing_subword_suffix;return this.cache.set(F,le),le}_add_node(F,V){const Y=this.bpe_ranks.get(JSON.stringify([V.token,V.next.token]));Y!==void 0&&(V.score=Y+V.bias,F.push(V))}encode(F){const V=[];for(const Y of F){if(this.ignore_merges&&this.tokens_to_ids.has(Y)){V.push(Y);continue}const le=this.bpe(Y);for(const ue of le)if(this.tokens_to_ids.has(ue))V.push(ue);else if(this.byte_fallback){const Ce=Array.from(this.text_encoder.encode(ue)).map(Ue=>`<0x${Ue.toString(16).toUpperCase().padStart(2,"0")}>`);Ce.every(Ue=>this.tokens_to_ids.has(Ue))?V.push(...Ce):V.push(this.unk_token)}else V.push(this.unk_token)}return V}}class ie extends Q{constructor(F,V){super(F),this.tokens_to_ids=f(V.target_lang?F.vocab[V.target_lang]:F.vocab),this.bos_token=V.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=V.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=V.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,le]of this.tokens_to_ids)this.vocab[le]=Y}encode(F){return F}}class ae extends s.Callable{constructor(F){super(),this.config=F}static fromConfig(F){if(F===null)return null;switch(F.type){case"BertNormalizer":return new Me(F);case"Precompiled":return new jt(F);case"Sequence":return new He(F);case"Replace":return new ce(F);case"NFC":return new N(F);case"NFD":return new O(F);case"NFKC":return new G(F);case"NFKD":return new se(F);case"Strip":return new X(F);case"StripAccents":return new we(F);case"Lowercase":return new fe(F);case"Prepend":return new ke(F);default:throw new Error(`Unknown Normalizer type: ${F.type}`)}}normalize(F){throw Error("normalize should be implemented in subclass.")}_call(F){return this.normalize(F)}}class ce extends ae{normalize(F){const V=g(this.config.pattern);return V===null?F:F.replaceAll(V,this.config.content)}}class he extends ae{constructor(){super(...arguments);re(this,"form")}normalize(V){return V=V.normalize(this.form),V}}class N extends he{constructor(){super(...arguments);re(this,"form","NFC")}}class O extends he{constructor(){super(...arguments);re(this,"form","NFD")}}class G extends he{constructor(){super(...arguments);re(this,"form","NFKC")}}class se extends he{constructor(){super(...arguments);re(this,"form","NFKD")}}class X extends ae{normalize(F){return this.config.strip_left&&this.config.strip_right?F=F.trim():(this.config.strip_left&&(F=F.trimStart()),this.config.strip_right&&(F=F.trimEnd())),F}}class we extends ae{normalize(F){return F=v(F),F}}class fe extends ae{normalize(F){return F=F.toLowerCase(),F}}class ke extends ae{normalize(F){return F=this.config.prepend+F,F}}class He extends ae{constructor(F){super(F),this.normalizers=F.normalizers.map(V=>ae.fromConfig(V))}normalize(F){return this.normalizers.reduce((V,Y)=>Y.normalize(V),F)}}class Me extends ae{_tokenize_chinese_chars(F){const V=[];for(let Y=0;Y<F.length;++Y){const le=F[Y],ue=le.charCodeAt(0);k(ue)?(V.push(" "),V.push(le),V.push(" ")):V.push(le)}return V.join("")}stripAccents(F){return F.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(F){switch(F){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(F)}}_clean_text(F){const V=[];for(const Y of F){const le=Y.charCodeAt(0);le===0||le===65533||this._is_control(Y)||(/^\s$/.test(Y)?V.push(" "):V.push(Y))}return V.join("")}normalize(F){return this.config.clean_text&&(F=this._clean_text(F)),this.config.handle_chinese_chars&&(F=this._tokenize_chinese_chars(F)),this.config.lowercase?(F=F.toLowerCase(),this.config.strip_accents!==!1&&(F=this.stripAccents(F))):this.config.strip_accents&&(F=this.stripAccents(F)),F}}class K extends s.Callable{static fromConfig(F){if(F===null)return null;switch(F.type){case"BertPreTokenizer":return new j(F);case"Sequence":return new dr(F);case"Whitespace":return new ds(F);case"WhitespaceSplit":return new Os(F);case"Metaspace":return new wt(F);case"ByteLevel":return new me(F);case"Split":return new Pe(F);case"Punctuation":return new Te(F);case"Digits":return new Ae(F);case"Replace":return new Dr(F);default:throw new Error(`Unknown PreTokenizer type: ${F.type}`)}}pre_tokenize_text(F,V){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(F,V){return(Array.isArray(F)?F.map(Y=>this.pre_tokenize_text(Y,V)):this.pre_tokenize_text(F,V)).flat()}_call(F,V){return this.pre_tokenize(F,V)}}class j extends K{constructor(F){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text(F,V){return F.trim().match(this.pattern)||[]}}class me extends K{constructor(F){super(),this.config=F,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Z,this.text_encoder=new TextEncoder}pre_tokenize_text(F,V){return this.add_prefix_space&&!F.startsWith(" ")&&(F=" "+F),(this.use_regex?F.match(this.pattern)||[]:[F]).map(le=>Array.from(this.text_encoder.encode(le),ue=>this.byte_encoder[ue]).join(""))}}class Pe extends K{constructor(F){super(),this.config=F,this.pattern=g(this.config.pattern,this.config.invert)}pre_tokenize_text(F,V){var Y;return this.pattern===null?[]:this.config.invert?F.match(this.pattern)||[]:((Y=this.config.behavior)==null?void 0:Y.toLowerCase())==="removed"?F.split(this.pattern).filter(le=>le):h(F,this.pattern)}}class Te extends K{constructor(F){super(),this.config=F,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text(F,V){return F.match(this.pattern)||[]}}class Ae extends K{constructor(F){super(),this.config=F;const V=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(V,"gu")}pre_tokenize_text(F,V){return F.match(this.pattern)||[]}}class Ie extends s.Callable{constructor(F){super(),this.config=F}static fromConfig(F){if(F===null)return null;switch(F.type){case"TemplateProcessing":return new We(F);case"ByteLevel":return new D(F);case"RobertaProcessing":return new Ne(F);case"BertProcessing":return new Le(F);case"Sequence":return new ee(F);default:throw new Error(`Unknown PostProcessor type: ${F.type}`)}}post_process(F,...V){throw Error("post_process should be implemented in subclass.")}_call(F,...V){return this.post_process(F,...V)}}class Le extends Ie{constructor(F){super(F),this.cls=F.cls[0],this.sep=F.sep[0]}post_process(F,V=null,{add_special_tokens:Y=!0}={}){Y&&(F=(0,i.mergeArrays)([this.cls],F,[this.sep]));let le=new Array(F.length).fill(0);if(V!==null){const ue=Y&&this instanceof Ne?[this.sep]:[],Ce=Y?[this.sep]:[];F=(0,i.mergeArrays)(F,ue,V,Ce),le=(0,i.mergeArrays)(le,new Array(V.length+ue.length+Ce.length).fill(1))}return{tokens:F,token_type_ids:le}}}class Ne extends Le{}class We extends Ie{constructor(F){super(F),this.single=F.single,this.pair=F.pair}post_process(F,V=null,{add_special_tokens:Y=!0}={}){const le=V===null?this.single:this.pair;let ue=[],Ce=[];for(const Ue of le)"SpecialToken"in Ue?Y&&(ue.push(Ue.SpecialToken.id),Ce.push(Ue.SpecialToken.type_id)):"Sequence"in Ue&&(Ue.Sequence.id==="A"?(ue=(0,i.mergeArrays)(ue,F),Ce=(0,i.mergeArrays)(Ce,new Array(F.length).fill(Ue.Sequence.type_id))):Ue.Sequence.id==="B"&&(ue=(0,i.mergeArrays)(ue,V),Ce=(0,i.mergeArrays)(Ce,new Array(V.length).fill(Ue.Sequence.type_id))));return{tokens:ue,token_type_ids:Ce}}}class D extends Ie{post_process(F,V=null){return V&&(F=(0,i.mergeArrays)(F,V)),{tokens:F}}}class ee extends Ie{constructor(F){super(F),this.processors=F.processors.map(V=>Ie.fromConfig(V))}post_process(F,V=null,Y={}){let le;for(const ue of this.processors)if(ue instanceof D)F=ue.post_process(F).tokens,V&&(V=ue.post_process(V).tokens);else{const Ce=ue.post_process(F,V,Y);F=Ce.tokens,le=Ce.token_type_ids}return{tokens:F,token_type_ids:le}}}class B extends s.Callable{constructor(F){super(),this.config=F,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=F.trim_offsets}static fromConfig(F){if(F===null)return null;switch(F.type){case"WordPiece":return new Re(F);case"Metaspace":return new nr(F);case"ByteLevel":return new Fe(F);case"Replace":return new te(F);case"ByteFallback":return new de(F);case"Fuse":return new be(F);case"Strip":return new ve(F);case"Sequence":return new qe(F);case"CTC":return new je(F);case"BPEDecoder":return new Xe(F);default:throw new Error(`Unknown Decoder type: ${F.type}`)}}_call(F){return this.decode(F)}decode(F){return this.decode_chain(F).join("")}decode_chain(F){throw Error("`decode_chain` should be implemented in subclass.")}}class te extends B{decode_chain(F){const V=g(this.config.pattern);return V===null?F:F.map(Y=>Y.replaceAll(V,this.config.content))}}class de extends B{constructor(F){super(F),this.text_decoder=new TextDecoder}decode_chain(F){const V=[];let Y=[];for(const le of F){let ue=null;if(le.length===6&&le.startsWith("<0x")&&le.endsWith(">")){const Ce=parseInt(le.slice(3,5),16);isNaN(Ce)||(ue=Ce)}if(ue!==null)Y.push(ue);else{if(Y.length>0){const Ce=this.text_decoder.decode(Uint8Array.from(Y));V.push(Ce),Y=[]}V.push(le)}}if(Y.length>0){const le=this.text_decoder.decode(Uint8Array.from(Y));V.push(le),Y=[]}return V}}class be extends B{decode_chain(F){return[F.join("")]}}class ve extends B{constructor(F){super(F),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(F){return F.map(V=>{let Y=0;for(let ue=0;ue<this.start&&V[ue]===this.content;++ue){Y=ue+1;continue}let le=V.length;for(let ue=0;ue<this.stop;++ue){const Ce=V.length-ue-1;if(V[Ce]===this.content){le=Ce;continue}else break}return V.slice(Y,le)})}}class Re extends B{constructor(F){super(F),this.cleanup=F.cleanup}decode_chain(F){return F.map((V,Y)=>(Y!==0&&(V.startsWith(this.config.prefix)?V=V.replace(this.config.prefix,""):V=" "+V),this.cleanup&&(V=A(V)),V))}}class Fe extends B{constructor(F){super(F),this.byte_decoder=H,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(F){const V=F.join(""),Y=new Uint8Array([...V].map(ue=>this.byte_decoder[ue]));return this.text_decoder.decode(Y)}decode_chain(F){const V=[];let Y=[];for(const le of F)this.added_tokens.find(ue=>ue.content===le)!==void 0?(Y.length>0&&(V.push(this.convert_tokens_to_string(Y)),Y=[]),V.push(le)):Y.push(le);return Y.length>0&&V.push(this.convert_tokens_to_string(Y)),V}}class je extends B{constructor(F){super(F),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(F){if(F.length===0)return"";const V=[F[0]];for(let ue=1;ue<F.length;++ue)F[ue]!==V.at(-1)&&V.push(F[ue]);let le=V.filter(ue=>ue!==this.pad_token).join("");return this.cleanup&&(le=A(le).replaceAll(this.word_delimiter_token," ").trim()),le}decode_chain(F){return[this.convert_tokens_to_string(F)]}}class qe extends B{constructor(F){super(F),this.decoders=F.decoders.map(V=>B.fromConfig(V))}decode_chain(F){return this.decoders.reduce((V,Y)=>Y.decode_chain(V),F)}}class Xe extends B{constructor(F){super(F),this.suffix=this.config.suffix}decode_chain(F){return F.map((V,Y)=>V.replaceAll(this.suffix,Y===F.length-1?"":" "))}}class ut extends B{decode_chain(F){let V="";for(let Y=1;Y<F.length;Y+=2)V+=F[Y];return[V]}}class wt extends K{constructor(F){super(),this.addPrefixSpace=F.add_prefix_space,this.replacement=F.replacement,this.strRep=F.str_rep||this.replacement,this.prepend_scheme=F.prepend_scheme??"always"}pre_tokenize_text(F,{section_index:V=void 0}={}){let Y=F.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!Y.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&V===0)&&(Y=this.strRep+Y),[Y]}}class nr extends B{constructor(F){super(F),this.addPrefixSpace=F.add_prefix_space,this.replacement=F.replacement}decode_chain(F){const V=[];for(let Y=0;Y<F.length;++Y){let le=F[Y].replaceAll(this.replacement," ");this.addPrefixSpace&&Y==0&&le.startsWith(" ")&&(le=le.substring(1)),V.push(le)}return V}}class jt extends ae{constructor(F){super(F),this.charsmap=F.precompiled_charsmap}normalize(F){return F=F.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),F=F.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),F.includes("～")?F=F.split("～").map(Y=>Y.normalize("NFKC")).join("～"):F=F.normalize("NFKC"),F}}class dr extends K{constructor(F){super(),this.tokenizers=F.pretokenizers.map(V=>K.fromConfig(V))}pre_tokenize_text(F,V){return this.tokenizers.reduce((Y,le)=>le.pre_tokenize(Y,V),[F])}}class ds extends K{constructor(F){super()}pre_tokenize_text(F,V){return F.match(/\w+|[^\w\s]+/g)||[]}}class Os extends K{constructor(F){super()}pre_tokenize_text(F,V){return M(F)}}class Dr extends K{constructor(F){super(),this.config=F,this.pattern=g(this.config.pattern),this.content=this.config.content}pre_tokenize_text(F,V){return this.pattern===null?[F]:[F.replaceAll(this.pattern,this.config.content)]}}const cs=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Ds(pe,F,V,Y){for(const le of Object.keys(pe)){const ue=F-pe[le].length,Ce=V(le),Ue=new Array(ue).fill(Ce);pe[le]=Y==="right"?(0,i.mergeArrays)(pe[le],Ue):(0,i.mergeArrays)(Ue,pe[le])}}function jr(pe,F){for(const V of Object.keys(pe))pe[V].length=F}class dt extends s.Callable{constructor(V,Y){super();re(this,"return_token_type_ids",!1);re(this,"padding_side","right");this._tokenizer_config=Y,this.normalizer=ae.fromConfig(V.normalizer),this.pre_tokenizer=K.fromConfig(V.pre_tokenizer),this.model=Q.fromConfig(V.model,Y),this.post_processor=Ie.fromConfig(V.post_processor),this.decoder=B.fromConfig(V.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const le of V.added_tokens){const ue=new R(le);this.added_tokens.push(ue),this.model.tokens_to_ids.set(ue.content,ue.id),this.model.vocab[ue.id]=ue.content,ue.special&&(this.special_tokens.push(ue.content),this.all_special_ids.push(ue.id))}if(this.additional_special_tokens=Y.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(le=>le.content)),this.added_tokens_map=new Map(this.added_tokens.map(le=>[le.content,le])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=Y.model_max_length,this.remove_space=Y.remove_space,this.clean_up_tokenization_spaces=Y.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=Y.do_lowercase_and_remove_accent??!1,Y.padding_side&&(this.padding_side=Y.padding_side),this.legacy=!1,this.chat_template=Y.chat_template??null,Array.isArray(this.chat_template)){const le=Object.create(null);for(const{name:ue,template:Ce}of this.chat_template){if(typeof ue!="string"||typeof Ce!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');le[ue]=Ce}this.chat_template=le}this._compiled_template_cache=new Map}getToken(...V){for(const Y of V){const le=this._tokenizer_config[Y];if(le)if(typeof le=="object"){if(le.__type==="AddedToken")return le.content;throw Error(`Unknown token: ${le}`)}else return le}return null}static async from_pretrained(V,{progress_callback:Y=null,config:le=null,cache_dir:ue=null,local_files_only:Ce=!1,revision:Ue="main",legacy:Qe=null}={}){const Ke=await u(V,{progress_callback:Y,config:le,cache_dir:ue,local_files_only:Ce,revision:Ue,legacy:Qe});return new this(...Ke)}_call(V,{text_pair:Y=null,add_special_tokens:le=!0,padding:ue=!1,truncation:Ce=null,max_length:Ue=null,return_tensor:Qe=!0,return_token_type_ids:Ke=null}={}){const Ze=Array.isArray(V);let ht;if(Ze){if(V.length===0)throw Error("text array must be non-empty");if(Y!==null){if(Array.isArray(Y)){if(V.length!==Y.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");ht=V.map((kt,Wt)=>this._encode_plus(kt,{text_pair:Y[Wt],add_special_tokens:le,return_token_type_ids:Ke}))}else ht=V.map(kt=>this._encode_plus(kt,{add_special_tokens:le,return_token_type_ids:Ke}))}else{if(V==null)throw Error("text may not be null or undefined");if(Array.isArray(Y))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");ht=[this._encode_plus(V,{text_pair:Y,add_special_tokens:le,return_token_type_ids:Ke})]}if(Ue===null?ue==="max_length"?Ue=this.model_max_length:Ue=(0,o.max)(ht.map(kt=>kt.input_ids.length))[0]:Ce||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),Ue=Math.min(Ue,this.model_max_length??1/0),ue||Ce)for(let kt=0;kt<ht.length;++kt)ht[kt].input_ids.length!==Ue&&(ht[kt].input_ids.length>Ue?Ce&&jr(ht[kt],Ue):ue&&Ds(ht[kt],Ue,Wt=>Wt==="input_ids"?this.pad_token_id:0,this.padding_side));const Ct={};if(Qe){if(!(ue&&Ce)&&ht.some(Wt=>{var Ot;for(const Vt of Object.keys(Wt))if(Wt[Vt].length!==((Ot=ht[0][Vt])==null?void 0:Ot.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const kt=[ht.length,ht[0].input_ids.length];for(const Wt of Object.keys(ht[0]))Ct[Wt]=new a.Tensor("int64",BigInt64Array.from(ht.flatMap(Ot=>Ot[Wt]).map(BigInt)),kt)}else{for(const kt of Object.keys(ht[0]))Ct[kt]=ht.map(Wt=>Wt[kt]);if(!Ze)for(const kt of Object.keys(Ct))Ct[kt]=Ct[kt][0]}return Ct}_encode_text(V){if(V===null)return null;const Y=this.added_tokens_splitter.split(V);for(let ue=0;ue<Y.length;++ue){const Ce=this.added_tokens_map.get(Y[ue]);Ce&&(Ce.lstrip&&ue>0&&(Y[ue-1]=Y[ue-1].trimEnd()),Ce.rstrip&&ue<Y.length-1&&(Y[ue+1]=Y[ue+1].trimStart()))}return Y.flatMap((ue,Ce)=>{if(ue.length===0)return[];if(this.added_tokens_map.has(ue))return[ue];if(this.remove_space===!0&&(ue=ue.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(ue=y(ue)),this.normalizer!==null&&(ue=this.normalizer(ue)),ue.length===0)return[];const Ue=this.pre_tokenizer!==null?this.pre_tokenizer(ue,{section_index:Ce}):[ue];return this.model(Ue)})}_encode_plus(V,{text_pair:Y=null,add_special_tokens:le=!0,return_token_type_ids:ue=null}={}){const{tokens:Ce,token_type_ids:Ue}=this._tokenize_helper(V,{pair:Y,add_special_tokens:le}),Qe=this.model.convert_tokens_to_ids(Ce),Ke={input_ids:Qe,attention_mask:new Array(Qe.length).fill(1)};return(ue??this.return_token_type_ids)&&Ue&&(Ke.token_type_ids=Ue),Ke}_tokenize_helper(V,{pair:Y=null,add_special_tokens:le=!1}={}){const ue=this._encode_text(V),Ce=this._encode_text(Y);return this.post_processor?this.post_processor(ue,Ce,{add_special_tokens:le}):{tokens:(0,i.mergeArrays)(ue??[],Ce??[])}}tokenize(V,{pair:Y=null,add_special_tokens:le=!1}={}){return this._tokenize_helper(V,{pair:Y,add_special_tokens:le}).tokens}encode(V,{text_pair:Y=null,add_special_tokens:le=!0,return_token_type_ids:ue=null}={}){return this._encode_plus(V,{text_pair:Y,add_special_tokens:le,return_token_type_ids:ue}).input_ids}batch_decode(V,Y={}){return V instanceof a.Tensor&&(V=V.tolist()),V.map(le=>this.decode(le,Y))}decode(V,Y={}){if(V instanceof a.Tensor&&(V=P(V)),!Array.isArray(V)||V.length===0||!(0,i.isIntegralNumber)(V[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(V,Y)}decode_single(V,{skip_special_tokens:Y=!1,clean_up_tokenization_spaces:le=null}){let ue=this.model.convert_ids_to_tokens(V);Y&&(ue=ue.filter(Ue=>!this.special_tokens.includes(Ue)));let Ce=this.decoder?this.decoder(ue):ue.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Ce=Ce.replaceAll(this.decoder.end_of_word_suffix," "),Y&&(Ce=Ce.trim())),(le??this.clean_up_tokenization_spaces)&&(Ce=A(Ce)),Ce}get_chat_template({chat_template:V=null,tools:Y=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const le=this.chat_template;if(V!==null&&Object.hasOwn(le,V))V=le[V];else if(V===null)if(Y!==null&&"tool_use"in le)V=le.tool_use;else if("default"in le)V=le.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(le).sort()}.`)}else if(V===null)if(this.chat_template)V=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return V}apply_chat_template(V,{tools:Y=null,documents:le=null,chat_template:ue=null,add_generation_prompt:Ce=!1,tokenize:Ue=!0,padding:Qe=!1,truncation:Ke=!1,max_length:Ze=null,return_tensor:ht=!0,return_dict:Ct=!1,tokenizer_kwargs:kt={},...Wt}={}){if(ue=this.get_chat_template({chat_template:ue,tools:Y}),typeof ue!="string")throw Error(`chat_template must be a string, but got ${typeof ue}`);let Ot=this._compiled_template_cache.get(ue);Ot===void 0&&(Ot=new c.Template(ue),this._compiled_template_cache.set(ue,Ot));const Vt=Object.create(null);for(const fr of cs){const Yr=this.getToken(fr);Yr&&(Vt[fr]=Yr)}const vr=Ot.render({messages:V,add_generation_prompt:Ce,tools:Y,documents:le,...Vt,...Wt});if(Ue){const fr=this._call(vr,{add_special_tokens:!1,padding:Qe,truncation:Ke,max_length:Ze,return_tensor:ht,...kt});return Ct?fr:fr.input_ids}return vr}}class qr extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class Vr extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class us extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class xs extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class Ts extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class Es extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class Ls extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class mr extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class Be extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class et extends dt{}class it extends dt{}class rr extends dt{constructor(V,Y){super(V,Y);re(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class zt extends dt{constructor(){super(...arguments);re(this,"return_token_type_ids",!0)}}class kr extends dt{}class ps extends dt{}class hs extends dt{}class Er extends dt{constructor(F,V){super(F,V),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs(F,V,Y){return br(this,F,V,Y)}}class ms extends Er{}class _s extends dt{}class Qr extends dt{}const Ps="▁";class Qs extends dt{constructor(V,Y){super(V,Y);re(this,"padding_side","left");this.legacy=Y.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new wt({replacement:Ps,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(V){if(V===null)return null;if(this.legacy||V.length===0)return super._encode_text(V);let Y=super._encode_text(Ps+V.replaceAll(Ps," "));return Y.length>1&&Y[0]===Ps&&this.special_tokens.includes(Y[1])&&(Y=Y.slice(1)),Y}}class Xs extends dt{}class Js extends dt{}class Ys extends dt{}class fs extends dt{}class Zs extends dt{}class en extends dt{}class tn extends dt{}class Lr extends dt{}class Cs extends dt{}function br(pe,F,V,Y){if(!("language_codes"in pe)||!Array.isArray(pe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in pe)||!(pe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in pe)||typeof pe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const le=Y.src_lang,ue=Y.tgt_lang;if(!pe.language_codes.includes(ue))throw new Error(`Target language code "${ue}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);if(le!==void 0){if(!pe.language_codes.includes(le))throw new Error(`Source language code "${le}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);for(const Ce of pe.post_processor.config.single)if("SpecialToken"in Ce&&pe.languageRegex.test(Ce.SpecialToken.id)){Ce.SpecialToken.id=pe.lang_to_token(le);break}}return Y.forced_bos_token_id=pe.model.convert_tokens_to_ids([pe.lang_to_token(ue)])[0],pe._call(F,V)}class zs extends dt{constructor(F,V){super(F,V),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs(F,V,Y){return br(this,F,V,Y)}}class Bs extends dt{constructor(F,V){super(F,V),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)).map(Y=>Y.slice(2,-2)),this.lang_to_token=Y=>`__${Y}__`}_build_translation_inputs(F,V,Y){return br(this,F,V,Y)}}class Ir extends dt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(F,{return_timestamps:V=!1,return_language:Y=!1,time_precision:le=null,force_full_sequences:ue=!0}={}){if(le===null)throw Error("Must specify time_precision");let Ce=null;const Ue=V==="word";function Qe(){return{language:Ce,timestamp:[null,null],text:""}}const Ke=[];let Ze=Qe(),ht=0;const Ct=this.timestamp_begin,Wt=Ct+1500;let Ot=[],Vt=[],vr=!1,fr=null;const Yr=new Set(this.all_special_ids);for(const Gt of F){const Zt=Gt.tokens,gr=Ue?Gt.token_timestamps:null;let Zr=null,ws=Ct;if("stride"in Gt){const[Rt,Jt,qt]=Gt.stride;if(ht-=Jt,fr=Rt-qt,Jt&&(ws=Jt/le+Ct),qt)for(let er=Zt.length-1;er>=0;--er){const ir=Number(Zt[er]);if(ir>=Ct){if(Zr!==null&&(ir-Ct)*le<fr)break;Zr=ir}}}let Ht=[],ur=[];for(let Rt=0;Rt<Zt.length;++Rt){const Jt=Number(Zt[Rt]);if(Yr.has(Jt)){const qt=this.decode([Jt]),er=p.WHISPER_LANGUAGE_MAPPING.get(qt.slice(2,-2));if(er!==void 0){if(Ce!==null&&er!==Ce&&!V){Ot.push(Ht);const ir=this.findLongestCommonSequence(Ot)[0],rn=this.decode(ir);Ze.text=rn,Ke.push(Ze),Ot=[],Ht=[],Ze=Qe()}Ce=Ze.language=er}}else if(Jt>=Ct&&Jt<=Wt){const qt=(Jt-Ct)*le+ht,er=(0,o.round)(qt,2);if(Zr!==null&&Jt>=Zr)vr=!0;else if(vr||Ot.length>0&&Jt<ws)vr=!1;else if(Ze.timestamp[0]===null)Ze.timestamp[0]=er;else if(er!==Ze.timestamp[0]){Ze.timestamp[1]=er,Ot.push(Ht),Ue&&Vt.push(ur);const[ir,rn]=this.findLongestCommonSequence(Ot,Vt),sn=this.decode(ir);Ze.text=sn,Ue&&(Ze.words=this.collateWordTimestamps(ir,rn,Ce)),Ke.push(Ze),Ot=[],Ht=[],Vt=[],ur=[],Ze=Qe()}}else if(Ht.push(Jt),Ue){let qt=(0,o.round)(gr[Rt]+ht,2),er;if(Rt+1<gr.length){er=(0,o.round)(gr[Rt+1]+ht,2);const ir=this.decode([Jt]);T.test(ir)&&(er=(0,o.round)(Math.min(qt+le,er),2))}else er=null;ur.push([qt,er])}}if("stride"in Gt){const[Rt,Jt,qt]=Gt.stride;ht+=Rt-qt}Ht.length>0?(Ot.push(Ht),Ue&&Vt.push(ur)):Ot.every(Rt=>Rt.length===0)&&(Ze=Qe(),Ot=[],Ht=[],Vt=[],ur=[])}if(Ot.length>0){if(ue&&V)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Gt,Zt]=this.findLongestCommonSequence(Ot,Vt),gr=this.decode(Gt);Ze.text=gr,Ue&&(Ze.words=this.collateWordTimestamps(Gt,Zt,Ce)),Ke.push(Ze)}let xr=Object.create(null);const gs=Ke.map(Gt=>Gt.text).join("");if(V||Y){for(let Gt=0;Gt<Ke.length;++Gt){const Zt=Ke[Gt];V||delete Zt.timestamp,Y||delete Zt.language}if(Ue){const Gt=[];for(const Zt of Ke)for(const gr of Zt.words)Gt.push(gr);xr={chunks:Gt}}else xr={chunks:Ke}}return[gs,xr]}findLongestCommonSequence(F,V=null){let Y=F[0],le=Y.length,ue=[];const Ce=Array.isArray(V)&&V.length>0;let Ue=Ce?[]:null,Qe=Ce?V[0]:null;for(let Ke=1;Ke<F.length;++Ke){const Ze=F[Ke];let ht=0,Ct=[le,le,0,0];const kt=Ze.length;for(let xr=1;xr<le+kt;++xr){const gs=Math.max(0,le-xr),Gt=Math.min(le,le+kt-xr),Zt=Y.slice(gs,Gt),gr=Math.max(0,xr-le),Zr=Math.min(kt,xr),ws=Ze.slice(gr,Zr);if(Zt.length!==ws.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Ht;Ce?Ht=Zt.filter((Jt,qt)=>Jt===ws[qt]&&Qe[gs+qt]<=V[Ke][gr+qt]).length:Ht=Zt.filter((Jt,qt)=>Jt===ws[qt]).length;const ur=xr/1e4,Rt=Ht/xr+ur;Ht>1&&Rt>ht&&(ht=Rt,Ct=[gs,Gt,gr,Zr])}const[Wt,Ot,Vt,vr]=Ct,fr=Math.floor((Ot+Wt)/2),Yr=Math.floor((vr+Vt)/2);ue.push(...Y.slice(0,fr)),Y=Ze.slice(Yr),le=Y.length,Ce&&(Ue.push(...Qe.slice(0,fr)),Qe=V[Ke].slice(Yr))}return ue.push(...Y),Ce?(Ue.push(...Qe),[ue,Ue]):[ue,[]]}collateWordTimestamps(F,V,Y){const[le,ue,Ce]=this.combineTokensIntoWords(F,Y),Ue=[];for(let Qe=0;Qe<le.length;++Qe){const Ke=Ce[Qe];Ue.push({text:le[Qe],timestamp:[V[Ke.at(0)][0],V[Ke.at(-1)][1]]})}return Ue}combineTokensIntoWords(F,V,Y=`"'“¡¿([{-`,le=`"'.。,，!！?？:：”)]}、`){V=V??"english";let ue,Ce,Ue;return["chinese","japanese","thai","lao","myanmar"].includes(V)?[ue,Ce,Ue]=this.splitTokensOnUnicode(F):[ue,Ce,Ue]=this.splitTokensOnSpaces(F),this.mergePunctuations(ue,Ce,Ue,Y,le)}decode(F,V){let Y;return V!=null&&V.decode_with_timestamps?(F instanceof a.Tensor&&(F=P(F)),Y=this.decodeWithTimestamps(F,V)):Y=super.decode(F,V),Y}decodeWithTimestamps(F,V){const Y=(V==null?void 0:V.time_precision)??.02,le=Array.from(this.all_special_ids).at(-1)+1;let ue=[[]];for(let Ce of F)if(Ce=Number(Ce),Ce>=le){const Ue=((Ce-le)*Y).toFixed(2);ue.push(`<|${Ue}|>`),ue.push([])}else ue[ue.length-1].push(Ce);return ue=ue.map(Ce=>typeof Ce=="string"?Ce:super.decode(Ce,V)),ue.join("")}splitTokensOnUnicode(F){const V=this.decode(F,{decode_with_timestamps:!0}),Y="�",le=[],ue=[],Ce=[];let Ue=[],Qe=[],Ke=0;for(let Ze=0;Ze<F.length;++Ze){const ht=F[Ze];Ue.push(ht),Qe.push(Ze);const Ct=this.decode(Ue,{decode_with_timestamps:!0});(!Ct.includes(Y)||V[Ke+Ct.indexOf(Y)]===Y)&&(le.push(Ct),ue.push(Ue),Ce.push(Qe),Ue=[],Qe=[],Ke+=Ct.length)}return[le,ue,Ce]}splitTokensOnSpaces(F){const[V,Y,le]=this.splitTokensOnUnicode(F),ue=[],Ce=[],Ue=[],Qe=new RegExp(`^[${w}]$`,"gu");for(let Ke=0;Ke<V.length;++Ke){const Ze=V[Ke],ht=Y[Ke],Ct=le[Ke],kt=ht[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Wt=Ze.startsWith(" "),Ot=Ze.trim(),Vt=Qe.test(Ot);if(kt||Wt||Vt||ue.length===0)ue.push(Ze),Ce.push(ht),Ue.push(Ct);else{const vr=ue.length-1;ue[vr]+=Ze,Ce[vr].push(...ht),Ue[vr].push(...Ct)}}return[ue,Ce,Ue]}mergePunctuations(F,V,Y,le,ue){const Ce=structuredClone(F),Ue=structuredClone(V),Qe=structuredClone(Y);let Ke=Ce.length-2,Ze=Ce.length-1;for(;Ke>=0;)Ce[Ke].startsWith(" ")&&le.includes(Ce[Ke].trim())?(Ce[Ze]=Ce[Ke]+Ce[Ze],Ue[Ze]=(0,i.mergeArrays)(Ue[Ke],Ue[Ze]),Qe[Ze]=(0,i.mergeArrays)(Qe[Ke],Qe[Ze]),Ce[Ke]="",Ue[Ke]=[],Qe[Ke]=[]):Ze=Ke,--Ke;for(Ke=0,Ze=1;Ze<Ce.length;)!Ce[Ke].endsWith(" ")&&ue.includes(Ce[Ze])?(Ce[Ke]+=Ce[Ze],Ue[Ke]=(0,i.mergeArrays)(Ue[Ke],Ue[Ze]),Qe[Ke]=(0,i.mergeArrays)(Qe[Ke],Qe[Ze]),Ce[Ze]="",Ue[Ze]=[],Qe[Ze]=[]):Ke=Ze,++Ze;return[Ce.filter(ht=>ht),Ue.filter(ht=>ht.length>0),Qe.filter(ht=>ht.length>0)]}}class Xr extends dt{}class En extends dt{}class zr extends dt{}class Pn extends dt{constructor(F,V){super(F,V),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(Y=>this.languageRegex.test(Y)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(F){if(F===null)return null;const[V,...Y]=F.trim().split(this.languageRegex);if(Y.length===0)return super._encode_text(V);if(Y.length===2){const[le,ue]=Y;return this.supported_language_codes.includes(le)||console.warn(`Unsupported language code "${le}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,i.mergeArrays)([le],super._encode_text(ue))}}}class Rs extends dt{}class Ar extends dt{}class Jr extends dt{}class cr extends dt{}class _r extends dt{}class Ns extends dt{constructor(F,V){super(F,V),this.decoder=new ut({})}}class Cn extends dt{}class Ss extends dt{}class Sn{static async from_pretrained(F,{progress_callback:V=null,config:Y=null,cache_dir:le=null,local_files_only:ue=!1,revision:Ce="main",legacy:Ue=null}={}){var Ct;const[Qe,Ke]=await u(F,{progress_callback:V,config:Y,cache_dir:le,local_files_only:ue,revision:Ce,legacy:Ue}),Ze=((Ct=Ke.tokenizer_class)==null?void 0:Ct.replace(/Fast$/,""))??"PreTrainedTokenizer";let ht=this.TOKENIZER_CLASS_MAPPING[Ze];return ht||(console.warn(`Unknown tokenizer class "${Ze}", attempting to construct from base class.`),ht=dt),new ht(Qe,Ke)}}re(Sn,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:kr,DistilBertTokenizer:et,CamembertTokenizer:it,DebertaTokenizer:Ts,DebertaV2Tokenizer:Es,BertTokenizer:qr,HerbertTokenizer:Ls,ConvBertTokenizer:mr,RoFormerTokenizer:Be,XLMTokenizer:rr,ElectraTokenizer:zt,MobileBertTokenizer:us,SqueezeBertTokenizer:xs,AlbertTokenizer:Vr,GPT2Tokenizer:ps,BartTokenizer:hs,MBartTokenizer:Er,MBart50Tokenizer:ms,RobertaTokenizer:_s,WhisperTokenizer:Ir,CodeGenTokenizer:Xr,CLIPTokenizer:En,SiglipTokenizer:zr,MarianTokenizer:Pn,BloomTokenizer:Qr,NllbTokenizer:zs,M2M100Tokenizer:Bs,LlamaTokenizer:Qs,CodeLlamaTokenizer:Xs,XLMRobertaTokenizer:Js,MPNetTokenizer:Ys,FalconTokenizer:fs,GPTNeoXTokenizer:Zs,EsmTokenizer:en,Wav2Vec2CTCTokenizer:Rs,BlenderbotTokenizer:Ar,BlenderbotSmallTokenizer:Jr,SpeechT5Tokenizer:cr,NougatTokenizer:_r,VitsTokenizer:Ns,Qwen2Tokenizer:tn,GemmaTokenizer:Lr,Grok1Tokenizer:Cs,CohereTokenizer:Cn,MgpstrTokenizer:Ss,PreTrainedTokenizer:dt})},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>q,hamming:()=>h,hanning:()=>u,mel_filter_bank:()=>k,read_audio:()=>c,spectrogram:()=>$,window_function:()=>z});var s=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),n=t("./src/utils/core.js"),o=t("./src/env.js"),a=t("?7a2c"),l=t("./src/utils/tensor.js");async function c(U,Z){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const H=await(await(0,s.getFile)(U)).arrayBuffer(),J=new AudioContext({sampleRate:Z});typeof Z>"u"&&console.warn(`No sampling rate provided, using default of ${J.sampleRate}Hz.`);const ie=await J.decodeAudioData(H);let ae;if(ie.numberOfChannels===2){const ce=Math.sqrt(2),he=ie.getChannelData(0),N=ie.getChannelData(1);ae=new Float32Array(he.length);for(let O=0;O<ie.length;++O)ae[O]=ce*(he[O]+N[O])/2}else ae=ie.getChannelData(0);return ae}function p(U,Z){if(U<1)return new Float64Array;if(U===1)return new Float64Array([1]);const H=1-Z,J=2*Math.PI/(U-1),ie=new Float64Array(U);for(let ae=0;ae<U;++ae)ie[ae]=Z-H*Math.cos(ae*J);return ie}function u(U){return p(U,.5)}function h(U){return p(U,.54)}const g={htk:U=>2595*Math.log10(1+U/700),kaldi:U=>1127*Math.log(1+U/700),slaney:(U,Z=1e3,H=15,J=27/Math.log(6.4))=>U>=Z?H+Math.log(U/Z)*J:3*U/200};function f(U,Z="htk"){const H=g[Z];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof U=="number"?H(U):U.map(J=>H(J))}const P={htk:U=>700*(10**(U/2595)-1),kaldi:U=>700*(Math.exp(U/1127)-1),slaney:(U,Z=1e3,H=15,J=Math.log(6.4)/27)=>U>=H?Z*Math.exp(J*(U-H)):200*U/3};function A(U,Z="htk"){const H=P[Z];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof U=="number"?H(U):U.map(J=>H(J))}function v(U,Z){const H=Float64Array.from({length:Z.length-1},(ce,he)=>Z[he+1]-Z[he]),J=Array.from({length:U.length},()=>new Array(Z.length));for(let ce=0;ce<U.length;++ce){const he=J[ce];for(let N=0;N<Z.length;++N)he[N]=Z[N]-U[ce]}const ie=Z.length-2,ae=Array.from({length:ie},()=>new Array(U.length));for(let ce=0;ce<U.length;++ce){const he=J[ce];for(let N=0;N<ie;++N){const O=-he[N]/H[N],G=he[N+2]/H[N+1];ae[N][ce]=Math.max(0,Math.min(O,G))}}return ae}function y(U,Z,H){const J=(Z-U)/(H-1);return Float64Array.from({length:H},(ie,ae)=>U+J*ae)}function k(U,Z,H,J,ie,ae=null,ce="htk",he=!1){if(ae!==null&&ae!=="slaney")throw new Error('norm must be one of null or "slaney"');const N=f(H,ce),O=f(J,ce),G=y(N,O,Z+2);let se=A(G,ce),X;if(he){const fe=ie/(U*2);X=f(Float64Array.from({length:U},(ke,He)=>He*fe),ce),se=G}else X=y(0,Math.floor(ie/2),U);const we=v(X,se);if(ae!==null&&ae==="slaney")for(let fe=0;fe<Z;++fe){const ke=we[fe],He=2/(se[fe+2]-se[fe]);for(let Me=0;Me<U;++Me)ke[Me]*=He}return we}function E(U,Z,H){const J=new U.constructor(U.length+Z+H),ie=U.length-1;for(let ae=0;ae<U.length;++ae)J[Z+ae]=U[ae];for(let ae=1;ae<=Z;++ae)J[Z-ae]=U[(0,n.calculateReflectOffset)(ae,ie)];for(let ae=1;ae<=H;++ae)J[ie+Z+ae]=U[(0,n.calculateReflectOffset)(ie-ae,ie)];return J}function M(U,Z,H,J,ie){if(H<=0)throw new Error("reference must be greater than zero");if(J<=0)throw new Error("min_value must be greater than zero");H=Math.max(J,H);const ae=Math.log10(H);for(let ce=0;ce<U.length;++ce)U[ce]=Z*Math.log10(Math.max(J,U[ce])-ae);if(ie!==null){if(ie<=0)throw new Error("db_range must be greater than zero");const ce=(0,i.max)(U)[0]-ie;for(let he=0;he<U.length;++he)U[he]=Math.max(U[he],ce)}return U}function w(U,Z=1,H=1e-5,J=null){return M(U,20,Z,H,J)}function T(U,Z=1,H=1e-10,J=null){return M(U,10,Z,H,J)}async function $(U,Z,H,J,{fft_length:ie=null,power:ae=1,center:ce=!0,pad_mode:he="reflect",onesided:N=!0,preemphasis:O=null,mel_filters:G=null,mel_floor:se=1e-10,log_mel:X=null,reference:we=1,min_value:fe=1e-10,db_range:ke=null,remove_dc_offset:He=null,min_num_frames:Me=null,max_num_frames:K=null,do_pad:j=!0,transpose:me=!1}={}){const Pe=Z.length;if(ie===null&&(ie=H),H>ie)throw Error(`frame_length (${H}) may not be larger than fft_length (${ie})`);if(Pe!==H)throw new Error(`Length of the window (${Pe}) must equal frame_length (${H})`);if(J<=0)throw new Error("hop_length must be greater than zero");if(ae===null&&G!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ce){if(he!=="reflect")throw new Error(`pad_mode="${he}" not implemented yet.`);const be=Math.floor((ie-1)/2)+1;U=E(U,be,be)}let Te=Math.floor(1+Math.floor((U.length-H)/J));Me!==null&&Te<Me&&(Te=Me);const Ae=N?Math.floor(ie/2)+1:ie;let Ie=Te,Le=Te;K!==null&&(K>Te?j&&(Le=K):Le=Ie=K);const Ne=new i.FFT(ie),We=new Float64Array(ie),D=new Float64Array(Ne.outputBufferSize),ee=new Float32Array(Ae*Le);for(let be=0;be<Ie;++be){const ve=be*J,Re=Math.min(U.length-ve,H);Re!==H&&We.fill(0,0,H);for(let Fe=0;Fe<Re;++Fe)We[Fe]=U[ve+Fe];if(He){let Fe=0;for(let qe=0;qe<Re;++qe)Fe+=We[qe];const je=Fe/Re;for(let qe=0;qe<Re;++qe)We[qe]-=je}if(O!==null){for(let Fe=Re-1;Fe>=1;--Fe)We[Fe]-=O*We[Fe-1];We[0]*=1-O}for(let Fe=0;Fe<Z.length;++Fe)We[Fe]*=Z[Fe];Ne.realTransform(D,We);for(let Fe=0;Fe<Ae;++Fe){const je=Fe<<1;ee[Fe*Le+be]=D[je]**2+D[je+1]**2}}if(ae!==null&&ae!==2){const be=2/ae;for(let ve=0;ve<ee.length;++ve)ee[ve]**=be}const B=G.length;let te=await(0,l.matmul)(new l.Tensor("float32",G.flat(),[B,Ae]),new l.Tensor("float32",ee,[Ae,Le]));me&&(te=te.transpose(1,0));const de=te.data;for(let be=0;be<de.length;++be)de[be]=Math.max(se,de[be]);if(ae!==null&&X!==null){const be=Math.min(de.length,Ie*B);switch(X){case"log":for(let ve=0;ve<be;++ve)de[ve]=Math.log(de[ve]);break;case"log10":for(let ve=0;ve<be;++ve)de[ve]=Math.log10(de[ve]);break;case"dB":if(ae===1)w(de,we,fe,ke);else if(ae===2)T(de,we,fe,ke);else throw new Error(`Cannot use log_mel option '${X}' with power ${ae}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${X}'`)}}return te}function z(U,Z,{periodic:H=!0,frame_length:J=null,center:ie=!0}={}){const ae=H?U+1:U;let ce;switch(Z){case"boxcar":ce=new Float64Array(ae).fill(1);break;case"hann":case"hann_window":ce=u(ae);break;case"hamming":ce=h(ae);break;case"povey":ce=u(ae).map(he=>Math.pow(he,.85));break;default:throw new Error(`Unknown window type ${Z}.`)}if(H&&(ce=ce.subarray(0,U)),J===null)return ce;if(U>J)throw new Error(`Length of the window (${U}) may not be larger than frame_length (${J})`);return ce}function R(U,Z){let H=44;const J=new ArrayBuffer(H+U.length*4),ie=new DataView(J);Q(ie,0,"RIFF"),ie.setUint32(4,36+U.length*4,!0),Q(ie,8,"WAVE"),Q(ie,12,"fmt "),ie.setUint32(16,16,!0),ie.setUint16(20,3,!0),ie.setUint16(22,1,!0),ie.setUint32(24,Z,!0),ie.setUint32(28,Z*4,!0),ie.setUint16(32,4,!0),ie.setUint16(34,32,!0),Q(ie,36,"data"),ie.setUint32(40,U.length*4,!0);for(let ae=0;ae<U.length;++ae,H+=4)ie.setFloat32(H,U[ae],!0);return J}function Q(U,Z,H){for(let J=0;J<H.length;++J)U.setUint8(Z+J,H.charCodeAt(J))}class q{constructor(Z,H){this.audio=Z,this.sampling_rate=H}toWav(){return R(this.audio,this.sampling_rate)}toBlob(){const Z=this.toWav();return new Blob([Z],{type:"audio/wav"})}async save(Z){let H;if(o.apis.IS_BROWSER_ENV){if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");H=n.saveBlob}else if(o.apis.IS_FS_AVAILABLE)H=async(J,ie)=>{let ae=await ie.arrayBuffer();a.writeFileSync(J,Buffer.from(ae))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await H(Z,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>i,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>o,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",i="config.json",n="preprocessor_config.json",o=n,a="processor_config.json",l="chat_template.json",c="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>g,count:()=>v,dispatchCallback:()=>s,escapeRegExp:()=>n,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>o,len:()=>A,mergeArrays:()=>u,pick:()=>P,pop:()=>p,product:()=>h,reverseDictionary:()=>i,saveBlob:()=>f});function s(y,k){y&&y(k)}function i(y){return Object.fromEntries(Object.entries(y).map(([k,E])=>[E,k]))}function n(y){return y.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(y){var k,E,M;return((M=(E=(k=y==null?void 0:y.prototype)==null?void 0:k.__proto__)==null?void 0:E.constructor)==null?void 0:M.name)==="TypedArray"}function a(y){return Number.isInteger(y)||typeof y=="bigint"}function l(y){return y==null||y===-1}function c(y){const k=[];let E=y;for(;Array.isArray(E);)k.push(E.length),E=E[0];return k}function p(y,k,E=void 0){const M=y[k];if(M!==void 0)return delete y[k],M;if(E===void 0)throw Error(`Key ${k} does not exist in object.`);return E}function u(...y){return Array.prototype.concat.apply([],y)}function h(...y){return y.reduce((k,E)=>k.flatMap(M=>E.map(w=>[M,w])))}function g(y,k){return Math.abs((y+k)%(2*k)-k)}function f(y,k){const E=URL.createObjectURL(k),M=document.createElement("a");M.href=E,M.download=y,M.click(),M.remove(),URL.revokeObjectURL(E)}function P(y,k){return Object.assign({},...k.map(E=>{if(y[E]!==void 0)return{[E]:y[E]}}))}function A(y){let k=0;for(const E of y)++k;return k}function v(y,k){let E=0;for(const M of y)M===k&&++E;return E}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>i,DictionarySplitter:()=>l,PriorityQueue:()=>s,TokenLattice:()=>o});class s{constructor(p=(h,g)=>h>g,u=1/0){this._heap=[],this._comparator=p,this._maxSize=u}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...p){return this.extend(p)}extend(p){for(const u of p)if(this.size<this._maxSize)this._heap.push(u),this._siftUp();else{const h=this._smallest();this._comparator(u,this._heap[h])&&(this._heap[h]=u,this._siftUpFrom(h))}return this.size}pop(){const p=this.peek(),u=this.size-1;return u>0&&this._swap(0,u),this._heap.pop(),this._siftDown(),p}replace(p){const u=this.peek();return this._heap[0]=p,this._siftDown(),u}_parent(p){return(p+1>>>1)-1}_left(p){return(p<<1)+1}_right(p){return p+1<<1}_greater(p,u){return this._comparator(this._heap[p],this._heap[u])}_swap(p,u){const h=this._heap[p];this._heap[p]=this._heap[u],this._heap[u]=h}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(p){for(;p>0&&this._greater(p,this._parent(p));)this._swap(p,this._parent(p)),p=this._parent(p)}_siftDown(){let p=0;for(;this._left(p)<this.size&&this._greater(this._left(p),p)||this._right(p)<this.size&&this._greater(this._right(p),p);){const u=this._right(p)<this.size&&this._greater(this._right(p),this._left(p))?this._right(p):this._left(p);this._swap(p,u),p=u}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class i{constructor(){this.root=n.default()}extend(p){for(const u of p)this.push(u)}push(p){let u=this.root;for(const h of p){let g=u.children.get(h);g===void 0&&(g=n.default(),u.children.set(h,g)),u=g}u.isLeaf=!0}*commonPrefixSearch(p){let u=this.root;if(u===void 0)return;let h="";for(const g of p){if(h+=g,u=u.children.get(g),u===void 0)return;u.isLeaf&&(yield h)}}}class n{constructor(p,u){this.isLeaf=p,this.children=u}static default(){return new n(!1,new Map)}}class o{constructor(p,u,h){this.chars=Array.from(p),this.len=this.chars.length,this.bosTokenId=u,this.eosTokenId=h,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const g=new a(this.bosTokenId,0,0,0,0),f=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(g.clone()),this.nodes.push(f.clone()),this.beginNodes[this.len].push(f),this.endNodes[0].push(g)}insert(p,u,h,g){const f=this.nodes.length,P=new a(g,f,p,u,h);this.beginNodes[p].push(P),this.endNodes[p+u].push(P),this.nodes.push(P)}viterbi(){const p=this.len;let u=0;for(;u<=p;){if(this.beginNodes[u].length==0)return[];for(let A of this.beginNodes[u]){A.prev=null;let v=0,y=null;for(let k of this.endNodes[u]){const E=k.backtraceScore+A.score;(y===null||E>v)&&(y=k.clone(),v=E)}if(y!==null)A.prev=y,A.backtraceScore=v;else return[]}++u}const h=[],f=this.beginNodes[p][0].prev;if(f===null)return[];let P=f.clone();for(;P.prev!==null;)h.push(P.clone()),P=P.clone().prev.clone();return h.reverse(),h}piece(p){return this.chars.slice(p.pos,p.pos+p.length).join("")}tokens(){return this.viterbi().map(u=>this.piece(u))}tokenIds(){return this.viterbi().map(u=>u.tokenId)}}class a{constructor(p,u,h,g,f){this.tokenId=p,this.nodeId=u,this.pos=h,this.length=g,this.score=f,this.prev=null,this.backtraceScore=0}clone(){const p=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return p.prev=this.prev,p.backtraceScore=this.backtraceScore,p}}class l{constructor(p){this.trie=this._buildTrie(p)}_buildTrie(p){var h;const u=Object.create(null);for(const g of p){let f=u;for(let P=0;P<g.length;++P)f=f[h=g[P]]??(f[h]=Object.create(null));f.end=g}return u}split(p){const u=[],h=p.length;let g=0,f=0;for(;f<h;){let P=this.trie,A=null,v=f;for(;v<h&&(P=P[p[v]]);)P.end&&(A=P.end),++v;A?(f>g&&u.push(p.slice(g,f)),u.push(A),f+=A.length,g=f):++f}return g<h&&u.push(p.slice(g)),u}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>o,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var s=t("./src/env.js"),i=t("./src/utils/devices.js");const n=function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),o=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[i.DEVICE_TYPES.wasm]:o.q8}),l=Object.freeze({[o.fp32]:"",[o.fp16]:"_fp16",[o.int8]:"_int8",[o.uint8]:"_uint8",[o.q8]:"_quantized",[o.q4]:"_q4",[o.q4f16]:"_q4f16",[o.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let i=function(...n){return i._call(...n)};return Object.setPrototypeOf(i,new.target.prototype)}_call(...i){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>g,getModelFile:()=>y,getModelJSON:()=>k});var s=t("?7a2c"),i=t("?a42a"),n=t("./src/env.js"),o=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(T){if(this.filePath=T,this.headers=new Headers,this.exists=s.existsSync(T),this.exists){this.status=200,this.statusText="OK";let $=s.statSync(T);this.headers.set("content-length",$.size.toString()),this.updateContentType();const z=s.createReadStream(T);this.body=new ReadableStream({start(R){z.on("data",Q=>R.enqueue(Q)),z.on("end",()=>R.close()),z.on("error",Q=>R.error(Q))},cancel(){z.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const T=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[T]??"application/octet-stream")}clone(){let T=new c(this.filePath);return T.exists=this.exists,T.status=this.status,T.statusText=this.statusText,T.headers=new Headers(this.headers),T}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const T=await s.promises.readFile(this.filePath);return new Blob([T],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(w,T=null,$=null){let z;try{z=new URL(w)}catch{return!1}return!(T&&!T.includes(z.protocol)||$&&!$.includes(z.hostname))}const u=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function h(w){return!(!u.test(w)||w.includes("..")||w.includes("--")||w.endsWith(".git")||w.endsWith(".ipynb"))}async function g(w){var T;if(n.env.useFS&&!p(w,["http:","https:","blob:"]))return new c(w.toString());if(typeof process<"u"&&((T=process==null?void 0:process.release)==null?void 0:T.name)==="node"){const $=!!(Fs!=null&&Fs.TESTING_REMOTELY),z=n.env.version,R=new Headers;if(R.set("User-Agent",`transformers.js/${z}; is_ci/${$};`),p(w,["http:","https:"],["huggingface.co","hf.co"])){const q=(Fs==null?void 0:Fs.HF_TOKEN)??(Fs==null?void 0:Fs.HF_ACCESS_TOKEN);q&&R.set("Authorization",`Bearer ${q}`)}return fetch(w,{headers:R})}else return fetch(w)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function P(w,T,$){if(!$)return null;const z=f[w]??`Error (${w}) occurred while trying to load file`;throw Error(`${z}: "${T}".`)}class A{constructor(T){this.path=T}async match(T){let $=i.join(this.path,T),z=new c($);if(z.exists)return z}async put(T,$,z=void 0){let R=i.join(this.path,T);try{const Q=$.headers.get("Content-Length"),q=parseInt(Q??"0");let U=0;await s.promises.mkdir(i.dirname(R),{recursive:!0});const Z=s.createWriteStream(R),H=$.body.getReader();for(;;){const{done:J,value:ie}=await H.read();if(J)break;await new Promise((ce,he)=>{Z.write(ie,N=>{if(N){he(N);return}ce()})}),U+=ie.length;const ae=q?U/q*100:0;z==null||z({progress:ae,loaded:U,total:q})}Z.close()}catch(Q){try{await s.promises.unlink(R)}catch{}throw Q}}}async function v(w,...T){for(let $ of T)try{let z=await w.match($);if(z)return z}catch{continue}}async function y(w,T,$=!0,z={},R=!1){if(!n.env.allowLocalModels){if(z.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,o.dispatchCallback)(z.progress_callback,{status:"initiate",name:w,file:T});let Q;if(!Q&&n.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{Q=await caches.open("transformers-cache")}catch(se){console.warn("An error occurred while opening the browser cache:",se)}}if(!Q&&n.env.useFSCache&&(Q=new A(z.cache_dir??n.env.cacheDir)),!Q&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");Q=n.env.customCache}const q=z.revision??"main",U=M(w,T),Z=h(w),H=Z?M(n.env.localModelPath,U):U,J=M(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",w).replaceAll("{revision}",encodeURIComponent(q)),T);let ie;const ae=Q instanceof A?q==="main"?U:M(w,q,T):J;let ce=!1,he;Q&&(he=await v(Q,H,ae));const N=he!==void 0;if(he===void 0){if(n.env.allowLocalModels)if(p(U,["http:","https:"])){if(z.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${U}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${U}.`)}else try{he=await g(H),ie=H}catch(X){console.warn(`Unable to load from local path "${H}": "${X}"`)}if(he===void 0||he.status===404){if(z.local_files_only||!n.env.allowRemoteModels){if($)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${H}".`);return null}if(!Z)throw Error(`Local file missing at "${H}" and download aborted due to invalid model ID "${w}".`);if(he=await g(J),he.status!==200)return P(he.status,J,$);ie=ae}ce=Q&&typeof Response<"u"&&he instanceof Response&&he.status===200}(0,o.dispatchCallback)(z.progress_callback,{status:"download",name:w,file:T});let O;if(!(n.apis.IS_NODE_ENV&&R)){let se;z.progress_callback?N&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(se=new Uint8Array(await he.arrayBuffer()),(0,o.dispatchCallback)(z.progress_callback,{status:"progress",name:w,file:T,progress:100,loaded:se.length,total:se.length})):se=await E(he,X=>{(0,o.dispatchCallback)(z.progress_callback,{status:"progress",name:w,file:T,...X})}):se=new Uint8Array(await he.arrayBuffer()),O=se}if(ce&&ie&&await Q.match(ie)===void 0&&(O?await Q.put(ie,new Response(O,{headers:he.headers})).catch(se=>{console.warn(`Unable to add response to browser cache: ${se}.`)}):await Q.put(ie,he,z.progress_callback)),(0,o.dispatchCallback)(z.progress_callback,{status:"done",name:w,file:T}),O){if(R)throw new Error("Cannot return path in a browser environment.");return O}if(he instanceof c)return he.filePath;const G=await Q.match(ie);if(G instanceof c)return G.filePath;throw new Error("Unable to return path for response.")}async function k(w,T,$=!0,z={}){const R=await y(w,T,$,z,!1);if(R===null)return{};const q=new TextDecoder("utf-8").decode(R);return JSON.parse(q)}async function E(w,T){const $=w.headers.get("Content-Length");$===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let z=parseInt($??"0"),R=new Uint8Array(z),Q=0;const q=w.body.getReader();async function U(){const{done:Z,value:H}=await q.read();if(Z)return;const J=Q+H.length;if(J>z){z=J;const ae=new Uint8Array(z);ae.set(R),R=ae}R.set(H,Q),Q=J;const ie=Q/z*100;return T({progress:ie,loaded:Q,total:z}),U()}return await U(),R}function M(...w){return w=w.map((T,$)=>($&&(T=T.replace(new RegExp("^/"),"")),$!==w.length-1&&(T=T.replace(new RegExp("/$"),"")),T)),w.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>f,load_image:()=>P});var s=t("./src/utils/core.js"),i=t("./src/utils/hub.js"),n=t("./src/env.js"),o=t("./src/utils/tensor.js"),a=t("?2b25");let l,c,p;const u=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(u)l=(A,v)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(A,v)},p=self.createImageBitmap,c=self.ImageData;else if(a)p=async A=>{const y=(await A.metadata()).channels,{data:k,info:E}=await A.rotate().raw().toBuffer({resolveWithObject:!0}),M=new f(new Uint8ClampedArray(k),E.width,E.height,E.channels);return y!==void 0&&y!==E.channels&&M.convert(y),M};else throw new Error("Unable to load image processing library.");const h={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},g=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(v,y,k,E){this.data=v,this.width=y,this.height=k,this.channels=E}get size(){return[this.width,this.height]}static async read(v){if(v instanceof f)return v;if(typeof v=="string"||v instanceof URL)return await this.fromURL(v);if(v instanceof Blob)return await this.fromBlob(v);if(typeof HTMLCanvasElement<"u"&&v instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&v instanceof OffscreenCanvas)return this.fromCanvas(v);throw new Error(`Unsupported input type: ${typeof v}`)}static fromCanvas(v){if(!u)throw new Error("fromCanvas() is only supported in browser environments.");const k=v.getContext("2d").getImageData(0,0,v.width,v.height).data;return new f(k,v.width,v.height,4)}static async fromURL(v){const y=await(0,i.getFile)(v);if(y.status!==200)throw new Error(`Unable to read image from "${v}" (${y.status} ${y.statusText})`);const k=await y.blob();return this.fromBlob(k)}static async fromBlob(v){if(u){const y=await p(v),k=l(y.width,y.height).getContext("2d");return k.drawImage(y,0,0),new this(k.getImageData(0,0,y.width,y.height).data,y.width,y.height,4)}else{const y=a(await v.arrayBuffer());return await p(y)}}static fromTensor(v,y="CHW"){if(v.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${v.dims.length} dimensions.`);if(y==="CHW")v=v.transpose(1,2,0);else if(y!=="HWC")throw new Error(`Unsupported channel format: ${y}`);if(!(v.data instanceof Uint8ClampedArray||v.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${v.type}`);switch(v.dims[2]){case 1:case 2:case 3:case 4:return new f(v.data,v.dims[1],v.dims[0],v.dims[2]);default:throw new Error(`Unsupported number of channels: ${v.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const v=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let y=0,k=0;y<this.data.length;y+=this.channels){const E=this.data[y],M=this.data[y+1],w=this.data[y+2];v[k++]=Math.round(.2989*E+.587*M+.114*w)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(v,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const v=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let y=0,k=0;y<this.data.length;++y)v[k++]=this.data[y],v[k++]=this.data[y],v[k++]=this.data[y];break;case 4:for(let y=0,k=0;y<this.data.length;y+=4)v[k++]=this.data[y],v[k++]=this.data[y+1],v[k++]=this.data[y+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(v,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const v=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let y=0,k=0;y<this.data.length;++y)v[k++]=this.data[y],v[k++]=this.data[y],v[k++]=this.data[y],v[k++]=255;break;case 3:for(let y=0,k=0;y<this.data.length;y+=3)v[k++]=this.data[y],v[k++]=this.data[y+1],v[k++]=this.data[y+2],v[k++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(v,this.width,this.height,4)}putAlpha(v){if(v.width!==this.width||v.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${v.width}x${v.height}`);if(v.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${v.channels}`);const y=this.data,k=v.data,E=this.width*this.height;if(this.channels===3){const M=new Uint8ClampedArray(E*4);for(let w=0,T=0,$=0;w<E;++w)M[$++]=y[T++],M[$++]=y[T++],M[$++]=y[T++],M[$++]=k[w];return this._update(M,this.width,this.height,4)}else if(this.channels===4){for(let M=0;M<E;++M)y[4*M+3]=k[M];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(v,y,{resample:k=2}={}){if(this.width===v&&this.height===y)return this;let E=h[k]??k;const M=(0,s.isNullishDimension)(v),w=(0,s.isNullishDimension)(y);if(M&&w)return this;if(M?v=y/this.height*this.width:w&&(y=v/this.width*this.height),u){const T=this.channels,$=this.toCanvas(),z=l(v,y).getContext("2d");return z.drawImage($,0,0,v,y),new f(z.getImageData(0,0,v,y).data,v,y,4).convert(T)}else{let T=this.toSharp();switch(E){case"box":case"hamming":(E==="box"||E==="hamming")&&(console.warn(`Resampling method ${E} is not yet supported. Using bilinear instead.`),E="bilinear");case"nearest":case"bilinear":case"bicubic":T=T.affine([v/this.width,0,0,y/this.height],{interpolator:E});break;case"lanczos":T=T.resize({width:v,height:y,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${E} is not supported.`)}return await p(T)}}async pad([v,y,k,E]){if(v=Math.max(v,0),y=Math.max(y,0),k=Math.max(k,0),E=Math.max(E,0),v===0&&y===0&&k===0&&E===0)return this;if(u){const M=this.channels,w=this.toCanvas(),T=this.width+v+y,$=this.height+k+E,z=l(T,$).getContext("2d");return z.drawImage(w,0,0,this.width,this.height,v,k,this.width,this.height),new f(z.getImageData(0,0,T,$).data,T,$,4).convert(M)}else{const M=this.toSharp().extend({left:v,right:y,top:k,bottom:E});return await p(M)}}async crop([v,y,k,E]){if(v=Math.max(v,0),y=Math.max(y,0),k=Math.min(k,this.width-1),E=Math.min(E,this.height-1),v===0&&y===0&&k===this.width-1&&E===this.height-1)return this;const M=k-v+1,w=E-y+1;if(u){const T=this.channels,$=this.toCanvas(),z=l(M,w).getContext("2d");return z.drawImage($,v,y,M,w,0,0,M,w),new f(z.getImageData(0,0,M,w).data,M,w,4).convert(T)}else{const T=this.toSharp().extract({left:v,top:y,width:M,height:w});return await p(T)}}async center_crop(v,y){if(this.width===v&&this.height===y)return this;const k=(this.width-v)/2,E=(this.height-y)/2;if(u){const M=this.channels,w=this.toCanvas(),T=l(v,y).getContext("2d");let $=0,z=0,R=0,Q=0;return k>=0?$=k:R=-k,E>=0?z=E:Q=-E,T.drawImage(w,$,z,v,y,R,Q,v,y),new f(T.getImageData(0,0,v,y).data,v,y,4).convert(M)}else{let M=this.toSharp();if(k>=0&&E>=0)M=M.extract({left:Math.floor(k),top:Math.floor(E),width:v,height:y});else if(k<=0&&E<=0){const w=Math.floor(-E),T=Math.floor(-k);M=M.extend({top:w,left:T,right:v-this.width-T,bottom:y-this.height-w})}else{let w=[0,0],T=0;E<0?(w[0]=Math.floor(-E),w[1]=y-this.height-w[0]):T=Math.floor(E);let $=[0,0],z=0;k<0?($[0]=Math.floor(-k),$[1]=v-this.width-$[0]):z=Math.floor(k),M=M.extend({top:w[0],bottom:w[1],left:$[0],right:$[1]}).extract({left:z,top:T,width:v,height:y})}return await p(M)}}async toBlob(v="image/png",y=1){if(!u)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:v,quality:y})}toTensor(v="CHW"){let y=new o.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(v!=="HWC")if(v==="CHW")y=y.permute(2,0,1);else throw new Error(`Unsupported channel format: ${v}`);return y}toCanvas(){if(!u)throw new Error("toCanvas() is only supported in browser environments.");const v=this.clone().rgba(),y=l(v.width,v.height),k=new c(v.data,v.width,v.height);return y.getContext("2d").putImageData(k,0,0),y}split(){const{data:v,width:y,height:k,channels:E}=this,M=v.constructor,w=v.length/E,T=Array.from({length:E},()=>new M(w));for(let $=0;$<w;++$){const z=E*$;for(let R=0;R<E;++R)T[R][$]=v[z+R]}return T.map($=>new f($,y,k,1))}_update(v,y,k,E=null){return this.data=v,this.width=y,this.height=k,E!==null&&(this.channels=E),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(v){if(this.channels===v)return this;switch(v){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(v){if(u){if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const y=v.split(".").pop().toLowerCase(),k=g.get(y)??"image/png",E=await this.toBlob(k);(0,s.saveBlob)(v,E)}else{if(n.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(v);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(u)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const P=f.read.bind(f)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>P,bankers_round:()=>y,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>k,interpolate_data:()=>s,log_softmax:()=>o,magnitude:()=>c,max:()=>u,medianFilter:()=>A,min:()=>p,permute_data:()=>i,round:()=>v,softmax:()=>n});function s(E,[M,w,T],[$,z],R="bilinear",Q=!1){const q=z/T,U=$/w,Z=new E.constructor($*z*M),H=w*T,J=$*z;for(let ie=0;ie<$;++ie)for(let ae=0;ae<z;++ae){const ce=ie*z+ae,he=(ae+.5)/q-.5,N=(ie+.5)/U-.5;let O=Math.floor(he),G=Math.floor(N);const se=Math.min(O+1,T-1),X=Math.min(G+1,w-1);O=Math.max(O,0),G=Math.max(G,0);const we=he-O,fe=N-G,ke=(1-we)*(1-fe),He=we*(1-fe),Me=(1-we)*fe,K=we*fe,j=G*T,me=X*T,Pe=j+O,Te=j+se,Ae=me+O,Ie=me+se;for(let Le=0;Le<M;++Le){const Ne=Le*H;Z[Le*J+ce]=ke*E[Ne+Pe]+He*E[Ne+Te]+Me*E[Ne+Ae]+K*E[Ne+Ie]}}return Z}function i(E,M,w){const T=new Array(w.length),$=new Array(w.length);for(let Q=w.length-1,q=1;Q>=0;--Q)$[Q]=q,T[Q]=M[w[Q]],q*=T[Q];const z=w.map((Q,q)=>$[w.indexOf(q)]),R=new E.constructor(E.length);for(let Q=0;Q<E.length;++Q){let q=0;for(let U=M.length-1,Z=Q;U>=0;--U)q+=Z%M[U]*z[U],Z=Math.floor(Z/M[U]);R[q]=E[Q]}return[R,T]}function n(E){const M=u(E)[0],w=E.map(z=>Math.exp(z-M)),T=w.reduce((z,R)=>z+R,0);return w.map(z=>z/T)}function o(E){const M=u(E)[0];let w=0;for(let z=0;z<E.length;++z)w+=Math.exp(E[z]-M);const T=Math.log(w);return E.map(z=>z-M-T)}function a(E,M){let w=0;for(let T=0;T<E.length;++T)w+=E[T]*M[T];return w}function l(E,M){const w=a(E,M),T=c(E),$=c(M);return w/(T*$)}function c(E){return Math.sqrt(E.reduce((M,w)=>M+w*w,0))}function p(E){if(E.length===0)throw Error("Array must not be empty");let M=E[0],w=0;for(let T=1;T<E.length;++T)E[T]<M&&(M=E[T],w=T);return[M,w]}function u(E){if(E.length===0)throw Error("Array must not be empty");let M=E[0],w=0;for(let T=1;T<E.length;++T)E[T]>M&&(M=E[T],w=T);return[M,w]}function h(E){return E>0&&(E&E-1)===0}class g{constructor(M){if(this.size=M|0,this.size<=1||!h(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=M<<1,this.table=new Float64Array(this.size*2);for(let T=0;T<this.table.length;T+=2){const $=Math.PI*T/this.size;this.table[T]=Math.cos($),this.table[T+1]=-Math.sin($)}let w=0;for(let T=1;this.size>T;T<<=1)++w;this._width=w%2===0?w-1:w,this._bitrev=new Int32Array(1<<this._width);for(let T=0;T<this._bitrev.length;++T){this._bitrev[T]=0;for(let $=0;$<this._width;$+=2){const z=this._width-$-2;this._bitrev[T]|=(T>>>$&3)<<z}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(M,w){const T=w||new Array(M.length>>>1);for(let $=0;$<M.length;$+=2)T[$>>>1]=M[$];return T}toComplexArray(M,w){const T=w||this.createComplexArray();for(let $=0;$<T.length;$+=2)T[$]=M[$>>>1],T[$+1]=0;return T}transform(M,w){if(M===w)throw new Error("Input and output buffers must be different");this._transform4(M,w,1)}realTransform(M,w){if(M===w)throw new Error("Input and output buffers must be different");this._realTransform4(M,w,1)}inverseTransform(M,w){if(M===w)throw new Error("Input and output buffers must be different");this._transform4(M,w,-1);for(let T=0;T<M.length;++T)M[T]/=this.size}_transform4(M,w,T){const $=this._csize;let R=1<<this._width,Q=$/R<<1,q,U;const Z=this._bitrev;if(Q===4)for(q=0,U=0;q<$;q+=Q,++U){const J=Z[U];this._singleTransform2(w,M,q,J,R)}else for(q=0,U=0;q<$;q+=Q,++U){const J=Z[U];this._singleTransform4(w,M,q,J,R,T)}const H=this.table;for(R>>=2;R>=2;R>>=2){Q=$/R<<1;const J=Q>>>2;for(q=0;q<$;q+=Q){const ie=q+J-1;for(let ae=q,ce=0;ae<ie;ae+=2,ce+=R){const he=ae,N=he+J,O=N+J,G=O+J,se=M[he],X=M[he+1],we=M[N],fe=M[N+1],ke=M[O],He=M[O+1],Me=M[G],K=M[G+1],j=H[ce],me=T*H[ce+1],Pe=we*j-fe*me,Te=we*me+fe*j,Ae=H[2*ce],Ie=T*H[2*ce+1],Le=ke*Ae-He*Ie,Ne=ke*Ie+He*Ae,We=H[3*ce],D=T*H[3*ce+1],ee=Me*We-K*D,B=Me*D+K*We,te=se+Le,de=X+Ne,be=se-Le,ve=X-Ne,Re=Pe+ee,Fe=Te+B,je=T*(Pe-ee),qe=T*(Te-B);M[he]=te+Re,M[he+1]=de+Fe,M[N]=be+qe,M[N+1]=ve-je,M[O]=te-Re,M[O+1]=de-Fe,M[G]=be-qe,M[G+1]=ve+je}}}}_singleTransform2(M,w,T,$,z){const R=M[$],Q=M[$+1],q=M[$+z],U=M[$+z+1];w[T]=R+q,w[T+1]=Q+U,w[T+2]=R-q,w[T+3]=Q-U}_singleTransform4(M,w,T,$,z,R){const Q=z*2,q=z*3,U=M[$],Z=M[$+1],H=M[$+z],J=M[$+z+1],ie=M[$+Q],ae=M[$+Q+1],ce=M[$+q],he=M[$+q+1],N=U+ie,O=Z+ae,G=U-ie,se=Z-ae,X=H+ce,we=J+he,fe=R*(H-ce),ke=R*(J-he);w[T]=N+X,w[T+1]=O+we,w[T+2]=G+ke,w[T+3]=se-fe,w[T+4]=N-X,w[T+5]=O-we,w[T+6]=G-ke,w[T+7]=se+fe}_realTransform4(M,w,T){const $=this._csize;let R=1<<this._width,Q=$/R<<1,q,U;const Z=this._bitrev;if(Q===4)for(q=0,U=0;q<$;q+=Q,++U){const ie=Z[U];this._singleRealTransform2(w,M,q,ie>>>1,R>>>1)}else for(q=0,U=0;q<$;q+=Q,++U){const ie=Z[U];this._singleRealTransform4(w,M,q,ie>>>1,R>>>1,T)}const H=this.table;for(R>>=2;R>=2;R>>=2){Q=$/R<<1;const ie=Q>>>1,ae=ie>>>1,ce=ae>>>1;for(q=0;q<$;q+=Q)for(let he=0,N=0;he<=ce;he+=2,N+=R){const O=q+he,G=O+ae,se=G+ae,X=se+ae,we=M[O],fe=M[O+1],ke=M[G],He=M[G+1],Me=M[se],K=M[se+1],j=M[X],me=M[X+1],Pe=we,Te=fe,Ae=H[N],Ie=T*H[N+1],Le=ke*Ae-He*Ie,Ne=ke*Ie+He*Ae,We=H[2*N],D=T*H[2*N+1],ee=Me*We-K*D,B=Me*D+K*We,te=H[3*N],de=T*H[3*N+1],be=j*te-me*de,ve=j*de+me*te,Re=Pe+ee,Fe=Te+B,je=Pe-ee,qe=Te-B,Xe=Le+be,ut=Ne+ve,wt=T*(Le-be),nr=T*(Ne-ve);if(M[O]=Re+Xe,M[O+1]=Fe+ut,M[G]=je+nr,M[G+1]=qe-wt,he===0){M[se]=Re-Xe,M[se+1]=Fe-ut;continue}if(he===ce)continue;const jt=q+ae-he,dr=q+ie-he;M[jt]=je-T*nr,M[jt+1]=-qe-T*wt,M[dr]=Re-T*Xe,M[dr+1]=-Fe+T*ut}}const J=$>>>1;for(let ie=2;ie<J;ie+=2)M[$-ie]=M[ie],M[$-ie+1]=-M[ie+1]}_singleRealTransform2(M,w,T,$,z){const R=M[$],Q=M[$+z];w[T]=R+Q,w[T+1]=0,w[T+2]=R-Q,w[T+3]=0}_singleRealTransform4(M,w,T,$,z,R){const Q=z*2,q=z*3,U=M[$],Z=M[$+z],H=M[$+Q],J=M[$+q],ie=U+H,ae=U-H,ce=Z+J,he=R*(Z-J);w[T]=ie+ce,w[T+1]=0,w[T+2]=ae,w[T+3]=-he,w[T+4]=ie-ce,w[T+5]=0,w[T+6]=ae,w[T+7]=he}}class f{constructor(M){const w=2*(M-1),T=2*(2*M-1),$=2**Math.ceil(Math.log2(T));this.bufferSize=$,this._a=w;const z=new Float64Array(T),R=new Float64Array($);this._chirpBuffer=new Float64Array($),this._buffer1=new Float64Array($),this._buffer2=new Float64Array($),this._outBuffer1=new Float64Array($),this._outBuffer2=new Float64Array($);const Q=-2*Math.PI/M,q=Math.cos(Q),U=Math.sin(Q);for(let Z=0;Z<T>>1;++Z){const H=(Z+1-M)**2/2,J=Math.sqrt(q**2+U**2)**H,ie=H*Math.atan2(U,q),ae=2*Z;z[ae]=J*Math.cos(ie),z[ae+1]=J*Math.sin(ie),R[ae]=z[ae],R[ae+1]=-z[ae+1]}this._slicedChirpBuffer=z.subarray(w,T),this._f=new g($>>1),this._f.transform(this._chirpBuffer,R)}_transform(M,w,T){const $=this._buffer1,z=this._buffer2,R=this._outBuffer1,Q=this._outBuffer2,q=this._chirpBuffer,U=this._slicedChirpBuffer,Z=this._a;if(T)for(let H=0;H<U.length;H+=2){const J=H+1,ie=H>>1,ae=w[ie];$[H]=ae*U[H],$[J]=ae*U[J]}else for(let H=0;H<U.length;H+=2){const J=H+1;$[H]=w[H]*U[H]-w[J]*U[J],$[J]=w[H]*U[J]+w[J]*U[H]}this._f.transform(R,$);for(let H=0;H<q.length;H+=2){const J=H+1;z[H]=R[H]*q[H]-R[J]*q[J],z[J]=R[H]*q[J]+R[J]*q[H]}this._f.inverseTransform(Q,z);for(let H=0;H<Q.length;H+=2){const J=Q[H+Z],ie=Q[H+Z+1],ae=U[H],ce=U[H+1];M[H]=J*ae-ie*ce,M[H+1]=J*ce+ie*ae}}transform(M,w){this._transform(M,w,!1)}realTransform(M,w){this._transform(M,w,!0)}}class P{constructor(M){this.fft_length=M,this.isPowerOfTwo=h(M),this.isPowerOfTwo?(this.fft=new g(M),this.outputBufferSize=2*M):(this.fft=new f(M),this.outputBufferSize=this.fft.bufferSize)}realTransform(M,w){this.fft.realTransform(M,w)}transform(M,w){this.fft.transform(M,w)}}function A(E,M){if(M%2===0||M<=0)throw new Error("Window size must be a positive odd number");const w=new E.constructor(E.length),T=new E.constructor(M),$=Math.floor(M/2);for(let z=0;z<E.length;++z){let R=0;for(let Q=-$;Q<=$;++Q){let q=z+Q;q<0?q=Math.abs(q):q>=E.length&&(q=2*(E.length-1)-q),T[R++]=E[q]}T.sort(),w[z]=T[$]}return w}function v(E,M){const w=Math.pow(10,M);return Math.round(E*w)/w}function y(E){const M=Math.round(E);return Math.abs(E)%1===.5?M%2===0?M:M-1:M}function k(E){const M=E.length,w=E[0].length,T=[M+1,w+1],$=Array.from({length:T[0]},()=>Array(T[1]).fill(1/0));$[0][0]=0;const z=Array.from({length:T[0]},()=>Array(T[1]).fill(-1));for(let Z=1;Z<T[1];++Z)for(let H=1;H<T[0];++H){const J=$[H-1][Z-1],ie=$[H-1][Z],ae=$[H][Z-1];let ce,he;J<ie&&J<ae?(ce=J,he=0):ie<J&&ie<ae?(ce=ie,he=1):(ce=ae,he=2),$[H][Z]=E[H-1][Z-1]+ce,z[H][Z]=he}for(let Z=0;Z<T[1];++Z)z[0][Z]=2;for(let Z=0;Z<T[0];++Z)z[Z][0]=1;let R=M,Q=w,q=[],U=[];for(;R>0||Q>0;)switch(q.push(R-1),U.push(Q-1),z[R][Q]){case 0:--R,--Q;break;case 1:--R;break;case 2:--Q;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${R}, ${Q}]. Please file a bug report.`)}return q.reverse(),U.reverse(),[q,U]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>o,Tensor:()=>a,cat:()=>w,full:()=>U,full_like:()=>Z,interpolate:()=>p,interpolate_4d:()=>u,layer_norm:()=>y,matmul:()=>h,mean:()=>R,mean_pooling:()=>v,ones:()=>H,ones_like:()=>J,permute:()=>c,quantize_embeddings:()=>he,rand:()=>ce,rfft:()=>g,slice:()=>A,stack:()=>T,std_mean:()=>z,topk:()=>f,zeros:()=>ie,zeros_like:()=>ae});var s=t("./src/utils/maths.js"),i=t("./src/backends/onnx.js"),n=t("./src/ops/registry.js");const o=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{constructor(...O){re(this,"ort_tensor");return(0,i.isONNXTensor)(O[0])?this.ort_tensor=O[0]:this.ort_tensor=new i.Tensor(O[0],O[1],O[2]),new Proxy(this,{get:(G,se)=>{if(typeof se=="string"){let X=Number(se);if(Number.isInteger(X))return G._getitem(X)}return G[se]},set:(G,se,X)=>G[se]=X})}get dims(){return this.ort_tensor.dims}set dims(O){this.ort_tensor.dims=O}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[O,...G]=this.dims;if(G.length>0){const se=G.reduce((X,we)=>X*we);for(let X=0;X<O;++X)yield this._subarray(X,se,G)}else yield*this.data}_getitem(O){const[G,...se]=this.dims;if(O=M(O,G),se.length>0){const X=se.reduce((we,fe)=>we*fe);return this._subarray(O,X,se)}else return new a(this.type,[this.data[O]],se)}indexOf(O){const G=this.data;for(let se=0;se<G.length;++se)if(G[se]==O)return se;return-1}_subarray(O,G,se){const X=O*G,we=(O+1)*G,fe="subarray"in this.data?this.data.subarray(X,we):this.data.slice(X,we);return new a(this.type,fe,se)}item(){const O=this.data;if(O.length!==1)throw new Error(`a Tensor with ${O.length} elements cannot be converted to Scalar`);return O[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const O=this.data;for(let G=0;G<O.length;++G)O[G]=1/(1+Math.exp(-O[G]));return this}map(O){return this.clone().map_(O)}map_(O){const G=this.data;for(let se=0;se<G.length;++se)G[se]=O(G[se],se,G);return this}mul(O){return this.clone().mul_(O)}mul_(O){const G=this.data;for(let se=0;se<G.length;++se)G[se]*=O;return this}div(O){return this.clone().div_(O)}div_(O){const G=this.data;for(let se=0;se<G.length;++se)G[se]/=O;return this}add(O){return this.clone().add_(O)}add_(O){const G=this.data;for(let se=0;se<G.length;++se)G[se]+=O;return this}sub(O){return this.clone().sub_(O)}sub_(O){const G=this.data;for(let se=0;se<G.length;++se)G[se]-=O;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...O){const G=[],se=[];for(let Me=0;Me<this.dims.length;++Me){let K=O[Me];if(K==null)se.push([0,this.dims[Me]]),G.push(this.dims[Me]);else if(typeof K=="number")K=M(K,this.dims[Me],Me),se.push([K,K+1]);else if(Array.isArray(K)&&K.length===2){let[j,me]=K;if(j=j===null?0:M(j,this.dims[Me],Me,!1),me=me===null?this.dims[Me]:M(me,this.dims[Me],Me,!1),j>me)throw new Error(`Invalid slice: ${K}`);const Pe=[Math.max(j,0),Math.min(me,this.dims[Me])];se.push(Pe),G.push(Pe[1]-Pe[0])}else throw new Error(`Invalid slice: ${K}`)}const X=se.map(([Me,K])=>K-Me),we=X.reduce((Me,K)=>Me*K),fe=this.data,ke=new fe.constructor(we),He=this.stride();for(let Me=0;Me<we;++Me){let K=0;for(let j=X.length-1,me=Me;j>=0;--j){const Pe=X[j];K+=(me%Pe+se[j][0])*He[j],me=Math.floor(me/Pe)}ke[Me]=fe[K]}return new a(this.type,ke,G)}permute(...O){return c(this,O)}transpose(...O){return this.permute(...O)}sum(O=null,G=!1){return this.norm(1,O,G)}norm(O="fro",G=null,se=!1){if(O==="fro")O=2;else if(typeof O=="string")throw Error(`Unsupported norm: ${O}`);const X=this.data,we=(Me,K)=>Me+K**O;if(G===null){const Me=X.reduce(we,0)**(1/O);return new a(this.type,[Me],[])}const[fe,ke,He]=$(we,this,G,se);if(O!==1)for(let Me=0;Me<ke.length;++Me)ke[Me]=ke[Me]**(1/O);return new a(fe,ke,He)}normalize_(O=2,G=1){G=M(G,this.dims.length);const se=this.norm(O,G,!0),X=this.data,we=se.data;for(let fe=0;fe<X.length;++fe){let ke=0;for(let He=this.dims.length-1,Me=fe,K=1;He>=0;--He){const j=this.dims[He];if(He!==G){const me=Me%j;ke+=me*K,K*=this.dims[He]}Me=Math.floor(Me/j)}X[fe]/=we[ke]}return this}normalize(O=2,G=1){return this.clone().normalize_(O,G)}stride(){return Q(this.dims)}squeeze(O=null){return new a(this.type,this.data,k(this.dims,O))}squeeze_(O=null){return this.dims=k(this.dims,O),this}unsqueeze(O=null){return new a(this.type,this.data,E(this.dims,O))}unsqueeze_(O=null){return this.dims=E(this.dims,O),this}flatten_(O=0,G=-1){G=(G+this.dims.length)%this.dims.length;let se=this.dims.slice(0,O),X=this.dims.slice(O,G+1),we=this.dims.slice(G+1);return this.dims=[...se,X.reduce((fe,ke)=>fe*ke,1),...we],this}flatten(O=0,G=-1){return this.clone().flatten_(O,G)}view(...O){let G=-1;for(let X=0;X<O.length;++X)if(O[X]===-1){if(G!==-1)throw new Error("Only one dimension can be inferred");G=X}const se=this.data;if(G!==-1){const X=O.reduce((we,fe,ke)=>ke!==G?we*fe:we,1);O[G]=se.length/X}return new a(this.type,se,O)}neg_(){const O=this.data;for(let G=0;G<O.length;++G)O[G]=-O[G];return this}neg(){return this.clone().neg_()}gt(O){const G=new Uint8Array(this.data.length),se=this.data;for(let X=0;X<se.length;++X)G[X]=se[X]>O?1:0;return new a("bool",G,this.dims)}lt(O){const G=new Uint8Array(this.data.length),se=this.data;for(let X=0;X<se.length;++X)G[X]=se[X]<O?1:0;return new a("bool",G,this.dims)}clamp_(O,G){const se=this.data;for(let X=0;X<se.length;++X)se[X]=Math.min(Math.max(se[X],O),G);return this}clamp(O,G){return this.clone().clamp_(O,G)}round_(){const O=this.data;for(let G=0;G<O.length;++G)O[G]=Math.round(O[G]);return this}round(){return this.clone().round_()}mean(O=null,G=!1){return R(this,O,G)}min(O=null,G=!1){if(O===null){const fe=(0,s.min)(this.data)[0];return new a(this.type,[fe],[])}const[se,X,we]=$((fe,ke)=>Math.min(fe,ke),this,O,G,1/0);return new a(se,X,we)}max(O=null,G=!1){if(O===null){const fe=(0,s.max)(this.data)[0];return new a(this.type,[fe],[])}const[se,X,we]=$((fe,ke)=>Math.max(fe,ke),this,O,G,-1/0);return new a(se,X,we)}argmin(O=null,G=!1){if(O!==null)throw new Error("`dim !== null` not yet implemented.");const se=(0,s.min)(this.data)[1];return new a("int64",[BigInt(se)],[])}argmax(O=null,G=!1){if(O!==null)throw new Error("`dim !== null` not yet implemented.");const se=(0,s.max)(this.data)[1];return new a("int64",[BigInt(se)],[])}to(O){if(this.type===O)return this;if(!o.hasOwnProperty(O))throw new Error(`Unsupported type: ${O}`);let G;const se=["int64","uint64"].includes(this.type),X=["int64","uint64"].includes(O);return se&&!X?G=Number:!se&&X&&(G=BigInt),new a(O,o[O].from(this.data,G),this.dims)}}function l(N,O){const G=N.length,se=O.reduce((we,fe)=>we*fe);if(G!==se)throw Error(`cannot reshape array of size ${G} into shape (${O})`);let X=N;for(let we=O.length-1;we>=0;we--)X=X.reduce((fe,ke)=>{let He=fe[fe.length-1];return He.length<O[we]?He.push(ke):fe.push([ke]),fe},[[]]);return X[0]}function c(N,O){const[G,se]=(0,s.permute_data)(N.data,N.dims,O);return new a(N.type,G,se)}function p(N,[O,G],se="bilinear",X=!1){const we=N.dims.at(-3)??1,fe=N.dims.at(-2),ke=N.dims.at(-1);let He=(0,s.interpolate_data)(N.data,[we,fe,ke],[O,G],se,X);return new a(N.type,He,[we,O,G])}async function u(N,{size:O=null,mode:G="bilinear"}={}){if(N.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!O)throw new Error("`interpolate_4d` requires a `size` argument.");let se;if(O.length===2)se=[...N.dims.slice(0,2),...O];else if(O.length===3)se=[N.dims[0],...O];else if(O.length===4)se=O;else throw new Error("`size` must be of length 2, 3, or 4.");let X;if(G==="nearest")X=await n.TensorOpRegistry.nearest_interpolate_4d;else if(G==="bilinear")X=await n.TensorOpRegistry.bilinear_interpolate_4d;else if(G==="bicubic")X=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${G}`);const we=new a("int64",new BigInt64Array(se.map(BigInt)),[se.length]);return await X({x:N,s:we})}async function h(N,O){return await(await n.TensorOpRegistry.matmul)({a:N,b:O})}async function g(N,O){return await(await n.TensorOpRegistry.rfft)({x:N,a:O})}async function f(N,O){const G=await n.TensorOpRegistry.top_k;return O==null?O=N.dims.at(-1):O=Math.min(O,N.dims.at(-1)),await G({x:N,k:new a("int64",[BigInt(O)],[1])})}const P=N=>new a("int64",N,[N.length]);async function A(N,O,G,se,X){return await(await n.TensorOpRegistry.slice)({x:N,s:P(O),e:P(G),a:P(se),t:P(X??new Array(se.length).fill(1))})}function v(N,O){const G=N.data,se=O.data,X=[N.dims[0],N.dims[2]],we=new G.constructor(X[0]*X[1]),[fe,ke,He]=N.dims;let Me=0;for(let K=0;K<fe;++K){const j=K*He*ke;for(let me=0;me<He;++me){let Pe=0,Te=0;const Ae=K*ke,Ie=j+me;for(let Ne=0;Ne<ke;++Ne){const We=Number(se[Ae+Ne]);Te+=We,Pe+=G[Ie+Ne*He]*We}const Le=Pe/Te;we[Me++]=Le}}return new a(N.type,we,X)}function y(N,O,{eps:G=1e-5}={}){if(N.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[se,X]=N.dims;if(O.length!==1&&O[0]!==X)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[we,fe]=z(N,1,0,!0),ke=we.data,He=fe.data,Me=N.data,K=new Me.constructor(Me.length);for(let j=0;j<se;++j){const me=j*X;for(let Pe=0;Pe<X;++Pe){const Te=me+Pe;K[Te]=(Me[Te]-He[j])/(ke[j]+G)}}return new a(N.type,K,N.dims)}function k(N,O){return N=N.slice(),O===null?N=N.filter(G=>G!==1):typeof O=="number"?N[O]===1&&N.splice(O,1):Array.isArray(O)&&(N=N.filter((G,se)=>G!==1||!O.includes(se))),N}function E(N,O){return O=M(O,N.length+1),N=N.slice(),N.splice(O,0,1),N}function M(N,O,G=null,se=!0){if(N<-O||N>=O){if(se)throw new Error(`IndexError: index ${N} is out of bounds for dimension${G===null?"":" "+G} with size ${O}`);return N<-O?0:O}return N<0&&(N=(N%O+O)%O),N}function w(N,O=0){O=M(O,N[0].dims.length);const G=N[0].dims.slice();G[O]=N.reduce((fe,ke)=>fe+ke.dims[O],0);const se=G.reduce((fe,ke)=>fe*ke,1),X=new N[0].data.constructor(se),we=N[0].type;if(O===0){let fe=0;for(const ke of N){const He=ke.data;X.set(He,fe),fe+=He.length}}else{let fe=0;for(let ke=0;ke<N.length;++ke){const{data:He,dims:Me}=N[ke];for(let K=0;K<He.length;++K){let j=0;for(let me=Me.length-1,Pe=K,Te=1;me>=0;--me){const Ae=Me[me];let Ie=Pe%Ae;me===O&&(Ie+=fe),j+=Ie*Te,Te*=G[me],Pe=Math.floor(Pe/Ae)}X[j]=He[K]}fe+=Me[O]}}return new a(we,X,G)}function T(N,O=0){return w(N.map(G=>G.unsqueeze(O)),O)}function $(N,O,G=null,se=!1,X=null){const we=O.data,fe=O.dims;G=M(G,fe.length);const ke=fe.slice();ke[G]=1;const He=new we.constructor(we.length/fe[G]);X!==null&&He.fill(X);for(let Me=0;Me<we.length;++Me){let K=0;for(let j=fe.length-1,me=Me,Pe=1;j>=0;--j){const Te=fe[j];if(j!==G){const Ae=me%Te;K+=Ae*Pe,Pe*=ke[j]}me=Math.floor(me/Te)}He[K]=N(He[K],we[Me],Me,K)}return se||ke.splice(G,1),[O.type,He,ke]}function z(N,O=null,G=1,se=!1){const X=N.data,we=N.dims;if(O===null){const Pe=X.reduce((Le,Ne)=>Le+Ne,0)/X.length,Te=Math.sqrt(X.reduce((Le,Ne)=>Le+(Ne-Pe)**2,0)/(X.length-G)),Ae=new a(N.type,[Pe],[]);return[new a(N.type,[Te],[]),Ae]}O=M(O,we.length);const fe=R(N,O,se),ke=fe.data,[He,Me,K]=$((me,Pe,Te,Ae)=>me+(Pe-ke[Ae])**2,N,O,se);for(let me=0;me<Me.length;++me)Me[me]=Math.sqrt(Me[me]/(we[O]-G));return[new a(He,Me,K),fe]}function R(N,O=null,G=!1){const se=N.dims,X=N.data;if(O===null){const He=X.reduce((Me,K)=>Me+K,0);return new a(N.type,[He/X.length],[])}O=M(O,se.length);const[we,fe,ke]=$((He,Me)=>He+Me,N,O,G);if(se[O]!==1)for(let He=0;He<fe.length;++He)fe[He]/=se[O];return new a(we,fe,ke)}function Q(N){const O=new Array(N.length);for(let G=N.length-1,se=1;G>=0;--G)O[G]=se,se*=N[G];return O}function q(N,O,G,se){const X=N.reduce((we,fe)=>we*fe,1);return new a(G,new se(X).fill(O),N)}function U(N,O){let G,se;if(typeof O=="number")G="float32",se=Float32Array;else if(typeof O=="bigint")G="int64",se=BigInt64Array;else if(typeof O=="boolean")G="bool",se=Uint8Array;else throw new Error(`Unsupported data type: ${typeof O}`);return q(N,O,G,se)}function Z(N,O){return U(N.dims,O)}function H(N){return q(N,1n,"int64",BigInt64Array)}function J(N){return H(N.dims)}function ie(N){return q(N,0n,"int64",BigInt64Array)}function ae(N){return ie(N.dims)}function ce(N){const O=N.reduce((G,se)=>G*se,1);return new a("float32",Float32Array.from({length:O},()=>Math.random()),N)}function he(N,O){if(N.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(N.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(O))throw new Error("The precision must be either 'binary' or 'ubinary'");const G=O==="binary",se=G?"int8":"uint8",X=G?Int8Array:Uint8Array,we=N.data,fe=new X(we.length/8);for(let ke=0;ke<we.length;++ke){const He=we[ke]>0?1:0,Me=Math.floor(ke/8),K=ke%8;fe[Me]|=He<<7-K,G&&K===0&&(fe[Me]-=128)}return new a(se,fe,[N.dims[0],N.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>o,RawVideoFrame:()=>n,load_video:()=>a});var s=t("./src/utils/image.js"),i=t("./src/env.js");class n{constructor(c,p){this.image=c,this.timestamp=p}}class o{constructor(c,p){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((u,h)=>new n(u,(h+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:c=null,fps:p=null}={}){if(!i.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const u=[],h=document.createElement("video");if(h.crossOrigin="anonymous",h.muted=!0,typeof l=="string")h.src=l;else if(l instanceof Blob)h.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)h.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(k=>h.onloadedmetadata=k),h.seekable.start(0)===h.seekable.end(0)){const E=await(await fetch(h.src)).blob();h.src=URL.createObjectURL(E),await new Promise(M=>h.onloadedmetadata=M)}const g=h.duration;let f,P;c!=null?(f=c,P=c===1?0:g/(c-1)):(P=1/p,f=Math.floor(g/P));let A=[];for(let k=0;k<f;++k)A.push(c===1?g/2:k*P);const v=document.createElement("canvas");v.width=h.videoWidth,v.height=h.videoHeight;const y=v.getContext("2d",{willReadFrequently:!0});for(const k of A){h.currentTime=k,await new Promise(T=>{h.onseeked=T}),y.drawImage(h,0,0,v.width,v.height);const E=y.getImageData(0,0,v.width,v.height),M=new s.RawImage(E.data,v.width,v.height,4),w=new n(M,k);u.push(w)}return h.remove(),new o(u,g)}}},Qw={};function Ft(e){var r=Qw[e];if(r!==void 0)return r.exports;var t=Qw[e]={exports:{}};return ux[e](t,t.exports,Ft),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Ft.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var i=Object.create(null);Ft.r(i);var n={};r=r||[null,e({}),e([]),e(e)];for(var o=s&2&&t;typeof o=="object"&&!~r.indexOf(o);o=e(o))Object.getOwnPropertyNames(o).forEach(a=>n[a]=()=>t[a]);return n.default=()=>t,Ft.d(i,n),i}})(),Ft.d=(e,r)=>{for(var t in r)Ft.o(r,t)&&!Ft.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},Ft.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),Ft.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var _={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Ft.r(_),Ft.d(_,{ASTFeatureExtractor:()=>u.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>i.AutoConfig,AutoFeatureExtractor:()=>h.AutoFeatureExtractor,AutoImageProcessor:()=>P.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>y.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>k.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>u.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>M.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>u.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>u.EncodecFeatureExtractor,EosTokenCriteria:()=>E.EosTokenCriteria,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>v.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>M.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>M.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>v.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>v.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>u.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>g.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>E.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>v.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LogitsProcessor:()=>M.LogitsProcessor,LogitsProcessorList:()=>M.LogitsProcessorList,LogitsWarper:()=>M.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>E.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>v.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>M.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>M.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>u.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>v.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>M.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>M.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>v.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>v.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>v.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>i.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>A.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>u.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>v.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>v.Qwen2VLProcessor,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>o.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>M.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>v.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>u.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>v.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>u.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>v.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>E.StoppingCriteria,StoppingCriteriaList:()=>E.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>M.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>M.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>k.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>M.TopKLogitsWarper,TopPLogitsWarper:()=>M.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>v.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>v.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>u.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>v.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>v.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>u.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>u.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>v.WhisperProcessor,WhisperTextStreamer:()=>k.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>M.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>i.getKeyValueShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>o.load_image,load_video:()=>a.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Ft("./src/env.js"),r=Ft("./src/pipelines.js"),t=Ft("./src/models.js"),s=Ft("./src/tokenizers.js"),i=Ft("./src/configs.js"),n=Ft("./src/utils/audio.js"),o=Ft("./src/utils/image.js"),a=Ft("./src/utils/video.js"),l=Ft("./src/utils/tensor.js"),c=Ft("./src/utils/maths.js"),p=Ft("./src/base/feature_extraction_utils.js"),u=Ft("./src/models/feature_extractors.js"),h=Ft("./src/models/auto/feature_extraction_auto.js"),g=Ft("./src/base/image_processors_utils.js"),f=Ft("./src/models/image_processors.js"),P=Ft("./src/models/auto/image_processing_auto.js"),A=Ft("./src/base/processing_utils.js"),v=Ft("./src/models/processors.js"),y=Ft("./src/models/auto/processing_auto.js"),k=Ft("./src/generation/streamers.js"),E=Ft("./src/generation/stopping_criteria.js"),M=Ft("./src/generation/logits_process.js")})(),_.ASTFeatureExtractor,_.ASTForAudioClassification,_.ASTModel,_.ASTPreTrainedModel,_.AlbertForMaskedLM,_.AlbertForQuestionAnswering,_.AlbertForSequenceClassification,_.AlbertModel,_.AlbertPreTrainedModel,_.AlbertTokenizer,_.AudioClassificationPipeline,_.AutoConfig,_.AutoFeatureExtractor,_.AutoImageProcessor,_.AutoModel,_.AutoModelForAudioClassification,_.AutoModelForAudioFrameClassification,_.AutoModelForAudioTextToText,_.AutoModelForCTC,_.AutoModelForCausalLM,_.AutoModelForDepthEstimation,_.AutoModelForDocumentQuestionAnswering,_.AutoModelForImageClassification,_.AutoModelForImageFeatureExtraction,_.AutoModelForImageMatting,_.AutoModelForImageSegmentation,_.AutoModelForImageTextToText,_.AutoModelForImageToImage,_.AutoModelForMaskGeneration,_.AutoModelForMaskedLM,_.AutoModelForNormalEstimation,_.AutoModelForObjectDetection,_.AutoModelForPoseEstimation,_.AutoModelForQuestionAnswering,_.AutoModelForSemanticSegmentation,_.AutoModelForSeq2SeqLM,_.AutoModelForSequenceClassification,_.AutoModelForSpeechSeq2Seq,_.AutoModelForTextToSpectrogram,_.AutoModelForTextToWaveform,_.AutoModelForTokenClassification,_.AutoModelForUniversalSegmentation,_.AutoModelForVision2Seq,_.AutoModelForXVector,_.AutoModelForZeroShotObjectDetection,_.AutoProcessor,_.AutoTokenizer,_.AutomaticSpeechRecognitionPipeline,_.BackgroundRemovalPipeline,_.BartForConditionalGeneration,_.BartForSequenceClassification,_.BartModel,_.BartPretrainedModel,_.BartTokenizer,_.BaseModelOutput,_.BaseStreamer,_.BeitFeatureExtractor,_.BeitForImageClassification,_.BeitModel,_.BeitPreTrainedModel,_.BertForMaskedLM,_.BertForQuestionAnswering,_.BertForSequenceClassification,_.BertForTokenClassification,_.BertModel,_.BertPreTrainedModel,_.BertTokenizer,_.BitImageProcessor,_.BlenderbotForConditionalGeneration,_.BlenderbotModel,_.BlenderbotPreTrainedModel,_.BlenderbotSmallForConditionalGeneration,_.BlenderbotSmallModel,_.BlenderbotSmallPreTrainedModel,_.BlenderbotSmallTokenizer,_.BlenderbotTokenizer,_.BloomForCausalLM,_.BloomModel,_.BloomPreTrainedModel,_.BloomTokenizer,_.CLIPFeatureExtractor,_.CLIPImageProcessor,_.CLIPModel,_.CLIPPreTrainedModel,_.CLIPSegForImageSegmentation,_.CLIPSegModel,_.CLIPSegPreTrainedModel,_.CLIPTextModel,_.CLIPTextModelWithProjection,_.CLIPTokenizer,_.CLIPVisionModel,_.CLIPVisionModelWithProjection,_.CamembertForMaskedLM,_.CamembertForQuestionAnswering,_.CamembertForSequenceClassification,_.CamembertForTokenClassification,_.CamembertModel,_.CamembertPreTrainedModel,_.CamembertTokenizer,_.CausalLMOutput,_.CausalLMOutputWithPast,_.ChineseCLIPFeatureExtractor,_.ChineseCLIPModel,_.ChineseCLIPPreTrainedModel,_.ClapAudioModelWithProjection,_.ClapFeatureExtractor,_.ClapModel,_.ClapPreTrainedModel,_.ClapTextModelWithProjection,_.ClassifierFreeGuidanceLogitsProcessor,_.CodeGenForCausalLM,_.CodeGenModel,_.CodeGenPreTrainedModel,_.CodeGenTokenizer,_.CodeLlamaTokenizer,_.CohereForCausalLM,_.CohereModel,_.CoherePreTrainedModel,_.CohereTokenizer,_.ConvBertForMaskedLM,_.ConvBertForQuestionAnswering,_.ConvBertForSequenceClassification,_.ConvBertForTokenClassification,_.ConvBertModel,_.ConvBertPreTrainedModel,_.ConvBertTokenizer,_.ConvNextFeatureExtractor,_.ConvNextForImageClassification,_.ConvNextImageProcessor,_.ConvNextModel,_.ConvNextPreTrainedModel,_.ConvNextV2ForImageClassification,_.ConvNextV2Model,_.ConvNextV2PreTrainedModel,_.DPTFeatureExtractor,_.DPTForDepthEstimation,_.DPTImageProcessor,_.DPTModel,_.DPTPreTrainedModel,_.DacDecoderModel,_.DacDecoderOutput,_.DacEncoderModel,_.DacEncoderOutput,_.DacFeatureExtractor,_.DacModel,_.DacPreTrainedModel,_.DataTypeMap,_.DebertaForMaskedLM,_.DebertaForQuestionAnswering,_.DebertaForSequenceClassification,_.DebertaForTokenClassification,_.DebertaModel,_.DebertaPreTrainedModel,_.DebertaTokenizer,_.DebertaV2ForMaskedLM,_.DebertaV2ForQuestionAnswering,_.DebertaV2ForSequenceClassification,_.DebertaV2ForTokenClassification,_.DebertaV2Model,_.DebertaV2PreTrainedModel,_.DebertaV2Tokenizer,_.DecisionTransformerModel,_.DecisionTransformerPreTrainedModel,_.DeiTFeatureExtractor,_.DeiTForImageClassification,_.DeiTImageProcessor,_.DeiTModel,_.DeiTPreTrainedModel,_.DepthAnythingForDepthEstimation,_.DepthAnythingPreTrainedModel,_.DepthEstimationPipeline,_.DepthProForDepthEstimation,_.DepthProPreTrainedModel,_.DetrFeatureExtractor,_.DetrForObjectDetection,_.DetrForSegmentation,_.DetrImageProcessor,_.DetrModel,_.DetrObjectDetectionOutput,_.DetrPreTrainedModel,_.DetrSegmentationOutput,_.Dinov2ForImageClassification,_.Dinov2Model,_.Dinov2PreTrainedModel,_.Dinov2WithRegistersForImageClassification,_.Dinov2WithRegistersModel,_.Dinov2WithRegistersPreTrainedModel,_.DistilBertForMaskedLM,_.DistilBertForQuestionAnswering,_.DistilBertForSequenceClassification,_.DistilBertForTokenClassification,_.DistilBertModel,_.DistilBertPreTrainedModel,_.DistilBertTokenizer,_.DocumentQuestionAnsweringPipeline,_.DonutFeatureExtractor,_.DonutImageProcessor,_.DonutSwinModel,_.DonutSwinPreTrainedModel,_.EfficientNetForImageClassification,_.EfficientNetImageProcessor,_.EfficientNetModel,_.EfficientNetPreTrainedModel,_.ElectraForMaskedLM,_.ElectraForQuestionAnswering,_.ElectraForSequenceClassification,_.ElectraForTokenClassification,_.ElectraModel,_.ElectraPreTrainedModel,_.ElectraTokenizer,_.EncodecFeatureExtractor,_.EosTokenCriteria,_.EsmForMaskedLM,_.EsmForSequenceClassification,_.EsmForTokenClassification,_.EsmModel,_.EsmPreTrainedModel,_.EsmTokenizer,_.ExaoneForCausalLM,_.ExaoneModel,_.ExaonePreTrainedModel,_.FFT,_.FalconForCausalLM,_.FalconModel,_.FalconPreTrainedModel,_.FalconTokenizer,_.FastViTForImageClassification,_.FastViTModel,_.FastViTPreTrainedModel,_.FeatureExtractionPipeline,_.FeatureExtractor,_.FillMaskPipeline,_.Florence2ForConditionalGeneration,_.Florence2PreTrainedModel,_.Florence2Processor,_.ForcedBOSTokenLogitsProcessor,_.ForcedEOSTokenLogitsProcessor,_.GLPNFeatureExtractor,_.GLPNForDepthEstimation,_.GLPNModel,_.GLPNPreTrainedModel,_.GPT2LMHeadModel,_.GPT2Model,_.GPT2PreTrainedModel,_.GPT2Tokenizer,_.GPTBigCodeForCausalLM,_.GPTBigCodeModel,_.GPTBigCodePreTrainedModel,_.GPTJForCausalLM,_.GPTJModel,_.GPTJPreTrainedModel,_.GPTNeoForCausalLM,_.GPTNeoModel,_.GPTNeoPreTrainedModel,_.GPTNeoXForCausalLM,_.GPTNeoXModel,_.GPTNeoXPreTrainedModel,_.GPTNeoXTokenizer,_.Gemma2ForCausalLM,_.Gemma2Model,_.Gemma2PreTrainedModel,_.Gemma3ForCausalLM,_.Gemma3Model,_.Gemma3PreTrainedModel,_.GemmaForCausalLM,_.GemmaModel,_.GemmaPreTrainedModel,_.GemmaTokenizer,_.GlmForCausalLM,_.GlmModel,_.GlmPreTrainedModel,_.GraniteForCausalLM,_.GraniteModel,_.GranitePreTrainedModel,_.Grok1Tokenizer,_.GroundingDinoForObjectDetection,_.GroundingDinoImageProcessor,_.GroundingDinoPreTrainedModel,_.GroundingDinoProcessor,_.GroupViTModel,_.GroupViTPreTrainedModel,_.HeliumForCausalLM,_.HeliumModel,_.HeliumPreTrainedModel,_.HerbertTokenizer,_.HieraForImageClassification,_.HieraModel,_.HieraPreTrainedModel,_.HubertForCTC,_.HubertForSequenceClassification,_.HubertModel,_.HubertPreTrainedModel,_.IJepaForImageClassification,_.IJepaModel,_.IJepaPreTrainedModel,_.Idefics3ForConditionalGeneration,_.Idefics3ImageProcessor,_.Idefics3PreTrainedModel,_.Idefics3Processor,_.ImageClassificationPipeline,_.ImageFeatureExtractionPipeline,_.ImageFeatureExtractor,_.ImageMattingOutput,_.ImageProcessor,_.ImageSegmentationPipeline,_.ImageToImagePipeline,_.ImageToTextPipeline,_.InterruptableStoppingCriteria,_.JAISLMHeadModel,_.JAISModel,_.JAISPreTrainedModel,_.JinaCLIPImageProcessor,_.JinaCLIPModel,_.JinaCLIPPreTrainedModel,_.JinaCLIPProcessor,_.JinaCLIPTextModel,_.JinaCLIPVisionModel,_.LiteWhisperForConditionalGeneration,_.LlamaForCausalLM,_.LlamaModel,_.LlamaPreTrainedModel,_.LlamaTokenizer,_.LlavaForConditionalGeneration,_.LlavaOnevisionForConditionalGeneration,_.LlavaOnevisionImageProcessor,_.LlavaPreTrainedModel,_.LogitsProcessor,_.LogitsProcessorList,_.LogitsWarper,_.LongT5ForConditionalGeneration,_.LongT5Model,_.LongT5PreTrainedModel,_.M2M100ForConditionalGeneration,_.M2M100Model,_.M2M100PreTrainedModel,_.M2M100Tokenizer,_.MBart50Tokenizer,_.MBartForCausalLM,_.MBartForConditionalGeneration,_.MBartForSequenceClassification,_.MBartModel,_.MBartPreTrainedModel,_.MBartTokenizer,_.MPNetForMaskedLM,_.MPNetForQuestionAnswering,_.MPNetForSequenceClassification,_.MPNetForTokenClassification,_.MPNetModel,_.MPNetPreTrainedModel,_.MPNetTokenizer,_.MT5ForConditionalGeneration,_.MT5Model,_.MT5PreTrainedModel,_.MarianMTModel,_.MarianModel,_.MarianPreTrainedModel,_.MarianTokenizer,_.Mask2FormerImageProcessor,_.MaskFormerFeatureExtractor,_.MaskFormerForInstanceSegmentation,_.MaskFormerImageProcessor,_.MaskFormerModel,_.MaskFormerPreTrainedModel,_.MaskedLMOutput,_.MaxLengthCriteria,_.Metric3DForDepthEstimation,_.Metric3DPreTrainedModel,_.Metric3Dv2ForDepthEstimation,_.Metric3Dv2PreTrainedModel,_.MgpstrForSceneTextRecognition,_.MgpstrModelOutput,_.MgpstrPreTrainedModel,_.MgpstrProcessor,_.MgpstrTokenizer,_.MimiDecoderModel,_.MimiDecoderOutput,_.MimiEncoderModel,_.MimiEncoderOutput,_.MimiModel,_.MimiPreTrainedModel,_.MinLengthLogitsProcessor,_.MinNewTokensLengthLogitsProcessor,_.MistralForCausalLM,_.MistralModel,_.MistralPreTrainedModel,_.MobileBertForMaskedLM,_.MobileBertForQuestionAnswering,_.MobileBertForSequenceClassification,_.MobileBertModel,_.MobileBertPreTrainedModel,_.MobileBertTokenizer,_.MobileLLMForCausalLM,_.MobileLLMModel,_.MobileLLMPreTrainedModel,_.MobileNetV1FeatureExtractor,_.MobileNetV1ForImageClassification,_.MobileNetV1ForSemanticSegmentation,_.MobileNetV1ImageProcessor,_.MobileNetV1Model,_.MobileNetV1PreTrainedModel,_.MobileNetV2FeatureExtractor,_.MobileNetV2ForImageClassification,_.MobileNetV2ForSemanticSegmentation,_.MobileNetV2ImageProcessor,_.MobileNetV2Model,_.MobileNetV2PreTrainedModel,_.MobileNetV3FeatureExtractor,_.MobileNetV3ForImageClassification,_.MobileNetV3ForSemanticSegmentation,_.MobileNetV3ImageProcessor,_.MobileNetV3Model,_.MobileNetV3PreTrainedModel,_.MobileNetV4FeatureExtractor,_.MobileNetV4ForImageClassification,_.MobileNetV4ForSemanticSegmentation,_.MobileNetV4ImageProcessor,_.MobileNetV4Model,_.MobileNetV4PreTrainedModel,_.MobileViTFeatureExtractor,_.MobileViTForImageClassification,_.MobileViTImageProcessor,_.MobileViTModel,_.MobileViTPreTrainedModel,_.MobileViTV2ForImageClassification,_.MobileViTV2Model,_.MobileViTV2PreTrainedModel,_.ModelOutput,_.ModernBertForMaskedLM,_.ModernBertForSequenceClassification,_.ModernBertForTokenClassification,_.ModernBertModel,_.ModernBertPreTrainedModel,_.Moondream1ForConditionalGeneration,_.MoonshineFeatureExtractor,_.MoonshineForConditionalGeneration,_.MoonshineModel,_.MoonshinePreTrainedModel,_.MoonshineProcessor,_.MptForCausalLM,_.MptModel,_.MptPreTrainedModel,_.MultiModalityCausalLM,_.MultiModalityPreTrainedModel,_.MusicgenForCausalLM,_.MusicgenForConditionalGeneration,_.MusicgenModel,_.MusicgenPreTrainedModel,_.NllbTokenizer,_.NoBadWordsLogitsProcessor,_.NoRepeatNGramLogitsProcessor,_.NomicBertModel,_.NomicBertPreTrainedModel,_.NougatImageProcessor,_.NougatTokenizer,_.OPTForCausalLM,_.OPTModel,_.OPTPreTrainedModel,_.ObjectDetectionPipeline,_.Olmo2ForCausalLM,_.Olmo2Model,_.Olmo2PreTrainedModel,_.OlmoForCausalLM,_.OlmoModel,_.OlmoPreTrainedModel,_.OpenELMForCausalLM,_.OpenELMModel,_.OpenELMPreTrainedModel,_.OwlViTFeatureExtractor,_.OwlViTForObjectDetection,_.OwlViTImageProcessor,_.OwlViTModel,_.OwlViTPreTrainedModel,_.OwlViTProcessor,_.Owlv2ForObjectDetection,_.Owlv2ImageProcessor,_.Owlv2Model,_.Owlv2PreTrainedModel,_.PaliGemmaForConditionalGeneration,_.PaliGemmaPreTrainedModel,_.PaliGemmaProcessor,_.PatchTSMixerForPrediction,_.PatchTSMixerModel,_.PatchTSMixerPreTrainedModel,_.PatchTSTForPrediction,_.PatchTSTModel,_.PatchTSTPreTrainedModel,_.Phi3ForCausalLM,_.Phi3Model,_.Phi3PreTrainedModel,_.Phi3VForCausalLM,_.Phi3VImageProcessor,_.Phi3VPreTrainedModel,_.Phi3VProcessor,_.PhiForCausalLM,_.PhiModel,_.PhiPreTrainedModel,_.Pipeline,_.PreTrainedModel,_.PreTrainedTokenizer,_.PretrainedConfig,_.PretrainedMixin,_.Processor,_.PvtForImageClassification,_.PvtImageProcessor,_.PvtModel,_.PvtPreTrainedModel,_.PyAnnoteFeatureExtractor,_.PyAnnoteForAudioFrameClassification,_.PyAnnoteModel,_.PyAnnotePreTrainedModel,_.PyAnnoteProcessor,_.QuestionAnsweringModelOutput,_.QuestionAnsweringPipeline,_.Qwen2ForCausalLM,_.Qwen2Model,_.Qwen2PreTrainedModel,_.Qwen2Tokenizer,_.Qwen2VLForConditionalGeneration,_.Qwen2VLImageProcessor,_.Qwen2VLPreTrainedModel,_.Qwen2VLProcessor,_.RFDetrForObjectDetection,_.RFDetrModel,_.RFDetrObjectDetectionOutput,_.RFDetrPreTrainedModel,_.RTDetrForObjectDetection,_.RTDetrImageProcessor,_.RTDetrModel,_.RTDetrObjectDetectionOutput,_.RTDetrPreTrainedModel,_.RTDetrV2ForObjectDetection,_.RTDetrV2Model,_.RTDetrV2ObjectDetectionOutput,_.RTDetrV2PreTrainedModel,_.RawAudio,_.RawImage,_.RawVideo,_.RawVideoFrame,_.RepetitionPenaltyLogitsProcessor,_.ResNetForImageClassification,_.ResNetModel,_.ResNetPreTrainedModel,_.RoFormerForMaskedLM,_.RoFormerForQuestionAnswering,_.RoFormerForSequenceClassification,_.RoFormerForTokenClassification,_.RoFormerModel,_.RoFormerPreTrainedModel,_.RoFormerTokenizer,_.RobertaForMaskedLM,_.RobertaForQuestionAnswering,_.RobertaForSequenceClassification,_.RobertaForTokenClassification,_.RobertaModel,_.RobertaPreTrainedModel,_.RobertaTokenizer,_.SamImageProcessor,_.SamImageSegmentationOutput,_.SamModel,_.SamPreTrainedModel,_.SamProcessor,_.SapiensForDepthEstimation,_.SapiensForNormalEstimation,_.SapiensForSemanticSegmentation,_.SapiensPreTrainedModel,_.SeamlessM4TFeatureExtractor,_.SegformerFeatureExtractor,_.SegformerForImageClassification,_.SegformerForSemanticSegmentation,_.SegformerImageProcessor,_.SegformerModel,_.SegformerPreTrainedModel,_.Seq2SeqLMOutput,_.SequenceClassifierOutput,_.SiglipImageProcessor,_.SiglipModel,_.SiglipPreTrainedModel,_.SiglipTextModel,_.SiglipTokenizer,_.SiglipVisionModel,_.SmolVLMForConditionalGeneration,_.SmolVLMImageProcessor,_.SmolVLMProcessor,_.SnacDecoderModel,_.SnacEncoderModel,_.SnacFeatureExtractor,_.SnacModel,_.SnacPreTrainedModel,_.SpeechT5FeatureExtractor,_.SpeechT5ForSpeechToText,_.SpeechT5ForTextToSpeech,_.SpeechT5HifiGan,_.SpeechT5Model,_.SpeechT5PreTrainedModel,_.SpeechT5Processor,_.SpeechT5Tokenizer,_.SqueezeBertForMaskedLM,_.SqueezeBertForQuestionAnswering,_.SqueezeBertForSequenceClassification,_.SqueezeBertModel,_.SqueezeBertPreTrainedModel,_.SqueezeBertTokenizer,_.StableLmForCausalLM,_.StableLmModel,_.StableLmPreTrainedModel,_.Starcoder2ForCausalLM,_.Starcoder2Model,_.Starcoder2PreTrainedModel,_.StoppingCriteria,_.StoppingCriteriaList,_.StyleTextToSpeech2Model,_.StyleTextToSpeech2PreTrainedModel,_.SummarizationPipeline,_.SuppressTokensAtBeginLogitsProcessor,_.Swin2SRForImageSuperResolution,_.Swin2SRImageProcessor,_.Swin2SRModel,_.Swin2SRPreTrainedModel,_.SwinForImageClassification,_.SwinForSemanticSegmentation,_.SwinModel,_.SwinPreTrainedModel,_.T5ForConditionalGeneration,_.T5Model,_.T5PreTrainedModel,_.T5Tokenizer,_.TableTransformerForObjectDetection,_.TableTransformerModel,_.TableTransformerObjectDetectionOutput,_.TableTransformerPreTrainedModel,_.TemperatureLogitsWarper,_.Tensor,_.Text2TextGenerationPipeline,_.TextClassificationPipeline,_.TextGenerationPipeline;var px=_.TextStreamer;_.TextToAudioPipeline,_.TokenClassificationPipeline,_.TokenClassifierOutput,_.TokenizerModel,_.TopKLogitsWarper,_.TopPLogitsWarper,_.TrOCRForCausalLM,_.TrOCRPreTrainedModel,_.TranslationPipeline,_.UltravoxModel,_.UltravoxPreTrainedModel,_.UltravoxProcessor,_.UniSpeechForCTC,_.UniSpeechForSequenceClassification,_.UniSpeechModel,_.UniSpeechPreTrainedModel,_.UniSpeechSatForAudioFrameClassification,_.UniSpeechSatForCTC,_.UniSpeechSatForSequenceClassification,_.UniSpeechSatModel,_.UniSpeechSatPreTrainedModel,_.VLChatProcessor,_.VLMImageProcessor,_.ViTFeatureExtractor,_.ViTForImageClassification,_.ViTImageProcessor,_.ViTMAEModel,_.ViTMAEPreTrainedModel,_.ViTMSNForImageClassification,_.ViTMSNModel,_.ViTMSNPreTrainedModel,_.ViTModel,_.ViTPreTrainedModel,_.VisionEncoderDecoderModel,_.VitMatteForImageMatting,_.VitMatteImageProcessor,_.VitMattePreTrainedModel,_.VitPoseForPoseEstimation,_.VitPoseImageProcessor,_.VitPosePreTrainedModel,_.VitsModel,_.VitsModelOutput,_.VitsPreTrainedModel,_.VitsTokenizer,_.Wav2Vec2BertForCTC,_.Wav2Vec2BertForSequenceClassification,_.Wav2Vec2BertModel,_.Wav2Vec2BertPreTrainedModel,_.Wav2Vec2CTCTokenizer,_.Wav2Vec2FeatureExtractor,_.Wav2Vec2ForAudioFrameClassification,_.Wav2Vec2ForCTC,_.Wav2Vec2ForSequenceClassification,_.Wav2Vec2Model,_.Wav2Vec2PreTrainedModel,_.Wav2Vec2Processor,_.Wav2Vec2ProcessorWithLM,_.WavLMForAudioFrameClassification,_.WavLMForCTC,_.WavLMForSequenceClassification,_.WavLMForXVector,_.WavLMModel,_.WavLMPreTrainedModel,_.WeSpeakerFeatureExtractor,_.WeSpeakerResNetModel,_.WeSpeakerResNetPreTrainedModel,_.WhisperFeatureExtractor,_.WhisperForConditionalGeneration,_.WhisperModel,_.WhisperPreTrainedModel,_.WhisperProcessor,_.WhisperTextStreamer,_.WhisperTimeStampLogitsProcessor,_.WhisperTokenizer,_.XLMForQuestionAnswering,_.XLMForSequenceClassification,_.XLMForTokenClassification,_.XLMModel,_.XLMPreTrainedModel,_.XLMRobertaForMaskedLM,_.XLMRobertaForQuestionAnswering,_.XLMRobertaForSequenceClassification,_.XLMRobertaForTokenClassification,_.XLMRobertaModel,_.XLMRobertaPreTrainedModel,_.XLMRobertaTokenizer,_.XLMTokenizer,_.XLMWithLMHeadModel,_.XVectorOutput,_.YolosFeatureExtractor,_.YolosForObjectDetection,_.YolosImageProcessor,_.YolosModel,_.YolosObjectDetectionOutput,_.YolosPreTrainedModel,_.ZeroShotAudioClassificationPipeline,_.ZeroShotClassificationPipeline,_.ZeroShotImageClassificationPipeline,_.ZeroShotObjectDetectionPipeline,_.bankers_round,_.cat,_.cos_sim,_.dot,_.dynamic_time_warping;var La=_.env;_.full,_.full_like,_.getKeyValueShapes,_.hamming,_.hanning,_.interpolate,_.interpolate_4d,_.interpolate_data,_.is_chinese_char,_.layer_norm,_.load_image,_.load_video,_.log_softmax,_.magnitude,_.matmul,_.max,_.mean,_.mean_pooling,_.medianFilter,_.mel_filter_bank,_.min,_.ones,_.ones_like,_.permute,_.permute_data;var hx=_.pipeline;_.quantize_embeddings,_.rand,_.read_audio,_.rfft,_.round,_.slice,_.softmax,_.spectrogram,_.stack,_.std_mean,_.topk,_.window_function,_.zeros,_.zeros_like,La.localModelPath="../public/models/",La.allowRemoteModels=!1,La.allowLocalModels=!0,La.useBrowserCache=!1;class za{static async getInstance(r=null){return this.instance===null&&(this.instance=hx(this.task,this.model,{progress_callback:r,device:"webgpu",dtype:"q4"})),this.instance}}re(za,"task","text-generation"),re(za,"model","model_tjs_long"),re(za,"instance",null),self.addEventListener("message",async e=>{let r=await za.getInstance(l=>{self.postMessage(l)}),t=e.data.text,s="EOS_None",i=r.tokenizer.encode(s)[0],n="";const o=new px(r.tokenizer,{skip_prompt:!1,callback_function:l=>{n+=" "+l,self.postMessage({status:"update",output:n})}});console.log(t);let a=await r(t,{...e.data.generationParams,do_sample:!0,eos_token_id:i,streamer:o});console.log(a[0].generated_text),console.log(r.tokenizer.encode(a[0].generated_text)),self.postMessage({status:"complete",output:a[0].generated_text})})})();
